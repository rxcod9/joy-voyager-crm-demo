{
    "openapi": "3.0.2",
    "info": {
        "title": "Joy Voyager Crm Demo",
        "description": "Joy VoyagerApi module adds REST Api end points to Voyager with Passport and Swagger support https:\/\/github.com\/rxcod9\/joy-voyager-api.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http:\/\/localhost",
            "description": "Primary API Server"
        }
    ],
    "paths": {
        "\/api\/documents": {
            "get": {
                "tags": [
                    "documents"
                ],
                "summary": "documents index",
                "operationId": "documents_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "document_name",
                                "doc_id",
                                "doc_type",
                                "doc_url",
                                "active_date",
                                "exp_date",
                                "category_id",
                                "subcategory_id",
                                "status_id",
                                "document_revision_id",
                                "related_doc_id",
                                "related_doc_rev_id",
                                "is_template",
                                "template_type",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "document_belongstomany_accounts_relationship",
                                "document_belongstomany_contacts_relationship",
                                "document_belongstomany_bugs_relationship",
                                "document_belongstomany_opportunities_relationship",
                                "document_belongsto_related_doc_relationship",
                                "document_belongsto_related_doc_rev_relationship",
                                "document_belongsto_document_revision_relationship",
                                "document_belongsto_assigned_user_relationship",
                                "document_belongsto_created_by_relationship",
                                "document_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[document_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[doc_type][]",
                        "in": "query",
                        "description": "{\n    \"DocType1\": \"DocType1\",\n    \"DocType2\": \"DocType2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "DocType1",
                                    "DocType2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[doc_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[doc_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[document_belongstomany_accounts_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[exp_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[is_template]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[document_belongstomany_contacts_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[template_type][]",
                        "in": "query",
                        "description": "{\n    \"TemplateType1\": \"TemplateType1\",\n    \"TemplateType2\": \"TemplateType2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "TemplateType1",
                                    "TemplateType2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[category_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[document_belongstomany_bugs_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[document_belongstomany_opportunities_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[subcategory_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[active_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[related_doc_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[related_doc_rev_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[document_revision_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerDocumentsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "documents"
                ],
                "summary": "documents store",
                "operationId": "documents_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerDocumentsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/documents\/create": {
            "get": {
                "tags": [
                    "documents"
                ],
                "summary": "documents create",
                "operationId": "documents_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/documents\/{id}": {
            "get": {
                "tags": [
                    "documents"
                ],
                "summary": "documents show",
                "operationId": "documents_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "documents"
                ],
                "summary": "documents update",
                "operationId": "documents_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerDocumentsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "documents"
                ],
                "summary": "documents delete",
                "operationId": "documents_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/documents\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "documents"
                ],
                "summary": "documents single update",
                "operationId": "documents_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "document_name",
                                "description",
                                "template_type",
                                "doc_url",
                                "doc_id",
                                "document_belongstomany_accounts_relationship",
                                "exp_date",
                                "is_template",
                                "document_belongstomany_contacts_relationship",
                                "category_id",
                                "document_belongstomany_bugs_relationship",
                                "doc_type",
                                "status_id",
                                "active_date",
                                "subcategory_id",
                                "document_belongstomany_opportunities_relationship",
                                "document_belongsto_assigned_user_relationship",
                                "document_belongsto_document_revision_relationship",
                                "document_belongsto_related_doc_rev_relationship",
                                "document_belongsto_related_doc_relationship",
                                "assigned_user_id",
                                "document_revision_id",
                                "related_doc_rev_id",
                                "related_doc_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "document_name",
                                    "description",
                                    "template_type",
                                    "doc_url",
                                    "doc_id",
                                    "document_belongstomany_accounts_relationship",
                                    "exp_date",
                                    "is_template",
                                    "document_belongstomany_contacts_relationship",
                                    "category_id",
                                    "document_belongstomany_bugs_relationship",
                                    "doc_type",
                                    "status_id",
                                    "active_date",
                                    "subcategory_id",
                                    "document_belongstomany_opportunities_relationship",
                                    "document_belongsto_assigned_user_relationship",
                                    "document_belongsto_document_revision_relationship",
                                    "document_belongsto_related_doc_rev_relationship",
                                    "document_belongsto_related_doc_relationship",
                                    "assigned_user_id",
                                    "document_revision_id",
                                    "related_doc_rev_id",
                                    "related_doc_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerDocumentsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/documents\/{id}\/edit": {
            "get": {
                "tags": [
                    "documents"
                ],
                "summary": "documents edit",
                "operationId": "documents_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/documents\/relation": {
            "get": {
                "tags": [
                    "documents"
                ],
                "summary": "documents relation",
                "operationId": "documents_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/documents\/{id}\/restore": {
            "get": {
                "tags": [
                    "documents"
                ],
                "summary": "documents restore",
                "operationId": "documents_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/releases": {
            "get": {
                "tags": [
                    "releases"
                ],
                "summary": "releases index",
                "operationId": "releases_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "name",
                                "list_order",
                                "status",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "release_belongsto_created_by_relationship",
                                "release_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[list_order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerReleasesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "releases"
                ],
                "summary": "releases store",
                "operationId": "releases_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReleasesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReleasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/releases\/create": {
            "get": {
                "tags": [
                    "releases"
                ],
                "summary": "releases create",
                "operationId": "releases_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/releases\/{id}": {
            "get": {
                "tags": [
                    "releases"
                ],
                "summary": "releases show",
                "operationId": "releases_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReleasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "releases"
                ],
                "summary": "releases update",
                "operationId": "releases_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReleasesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReleasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "releases"
                ],
                "summary": "releases delete",
                "operationId": "releases_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/releases\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "releases"
                ],
                "summary": "releases single update",
                "operationId": "releases_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "list_order",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "list_order",
                                    "status"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReleasesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReleasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/releases\/{id}\/edit": {
            "get": {
                "tags": [
                    "releases"
                ],
                "summary": "releases edit",
                "operationId": "releases_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReleasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/releases\/relation": {
            "get": {
                "tags": [
                    "releases"
                ],
                "summary": "releases relation",
                "operationId": "releases_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/releases\/{id}\/restore": {
            "get": {
                "tags": [
                    "releases"
                ],
                "summary": "releases restore",
                "operationId": "releases_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-marketing": {
            "get": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email_marketing index",
                "operationId": "email_marketing_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "name",
                                "from_name",
                                "from_addr",
                                "reply_to_name",
                                "reply_to_addr",
                                "inbound_email_id",
                                "date_start",
                                "template_id",
                                "status",
                                "campaign_id",
                                "outbound_email_id",
                                "all_prospect_lists",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "email_marketing_belongsto_outbound_email_relationship",
                                "email_marketing_belongsto_email_template_relationship",
                                "email_marketing_belongsto_campaign_relationship",
                                "email_marketing_belongsto_inbound_email_relationship",
                                "email_marketing_belongstomany_prospect_lists_relationship",
                                "email_marketing_belongsto_created_by_relationship",
                                "email_marketing_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[template_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reply_to_addr]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[inbound_email_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[all_prospect_lists]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[outbound_email_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[campaign_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[from_addr]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[from_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reply_to_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_start]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[email_marketing_belongstomany_prospect_lists_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerEmailMarketingBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing store",
                "operationId": "email-marketing_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailMarketingStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailMarketingReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-marketing\/create": {
            "get": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email_marketing create",
                "operationId": "email_marketing_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-marketing\/{id}": {
            "get": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing show",
                "operationId": "email-marketing_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailMarketingReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing update",
                "operationId": "email-marketing_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailMarketingUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailMarketingReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing delete",
                "operationId": "email-marketing_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-marketing\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing single update",
                "operationId": "email-marketing_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "email_marketing_belongsto_campaign_relationship",
                                "reply_to_addr",
                                "inbound_email_id",
                                "all_prospect_lists",
                                "email_marketing_belongsto_outbound_email_relationship",
                                "email_marketing_belongsto_email_template_relationship",
                                "campaign_id",
                                "from_addr",
                                "email_marketing_belongstomany_prospect_lists_relationship",
                                "template_id",
                                "status",
                                "from_name",
                                "outbound_email_id",
                                "email_marketing_belongsto_inbound_email_relationship",
                                "reply_to_name",
                                "date_start"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "email_marketing_belongsto_campaign_relationship",
                                    "reply_to_addr",
                                    "inbound_email_id",
                                    "all_prospect_lists",
                                    "email_marketing_belongsto_outbound_email_relationship",
                                    "email_marketing_belongsto_email_template_relationship",
                                    "campaign_id",
                                    "from_addr",
                                    "email_marketing_belongstomany_prospect_lists_relationship",
                                    "template_id",
                                    "status",
                                    "from_name",
                                    "outbound_email_id",
                                    "email_marketing_belongsto_inbound_email_relationship",
                                    "reply_to_name",
                                    "date_start"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailMarketingSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailMarketingReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-marketing\/{id}\/edit": {
            "get": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing edit",
                "operationId": "email-marketing_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailMarketingReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-marketing\/relation": {
            "get": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing relation",
                "operationId": "email-marketing_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-marketing\/{id}\/restore": {
            "get": {
                "tags": [
                    "email-marketing"
                ],
                "summary": "email-marketing restore",
                "operationId": "email-marketing_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-invoices": {
            "get": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos_invoices index",
                "operationId": "aos_invoices_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "billing_account_id",
                                "billing_contact_id",
                                "billing_address_street",
                                "billing_address_city",
                                "billing_address_state",
                                "billing_address_postalcode",
                                "billing_address_country",
                                "shipping_address_street",
                                "shipping_address_city",
                                "shipping_address_state",
                                "shipping_address_postalcode",
                                "shipping_address_country",
                                "number",
                                "total_amt",
                                "total_amt_usdollar",
                                "subtotal_amount",
                                "subtotal_amount_usdollar",
                                "discount_amount",
                                "discount_amount_usdollar",
                                "tax_amount",
                                "tax_amount_usdollar",
                                "shipping_amount",
                                "shipping_amount_usdollar",
                                "shipping_tax",
                                "shipping_tax_amt",
                                "shipping_tax_amt_usdollar",
                                "total_amount",
                                "total_amount_usdollar",
                                "currency_id",
                                "quote_number",
                                "quote_date",
                                "invoice_date",
                                "due_date",
                                "status",
                                "template_ddown_c",
                                "subtotal_tax_amount",
                                "subtotal_tax_amount_usdollar",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aos_invoice_belongsto_billing_contact_relationship",
                                "aos_invoice_belongsto_billing_account_relationship",
                                "aos_invoice_belongsto_currency_relationship",
                                "aos_invoice_belongsto_assigned_user_relationship",
                                "aos_invoice_belongsto_created_by_relationship",
                                "aos_invoice_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[billing_contact_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[subtotal_tax_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[currency_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[total_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[due_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[quote_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[discount_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_tax_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[tax_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[discount_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amt_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_account_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[invoice_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[subtotal_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_tax]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[billing_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[total_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[tax_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_tax_amt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_tax_amt_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[quote_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAosInvoicesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices store",
                "operationId": "aos-invoices_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosInvoicesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosInvoicesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-invoices\/create": {
            "get": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos_invoices create",
                "operationId": "aos_invoices_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-invoices\/{id}": {
            "get": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices show",
                "operationId": "aos-invoices_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosInvoicesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices update",
                "operationId": "aos-invoices_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosInvoicesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosInvoicesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices delete",
                "operationId": "aos-invoices_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-invoices\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices single update",
                "operationId": "aos-invoices_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "aos_invoice_belongsto_billing_contact_relationship",
                                "total_amt",
                                "subtotal_amount",
                                "shipping_address_street",
                                "shipping_amount_usdollar",
                                "number",
                                "billing_address_street",
                                "currency_id",
                                "total_amount",
                                "billing_contact_id",
                                "subtotal_tax_amount_usdollar",
                                "due_date",
                                "template_ddown_c",
                                "quote_date",
                                "discount_amount_usdollar",
                                "subtotal_tax_amount",
                                "billing_address_postalcode",
                                "tax_amount_usdollar",
                                "shipping_address_country",
                                "discount_amount",
                                "aos_invoice_belongsto_currency_relationship",
                                "billing_account_id",
                                "invoice_date",
                                "subtotal_amount_usdollar",
                                "shipping_address_state",
                                "aos_invoice_belongsto_billing_account_relationship",
                                "shipping_tax",
                                "billing_address_city",
                                "shipping_amount",
                                "billing_address_country",
                                "billing_address_state",
                                "total_amount_usdollar",
                                "shipping_address_postalcode",
                                "tax_amount",
                                "shipping_tax_amt",
                                "shipping_address_city",
                                "shipping_tax_amt_usdollar",
                                "quote_number",
                                "total_amt_usdollar",
                                "status",
                                "aos_invoice_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "aos_invoice_belongsto_billing_contact_relationship",
                                    "total_amt",
                                    "subtotal_amount",
                                    "shipping_address_street",
                                    "shipping_amount_usdollar",
                                    "number",
                                    "billing_address_street",
                                    "currency_id",
                                    "total_amount",
                                    "billing_contact_id",
                                    "subtotal_tax_amount_usdollar",
                                    "due_date",
                                    "template_ddown_c",
                                    "quote_date",
                                    "discount_amount_usdollar",
                                    "subtotal_tax_amount",
                                    "billing_address_postalcode",
                                    "tax_amount_usdollar",
                                    "shipping_address_country",
                                    "discount_amount",
                                    "aos_invoice_belongsto_currency_relationship",
                                    "billing_account_id",
                                    "invoice_date",
                                    "subtotal_amount_usdollar",
                                    "shipping_address_state",
                                    "aos_invoice_belongsto_billing_account_relationship",
                                    "shipping_tax",
                                    "billing_address_city",
                                    "shipping_amount",
                                    "billing_address_country",
                                    "billing_address_state",
                                    "total_amount_usdollar",
                                    "shipping_address_postalcode",
                                    "tax_amount",
                                    "shipping_tax_amt",
                                    "shipping_address_city",
                                    "shipping_tax_amt_usdollar",
                                    "quote_number",
                                    "total_amt_usdollar",
                                    "status",
                                    "aos_invoice_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosInvoicesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosInvoicesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-invoices\/{id}\/edit": {
            "get": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices edit",
                "operationId": "aos-invoices_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosInvoicesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-invoices\/relation": {
            "get": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices relation",
                "operationId": "aos-invoices_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-invoices\/{id}\/restore": {
            "get": {
                "tags": [
                    "aos-invoices"
                ],
                "summary": "aos-invoices restore",
                "operationId": "aos-invoices_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/eapms": {
            "get": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapm index",
                "operationId": "eapm_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "password",
                                "url",
                                "application",
                                "api_data",
                                "consumer_key",
                                "consumer_secret",
                                "oauth_token",
                                "oauth_secret",
                                "validated",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "eapm_belongsto_assigned_user_relationship",
                                "eapm_belongsto_created_by_relationship",
                                "eapm_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[api_data]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[oauth_token]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[application]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[consumer_secret]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[oauth_secret]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[password]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[validated]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[consumer_key]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerEapmBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms store",
                "operationId": "eapms_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEapmStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEapmReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/eapms\/create": {
            "get": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapm create",
                "operationId": "eapm_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/eapms\/{id}": {
            "get": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms show",
                "operationId": "eapms_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEapmReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms update",
                "operationId": "eapms_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEapmUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEapmReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms delete",
                "operationId": "eapms_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/eapms\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms single update",
                "operationId": "eapms_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "consumer_key",
                                "api_data",
                                "validated",
                                "password",
                                "oauth_secret",
                                "consumer_secret",
                                "application",
                                "oauth_token",
                                "url",
                                "eapm_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "consumer_key",
                                    "api_data",
                                    "validated",
                                    "password",
                                    "oauth_secret",
                                    "consumer_secret",
                                    "application",
                                    "oauth_token",
                                    "url",
                                    "eapm_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEapmSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEapmReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/eapms\/{id}\/edit": {
            "get": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms edit",
                "operationId": "eapms_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEapmReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/eapms\/relation": {
            "get": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms relation",
                "operationId": "eapms_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/eapms\/{id}\/restore": {
            "get": {
                "tags": [
                    "eapms"
                ],
                "summary": "eapms restore",
                "operationId": "eapms_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-event-locations": {
            "get": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp_event_locations index",
                "operationId": "fp_event_locations_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "address",
                                "address_city",
                                "address_country",
                                "address_postalcode",
                                "address_state",
                                "capacity",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "fp_event_location_belongsto_assigned_user_relationship",
                                "fp_event_location_belongsto_created_by_relationship",
                                "fp_event_location_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[capacity]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFpEventLocationsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations store",
                "operationId": "fp-event-locations_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFpEventLocationsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventLocationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-event-locations\/create": {
            "get": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp_event_locations create",
                "operationId": "fp_event_locations_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-event-locations\/{id}": {
            "get": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations show",
                "operationId": "fp-event-locations_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventLocationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations update",
                "operationId": "fp-event-locations_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFpEventLocationsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventLocationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations delete",
                "operationId": "fp-event-locations_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-event-locations\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations single update",
                "operationId": "fp-event-locations_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "address_country",
                                "capacity",
                                "address",
                                "address_state",
                                "address_city",
                                "address_postalcode",
                                "fp_event_location_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "address_country",
                                    "capacity",
                                    "address",
                                    "address_state",
                                    "address_city",
                                    "address_postalcode",
                                    "fp_event_location_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFpEventLocationsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventLocationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-event-locations\/{id}\/edit": {
            "get": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations edit",
                "operationId": "fp-event-locations_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventLocationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-event-locations\/relation": {
            "get": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations relation",
                "operationId": "fp-event-locations_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-event-locations\/{id}\/restore": {
            "get": {
                "tags": [
                    "fp-event-locations"
                ],
                "summary": "fp-event-locations restore",
                "operationId": "fp-event-locations_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/currencies": {
            "get": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies index",
                "operationId": "currencies_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "symbol",
                                "iso4217",
                                "decimal",
                                "rounding",
                                "conversion_rate",
                                "status",
                                "modified_by_id",
                                "created_by_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "currency_belongsto_created_by_relationship",
                                "currency_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[symbol]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[iso4217]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[decimal]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[rounding]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[conversion_rate]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Active",
                                    "Inactive"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCurrenciesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies store",
                "operationId": "currencies_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCurrenciesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCurrenciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/currencies\/create": {
            "get": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies create",
                "operationId": "currencies_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/currencies\/{id}": {
            "get": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies show",
                "operationId": "currencies_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCurrenciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies update",
                "operationId": "currencies_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCurrenciesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCurrenciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies delete",
                "operationId": "currencies_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/currencies\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies single update",
                "operationId": "currencies_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "symbol",
                                "iso4217",
                                "decimal",
                                "rounding",
                                "conversion_rate",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "symbol",
                                    "iso4217",
                                    "decimal",
                                    "rounding",
                                    "conversion_rate",
                                    "status"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCurrenciesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCurrenciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/currencies\/{id}\/edit": {
            "get": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies edit",
                "operationId": "currencies_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCurrenciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/currencies\/relation": {
            "get": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies relation",
                "operationId": "currencies_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/currencies\/{id}\/restore": {
            "get": {
                "tags": [
                    "currencies"
                ],
                "summary": "currencies restore",
                "operationId": "currencies_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/alerts": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts index",
                "operationId": "alerts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "is_read",
                                "target_module",
                                "type",
                                "url_redirect",
                                "reminder_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "alert_belongsto_reminder_relationship",
                                "alert_belongsto_assigned_user_relationship",
                                "alert_belongsto_created_by_relationship",
                                "alert_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[reminder_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_read]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[target_module][]",
                        "in": "query",
                        "description": "{\n    \"accounts\": \"Accounts\",\n    \"contacts\": \"Contacts\",\n    \"opportunities\": \"Opportunities\",\n    \"leads\": \"Leads\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "accounts",
                                    "contacts",
                                    "opportunities",
                                    "leads"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[url_redirect]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAlertsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts store",
                "operationId": "alerts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAlertsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAlertsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/alerts\/create": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts create",
                "operationId": "alerts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/alerts\/{id}": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts show",
                "operationId": "alerts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAlertsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts update",
                "operationId": "alerts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAlertsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAlertsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts delete",
                "operationId": "alerts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/alerts\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts single update",
                "operationId": "alerts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "alert_belongsto_reminder_relationship",
                                "reminder_id",
                                "name",
                                "description",
                                "is_read",
                                "type",
                                "target_module",
                                "url_redirect",
                                "alert_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "alert_belongsto_reminder_relationship",
                                    "reminder_id",
                                    "name",
                                    "description",
                                    "is_read",
                                    "type",
                                    "target_module",
                                    "url_redirect",
                                    "alert_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAlertsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAlertsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/alerts\/{id}\/edit": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts edit",
                "operationId": "alerts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAlertsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/alerts\/relation": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts relation",
                "operationId": "alerts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/alerts\/{id}\/restore": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "alerts restore",
                "operationId": "alerts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aod-indexes": {
            "get": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod_indexes index",
                "operationId": "aod_indexes_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "aod_index_belongsto_assigned_user_relationship",
                                "aod_index_belongsto_created_by_relationship",
                                "aod_index_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[location]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[last_optimised]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAodIndexesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes store",
                "operationId": "aod-indexes_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAodIndexesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAodIndexesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aod-indexes\/create": {
            "get": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod_indexes create",
                "operationId": "aod_indexes_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aod-indexes\/{id}": {
            "get": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes show",
                "operationId": "aod-indexes_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAodIndexesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes update",
                "operationId": "aod-indexes_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAodIndexesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAodIndexesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes delete",
                "operationId": "aod-indexes_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aod-indexes\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes single update",
                "operationId": "aod-indexes_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "location",
                                "last_optimised",
                                "aod_index_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "location",
                                    "last_optimised",
                                    "aod_index_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAodIndexesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAodIndexesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aod-indexes\/{id}\/edit": {
            "get": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes edit",
                "operationId": "aod-indexes_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAodIndexesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aod-indexes\/relation": {
            "get": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes relation",
                "operationId": "aod-indexes_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aod-indexes\/{id}\/restore": {
            "get": {
                "tags": [
                    "aod-indexes"
                ],
                "summary": "aod-indexes restore",
                "operationId": "aod-indexes_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups-users": {
            "get": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups_users index",
                "operationId": "securitygroups_users_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "securitygroup_id",
                                "user_id",
                                "primary_group",
                                "noninheritable",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "securitygroups_user_belongsto_user_relationship",
                                "securitygroups_user_belongsto_securitygroup_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[primary_group]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[noninheritable]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[securitygroup_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsUsersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users store",
                "operationId": "securitygroups-users_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSecuritygroupsUsersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups-users\/create": {
            "get": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups_users create",
                "operationId": "securitygroups_users_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups-users\/{id}": {
            "get": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users show",
                "operationId": "securitygroups-users_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users update",
                "operationId": "securitygroups-users_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSecuritygroupsUsersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users delete",
                "operationId": "securitygroups-users_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups-users\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users single update",
                "operationId": "securitygroups-users_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "primary_group",
                                "noninheritable",
                                "securitygroups_user_belongsto_user_relationship",
                                "securitygroups_user_belongsto_securitygroup_relationship",
                                "securitygroup_id",
                                "user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "primary_group",
                                    "noninheritable",
                                    "securitygroups_user_belongsto_user_relationship",
                                    "securitygroups_user_belongsto_securitygroup_relationship",
                                    "securitygroup_id",
                                    "user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSecuritygroupsUsersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups-users\/{id}\/edit": {
            "get": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users edit",
                "operationId": "securitygroups-users_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups-users\/relation": {
            "get": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users relation",
                "operationId": "securitygroups-users_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups-users\/{id}\/restore": {
            "get": {
                "tags": [
                    "securitygroups-users"
                ],
                "summary": "securitygroups-users restore",
                "operationId": "securitygroups-users_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-scheduled-reports": {
            "get": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor_scheduled_reports index",
                "operationId": "aor_scheduled_reports_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "schedule",
                                "last_run",
                                "status",
                                "email_recipients",
                                "aor_report_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aor_scheduled_report_belongsto_aor_report_relationship",
                                "aor_scheduled_report_belongsto_assigned_user_relationship",
                                "aor_scheduled_report_belongsto_created_by_relationship",
                                "aor_scheduled_report_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[last_run]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[aor_report_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[schedule]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAorScheduledReportsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports store",
                "operationId": "aor-scheduled-reports_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorScheduledReportsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorScheduledReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-scheduled-reports\/create": {
            "get": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor_scheduled_reports create",
                "operationId": "aor_scheduled_reports_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-scheduled-reports\/{id}": {
            "get": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports show",
                "operationId": "aor-scheduled-reports_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorScheduledReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports update",
                "operationId": "aor-scheduled-reports_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorScheduledReportsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorScheduledReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports delete",
                "operationId": "aor-scheduled-reports_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-scheduled-reports\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports single update",
                "operationId": "aor-scheduled-reports_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "last_run",
                                "status",
                                "aor_report_id",
                                "aor_scheduled_report_belongsto_aor_report_relationship",
                                "schedule",
                                "email_recipients",
                                "aor_scheduled_report_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "last_run",
                                    "status",
                                    "aor_report_id",
                                    "aor_scheduled_report_belongsto_aor_report_relationship",
                                    "schedule",
                                    "email_recipients",
                                    "aor_scheduled_report_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorScheduledReportsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorScheduledReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-scheduled-reports\/{id}\/edit": {
            "get": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports edit",
                "operationId": "aor-scheduled-reports_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorScheduledReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-scheduled-reports\/relation": {
            "get": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports relation",
                "operationId": "aor-scheduled-reports_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-scheduled-reports\/{id}\/restore": {
            "get": {
                "tags": [
                    "aor-scheduled-reports"
                ],
                "summary": "aor-scheduled-reports restore",
                "operationId": "aor-scheduled-reports_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus": {
            "get": {
                "tags": [
                    "menus"
                ],
                "summary": "menus index",
                "operationId": "menus_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMenusBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "menus"
                ],
                "summary": "menus store",
                "operationId": "menus_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/create": {
            "get": {
                "tags": [
                    "menus"
                ],
                "summary": "menus create",
                "operationId": "menus_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}": {
            "get": {
                "tags": [
                    "menus"
                ],
                "summary": "menus show",
                "operationId": "menus_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "menus"
                ],
                "summary": "menus update",
                "operationId": "menus_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "menus"
                ],
                "summary": "menus delete",
                "operationId": "menus_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "menus"
                ],
                "summary": "menus single update",
                "operationId": "menus_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/edit": {
            "get": {
                "tags": [
                    "menus"
                ],
                "summary": "menus edit",
                "operationId": "menus_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/relation": {
            "get": {
                "tags": [
                    "menus"
                ],
                "summary": "menus relation",
                "operationId": "menus_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/restore": {
            "get": {
                "tags": [
                    "menus"
                ],
                "summary": "menus restore",
                "operationId": "menus_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-quotes": {
            "get": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos_quotes index",
                "operationId": "aos_quotes_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "approval_issue",
                                "billing_account_id",
                                "billing_contact_id",
                                "billing_address_street",
                                "billing_address_city",
                                "billing_address_state",
                                "billing_address_postalcode",
                                "billing_address_country",
                                "shipping_address_street",
                                "shipping_address_city",
                                "shipping_address_state",
                                "shipping_address_postalcode",
                                "shipping_address_country",
                                "expiration",
                                "number",
                                "opportunity_id",
                                "template_ddown_c",
                                "total_amt",
                                "total_amt_usdollar",
                                "subtotal_amount",
                                "subtotal_amount_usdollar",
                                "discount_amount",
                                "discount_amount_usdollar",
                                "tax_amount",
                                "tax_amount_usdollar",
                                "shipping_amount",
                                "shipping_amount_usdollar",
                                "shipping_tax",
                                "shipping_tax_amt",
                                "shipping_tax_amt_usdollar",
                                "total_amount",
                                "total_amount_usdollar",
                                "currency_id",
                                "stage",
                                "term",
                                "terms_c",
                                "approval_status",
                                "invoice_status",
                                "subtotal_tax_amount",
                                "subtotal_tax_amount_usdollar",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aos_quote_belongsto_billing_contact_relationship",
                                "aos_quote_belongsto_currency_relationship",
                                "aos_quote_belongsto_opportunity_relationship",
                                "aos_quote_belongsto_billing_account_relationship",
                                "aos_quote_belongsto_assigned_user_relationship",
                                "aos_quote_belongsto_created_by_relationship",
                                "aos_quote_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[opportunity_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[tax_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_contact_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[approval_status][]",
                        "in": "query",
                        "description": "{\n    \"Approval1\": \"Approval1\",\n    \"Approval2\": \"Approval2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Approval1",
                                    "Approval2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[billing_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[discount_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[billing_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_account_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[subtotal_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[discount_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_tax_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[stage][]",
                        "in": "query",
                        "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Stage1",
                                    "Stage2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[tax_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_tax_amt_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[currency_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[shipping_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[term]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[expiration]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[shipping_tax]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[subtotal_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_tax_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_tax_amt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[total_amt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[billing_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[invoice_status][]",
                        "in": "query",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Active",
                                    "Inactive"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[total_amt_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAosQuotesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes store",
                "operationId": "aos-quotes_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosQuotesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosQuotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-quotes\/create": {
            "get": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos_quotes create",
                "operationId": "aos_quotes_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-quotes\/{id}": {
            "get": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes show",
                "operationId": "aos-quotes_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosQuotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes update",
                "operationId": "aos-quotes_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosQuotesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosQuotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes delete",
                "operationId": "aos-quotes_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-quotes\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes single update",
                "operationId": "aos-quotes_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "terms_c",
                                "number",
                                "billing_address_postalcode",
                                "discount_amount",
                                "billing_address_country",
                                "billing_address_state",
                                "shipping_amount_usdollar",
                                "billing_account_id",
                                "opportunity_id",
                                "total_amount_usdollar",
                                "discount_amount_usdollar",
                                "subtotal_tax_amount_usdollar",
                                "stage",
                                "tax_amount",
                                "shipping_address_country",
                                "currency_id",
                                "approval_issue",
                                "shipping_tax_amt_usdollar",
                                "shipping_address_street",
                                "shipping_address_state",
                                "template_ddown_c",
                                "aos_quote_belongsto_billing_contact_relationship",
                                "term",
                                "shipping_tax_amt",
                                "aos_quote_belongsto_currency_relationship",
                                "expiration",
                                "shipping_tax",
                                "shipping_address_city",
                                "subtotal_amount",
                                "total_amount",
                                "billing_contact_id",
                                "aos_quote_belongsto_opportunity_relationship",
                                "shipping_amount",
                                "subtotal_tax_amount",
                                "approval_status",
                                "billing_address_street",
                                "total_amt",
                                "billing_address_city",
                                "invoice_status",
                                "total_amt_usdollar",
                                "shipping_address_postalcode",
                                "subtotal_amount_usdollar",
                                "aos_quote_belongsto_billing_account_relationship",
                                "tax_amount_usdollar",
                                "aos_quote_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "terms_c",
                                    "number",
                                    "billing_address_postalcode",
                                    "discount_amount",
                                    "billing_address_country",
                                    "billing_address_state",
                                    "shipping_amount_usdollar",
                                    "billing_account_id",
                                    "opportunity_id",
                                    "total_amount_usdollar",
                                    "discount_amount_usdollar",
                                    "subtotal_tax_amount_usdollar",
                                    "stage",
                                    "tax_amount",
                                    "shipping_address_country",
                                    "currency_id",
                                    "approval_issue",
                                    "shipping_tax_amt_usdollar",
                                    "shipping_address_street",
                                    "shipping_address_state",
                                    "template_ddown_c",
                                    "aos_quote_belongsto_billing_contact_relationship",
                                    "term",
                                    "shipping_tax_amt",
                                    "aos_quote_belongsto_currency_relationship",
                                    "expiration",
                                    "shipping_tax",
                                    "shipping_address_city",
                                    "subtotal_amount",
                                    "total_amount",
                                    "billing_contact_id",
                                    "aos_quote_belongsto_opportunity_relationship",
                                    "shipping_amount",
                                    "subtotal_tax_amount",
                                    "approval_status",
                                    "billing_address_street",
                                    "total_amt",
                                    "billing_address_city",
                                    "invoice_status",
                                    "total_amt_usdollar",
                                    "shipping_address_postalcode",
                                    "subtotal_amount_usdollar",
                                    "aos_quote_belongsto_billing_account_relationship",
                                    "tax_amount_usdollar",
                                    "aos_quote_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosQuotesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosQuotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-quotes\/{id}\/edit": {
            "get": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes edit",
                "operationId": "aos-quotes_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosQuotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-quotes\/relation": {
            "get": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes relation",
                "operationId": "aos-quotes_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-quotes\/{id}\/restore": {
            "get": {
                "tags": [
                    "aos-quotes"
                ],
                "summary": "aos-quotes restore",
                "operationId": "aos-quotes_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebase-base-categories": {
            "get": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok_knowledgebase_base_categories index",
                "operationId": "aok_knowledgebase_base_categories_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aok_knowledgebase_base_category_belongsto_assigned_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseBaseCategoriesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories store",
                "operationId": "aok-knowledgebase-base-categories_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAokKnowledgebaseBaseCategoriesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseBaseCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebase-base-categories\/create": {
            "get": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok_knowledgebase_base_categories create",
                "operationId": "aok_knowledgebase_base_categories_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebase-base-categories\/{id}": {
            "get": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories show",
                "operationId": "aok-knowledgebase-base-categories_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseBaseCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories update",
                "operationId": "aok-knowledgebase-base-categories_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAokKnowledgebaseBaseCategoriesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseBaseCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories delete",
                "operationId": "aok-knowledgebase-base-categories_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebase-base-categories\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories single update",
                "operationId": "aok-knowledgebase-base-categories_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "aok_knowledgebase_base_category_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "aok_knowledgebase_base_category_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAokKnowledgebaseBaseCategoriesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseBaseCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebase-base-categories\/{id}\/edit": {
            "get": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories edit",
                "operationId": "aok-knowledgebase-base-categories_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseBaseCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebase-base-categories\/relation": {
            "get": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories relation",
                "operationId": "aok-knowledgebase-base-categories_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebase-base-categories\/{id}\/restore": {
            "get": {
                "tags": [
                    "aok-knowledgebase-base-categories"
                ],
                "summary": "aok-knowledgebase-base-categories restore",
                "operationId": "aok-knowledgebase-base-categories_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-contacts": {
            "get": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings_contacts index",
                "operationId": "meetings_contacts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "meeting_id",
                                "contact_id",
                                "required",
                                "accept_status",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "meetings_contact_belongsto_contact_relationship",
                                "meetings_contact_belongsto_meeting_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[contact_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[required][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    0
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[accept_status][]",
                        "in": "query",
                        "description": "{\n    \"none\": \"none\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "none",
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[meeting_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMeetingsContactsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts store",
                "operationId": "meetings-contacts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsContactsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-contacts\/create": {
            "get": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings_contacts create",
                "operationId": "meetings_contacts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-contacts\/{id}": {
            "get": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts show",
                "operationId": "meetings-contacts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts update",
                "operationId": "meetings-contacts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsContactsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts delete",
                "operationId": "meetings-contacts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-contacts\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts single update",
                "operationId": "meetings-contacts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "meetings_contact_belongsto_contact_relationship",
                                "contact_id",
                                "required",
                                "accept_status",
                                "meetings_contact_belongsto_meeting_relationship",
                                "meeting_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "meetings_contact_belongsto_contact_relationship",
                                    "contact_id",
                                    "required",
                                    "accept_status",
                                    "meetings_contact_belongsto_meeting_relationship",
                                    "meeting_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsContactsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-contacts\/{id}\/edit": {
            "get": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts edit",
                "operationId": "meetings-contacts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-contacts\/relation": {
            "get": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts relation",
                "operationId": "meetings-contacts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-contacts\/{id}\/restore": {
            "get": {
                "tags": [
                    "meetings-contacts"
                ],
                "summary": "meetings-contacts restore",
                "operationId": "meetings-contacts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-events": {
            "get": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp_events index",
                "operationId": "fp_events_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "duration_hours",
                                "duration_minutes",
                                "date_start",
                                "date_end",
                                "budget",
                                "currency_id",
                                "invite_templates",
                                "accept_redirect",
                                "decline_redirect",
                                "activity_status_type",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "fp_events_belongsto_currency_relationship",
                                "fp_event_belongsto_assigned_user_relationship",
                                "fp_event_belongsto_created_by_relationship",
                                "fp_event_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[currency_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[decline_redirect]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[duration_hours]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[invite_templates]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[duration_minutes]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[budget]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[activity_status_type][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[accept_redirect]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_start]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[date_end]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFpEventsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events store",
                "operationId": "fp-events_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFpEventsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-events\/create": {
            "get": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp_events create",
                "operationId": "fp_events_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-events\/{id}": {
            "get": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events show",
                "operationId": "fp-events_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events update",
                "operationId": "fp-events_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFpEventsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events delete",
                "operationId": "fp-events_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-events\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events single update",
                "operationId": "fp-events_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "decline_redirect",
                                "fp_events_belongsto_currency_relationship",
                                "duration_hours",
                                "invite_templates",
                                "duration_minutes",
                                "budget",
                                "date_start",
                                "currency_id",
                                "date_end",
                                "accept_redirect",
                                "activity_status_type",
                                "fp_event_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "decline_redirect",
                                    "fp_events_belongsto_currency_relationship",
                                    "duration_hours",
                                    "invite_templates",
                                    "duration_minutes",
                                    "budget",
                                    "date_start",
                                    "currency_id",
                                    "date_end",
                                    "accept_redirect",
                                    "activity_status_type",
                                    "fp_event_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFpEventsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-events\/{id}\/edit": {
            "get": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events edit",
                "operationId": "fp-events_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFpEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-events\/relation": {
            "get": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events relation",
                "operationId": "fp-events_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/fp-events\/{id}\/restore": {
            "get": {
                "tags": [
                    "fp-events"
                ],
                "summary": "fp-events restore",
                "operationId": "fp-events_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-projecttemplates": {
            "get": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am_projecttemplates index",
                "operationId": "am_projecttemplates_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "status",
                                "priority",
                                "override_business_hours",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "am_projecttemplate_belongsto_assigned_user_relationship",
                                "am_projecttemplate_belongsto_created_by_relationship",
                                "am_projecttemplate_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[override_business_hours]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[priority][]",
                        "in": "query",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Draft\": \"Draft\",\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Draft",
                                    "Active",
                                    "Inactive"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAmProjecttemplatesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates store",
                "operationId": "am-projecttemplates_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAmProjecttemplatesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmProjecttemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-projecttemplates\/create": {
            "get": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am_projecttemplates create",
                "operationId": "am_projecttemplates_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-projecttemplates\/{id}": {
            "get": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates show",
                "operationId": "am-projecttemplates_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmProjecttemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates update",
                "operationId": "am-projecttemplates_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAmProjecttemplatesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmProjecttemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates delete",
                "operationId": "am-projecttemplates_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-projecttemplates\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates single update",
                "operationId": "am-projecttemplates_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "override_business_hours",
                                "priority",
                                "status",
                                "am_projecttemplate_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "override_business_hours",
                                    "priority",
                                    "status",
                                    "am_projecttemplate_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAmProjecttemplatesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmProjecttemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-projecttemplates\/{id}\/edit": {
            "get": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates edit",
                "operationId": "am-projecttemplates_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmProjecttemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-projecttemplates\/relation": {
            "get": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates relation",
                "operationId": "am-projecttemplates_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-projecttemplates\/{id}\/restore": {
            "get": {
                "tags": [
                    "am-projecttemplates"
                ],
                "summary": "am-projecttemplates restore",
                "operationId": "am-projecttemplates_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/templatesectionlines": {
            "get": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionline index",
                "operationId": "templatesectionline_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "thumbnail",
                                "grp",
                                "ord",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "templatesectionline_belongsto_created_by_relationship",
                                "templatesectionline_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[ord]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[grp]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerTemplatesectionlineBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines store",
                "operationId": "templatesectionlines_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTemplatesectionlineStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTemplatesectionlineReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/templatesectionlines\/create": {
            "get": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionline create",
                "operationId": "templatesectionline_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/templatesectionlines\/{id}": {
            "get": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines show",
                "operationId": "templatesectionlines_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTemplatesectionlineReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines update",
                "operationId": "templatesectionlines_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTemplatesectionlineUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTemplatesectionlineReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines delete",
                "operationId": "templatesectionlines_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/templatesectionlines\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines single update",
                "operationId": "templatesectionlines_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "ord",
                                "grp"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "ord",
                                    "grp"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTemplatesectionlineSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTemplatesectionlineReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/templatesectionlines\/{id}\/edit": {
            "get": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines edit",
                "operationId": "templatesectionlines_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTemplatesectionlineReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/templatesectionlines\/relation": {
            "get": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines relation",
                "operationId": "templatesectionlines_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/templatesectionlines\/{id}\/restore": {
            "get": {
                "tags": [
                    "templatesectionlines"
                ],
                "summary": "templatesectionlines restore",
                "operationId": "templatesectionlines_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveys": {
            "get": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys index",
                "operationId": "surveys_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "status",
                                "submit_text",
                                "satisfied_text",
                                "neither_text",
                                "dissatisfied_text",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "survey_belongsto_assigned_user_relationship",
                                "survey_belongsto_created_by_relationship",
                                "survey_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[submit_text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[satisfied_text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[neither_text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[dissatisfied_text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Published\": \"Published\",\n    \"Draft\": \"Draft\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Published",
                                    "Draft"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSurveysBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys store",
                "operationId": "surveys_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveysStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveys\/create": {
            "get": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys create",
                "operationId": "surveys_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveys\/{id}": {
            "get": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys show",
                "operationId": "surveys_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys update",
                "operationId": "surveys_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveysUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys delete",
                "operationId": "surveys_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveys\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys single update",
                "operationId": "surveys_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "submit_text",
                                "satisfied_text",
                                "neither_text",
                                "dissatisfied_text",
                                "status",
                                "survey_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "submit_text",
                                    "satisfied_text",
                                    "neither_text",
                                    "dissatisfied_text",
                                    "status",
                                    "survey_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveysSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveys\/{id}\/edit": {
            "get": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys edit",
                "operationId": "surveys_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveys\/relation": {
            "get": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys relation",
                "operationId": "surveys_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveys\/{id}\/restore": {
            "get": {
                "tags": [
                    "surveys"
                ],
                "summary": "surveys restore",
                "operationId": "surveys_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/schedulers": {
            "get": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers index",
                "operationId": "schedulers_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "name",
                                "job",
                                "date_time_start",
                                "date_time_end",
                                "job_interval",
                                "time_from",
                                "time_to",
                                "last_run",
                                "status",
                                "catch_up",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "scheduler_belongsto_assigned_user_relationship",
                                "scheduler_belongsto_created_by_relationship",
                                "scheduler_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[catch_up]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[job_interval]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_time_start]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[time_from]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[job]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_time_end]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[time_to]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[last_run]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSchedulersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers store",
                "operationId": "schedulers_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSchedulersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSchedulersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/schedulers\/create": {
            "get": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers create",
                "operationId": "schedulers_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/schedulers\/{id}": {
            "get": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers show",
                "operationId": "schedulers_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSchedulersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers update",
                "operationId": "schedulers_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSchedulersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSchedulersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers delete",
                "operationId": "schedulers_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/schedulers\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers single update",
                "operationId": "schedulers_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "status",
                                "time_to",
                                "date_time_end",
                                "job",
                                "time_from",
                                "date_time_start",
                                "job_interval",
                                "catch_up",
                                "scheduler_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "status",
                                    "time_to",
                                    "date_time_end",
                                    "job",
                                    "time_from",
                                    "date_time_start",
                                    "job_interval",
                                    "catch_up",
                                    "scheduler_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSchedulersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSchedulersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/schedulers\/{id}\/edit": {
            "get": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers edit",
                "operationId": "schedulers_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSchedulersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/schedulers\/relation": {
            "get": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers relation",
                "operationId": "schedulers_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/schedulers\/{id}\/restore": {
            "get": {
                "tags": [
                    "schedulers"
                ],
                "summary": "schedulers restore",
                "operationId": "schedulers_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/saved-search": {
            "get": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved_search index",
                "operationId": "saved_search_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "search_module",
                                "assigned_user_id",
                                "contents",
                                "description",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "saved_search_belongsto_assigned_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[search_module][]",
                        "in": "query",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "accounts",
                                    "contacts",
                                    "opportunities"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSavedSearchBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search store",
                "operationId": "saved-search_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSavedSearchStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSavedSearchReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/saved-search\/create": {
            "get": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved_search create",
                "operationId": "saved_search_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/saved-search\/{id}": {
            "get": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search show",
                "operationId": "saved-search_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSavedSearchReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search update",
                "operationId": "saved-search_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSavedSearchUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSavedSearchReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search delete",
                "operationId": "saved-search_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/saved-search\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search single update",
                "operationId": "saved-search_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "search_module",
                                "contents",
                                "saved_search_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "search_module",
                                    "contents",
                                    "saved_search_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSavedSearchSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSavedSearchReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/saved-search\/{id}\/edit": {
            "get": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search edit",
                "operationId": "saved-search_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSavedSearchReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/saved-search\/relation": {
            "get": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search relation",
                "operationId": "saved-search_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/saved-search\/{id}\/restore": {
            "get": {
                "tags": [
                    "saved-search"
                ],
                "summary": "saved-search restore",
                "operationId": "saved-search_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prospect-lists": {
            "get": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect_lists index",
                "operationId": "prospect_lists_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "assigned_user_id",
                                "id",
                                "name",
                                "list_type",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "domain_name",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "prospect_list_belongstomany_campaign_relationship",
                                "prospect_list_belongsto_assigned_user_relationship",
                                "prospect_list_belongsto_created_by_relationship",
                                "prospect_list_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[list_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[domain_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[prospect_list_belongstomany_campaign_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerProspectListsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists store",
                "operationId": "prospect-lists_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProspectListsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProspectListsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prospect-lists\/create": {
            "get": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect_lists create",
                "operationId": "prospect_lists_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prospect-lists\/{id}": {
            "get": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists show",
                "operationId": "prospect-lists_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProspectListsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists update",
                "operationId": "prospect-lists_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProspectListsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProspectListsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists delete",
                "operationId": "prospect-lists_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prospect-lists\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists single update",
                "operationId": "prospect-lists_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "list_type",
                                "domain_name",
                                "prospect_list_belongstomany_campaign_relationship",
                                "prospect_list_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "list_type",
                                    "domain_name",
                                    "prospect_list_belongstomany_campaign_relationship",
                                    "prospect_list_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProspectListsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProspectListsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prospect-lists\/{id}\/edit": {
            "get": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists edit",
                "operationId": "prospect-lists_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProspectListsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prospect-lists\/relation": {
            "get": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists relation",
                "operationId": "prospect-lists_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prospect-lists\/{id}\/restore": {
            "get": {
                "tags": [
                    "prospect-lists"
                ],
                "summary": "prospect-lists restore",
                "operationId": "prospect-lists_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/job-queues": {
            "get": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job_queue index",
                "operationId": "job_queue_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "assigned_user_id",
                                "id",
                                "name",
                                "scheduler_id",
                                "execute_time",
                                "status",
                                "resolution",
                                "message",
                                "target",
                                "data",
                                "requeue",
                                "retry_count",
                                "failure_count",
                                "job_delay",
                                "client",
                                "percent_complete",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "job_queue_belongsto_assigned_user_relationship",
                                "job_queue_belongsto_scheduler_relationship",
                                "job_queue_belongsto_created_by_relationship",
                                "job_queue_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Pending\": \"Pending\",\n    \"Finished\": \"Finished\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Pending",
                                    "Finished"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[requeue]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[target]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[retry_count]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[execute_time]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[failure_count]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[client]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[job_delay]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[resolution][]",
                        "in": "query",
                        "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Resolution1",
                                    "Resolution2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[percent_complete]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[scheduler_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerJobQueueBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues store",
                "operationId": "job-queues_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJobQueueStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJobQueueReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/job-queues\/create": {
            "get": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job_queue create",
                "operationId": "job_queue_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/job-queues\/{id}": {
            "get": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues show",
                "operationId": "job-queues_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJobQueueReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues update",
                "operationId": "job-queues_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJobQueueUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJobQueueReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues delete",
                "operationId": "job-queues_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/job-queues\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues single update",
                "operationId": "job-queues_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "client",
                                "requeue",
                                "target",
                                "retry_count",
                                "execute_time",
                                "failure_count",
                                "percent_complete",
                                "data",
                                "message",
                                "job_delay",
                                "resolution",
                                "status",
                                "job_queue_belongsto_assigned_user_relationship",
                                "job_queue_belongsto_scheduler_relationship",
                                "assigned_user_id",
                                "scheduler_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "client",
                                    "requeue",
                                    "target",
                                    "retry_count",
                                    "execute_time",
                                    "failure_count",
                                    "percent_complete",
                                    "data",
                                    "message",
                                    "job_delay",
                                    "resolution",
                                    "status",
                                    "job_queue_belongsto_assigned_user_relationship",
                                    "job_queue_belongsto_scheduler_relationship",
                                    "assigned_user_id",
                                    "scheduler_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJobQueueSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJobQueueReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/job-queues\/{id}\/edit": {
            "get": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues edit",
                "operationId": "job-queues_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJobQueueReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/job-queues\/relation": {
            "get": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues relation",
                "operationId": "job-queues_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/job-queues\/{id}\/restore": {
            "get": {
                "tags": [
                    "job-queues"
                ],
                "summary": "job-queues restore",
                "operationId": "job-queues_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/outbound-emails": {
            "get": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound_email index",
                "operationId": "outbound_email_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "type",
                                "user_id",
                                "smtp_from_name",
                                "smtp_from_addr",
                                "mail_sendtype",
                                "mail_smtptype",
                                "mail_smtpserver",
                                "mail_smtpport",
                                "mail_smtpuser",
                                "mail_smtppass",
                                "mail_smtpauth_req",
                                "mail_smtpssl",
                                "modified_by_id",
                                "created_by_id",
                                "assigned_user_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "outbound_email_belongsto_assigned_user_relationship",
                                "outbound_email_belongsto_created_by_relationship",
                                "outbound_email_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[smtp_from_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[smtp_from_addr]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mail_sendtype]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mail_smtptype]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mail_smtpserver]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mail_smtpport]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mail_smtpuser]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mail_smtpauth_req]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mail_smtpssl]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerOutboundEmailBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails store",
                "operationId": "outbound-emails_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerOutboundEmailStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOutboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/outbound-emails\/create": {
            "get": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound_email create",
                "operationId": "outbound_email_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/outbound-emails\/{id}": {
            "get": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails show",
                "operationId": "outbound-emails_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOutboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails update",
                "operationId": "outbound-emails_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerOutboundEmailUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOutboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails delete",
                "operationId": "outbound-emails_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/outbound-emails\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails single update",
                "operationId": "outbound-emails_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "type",
                                "smtp_from_name",
                                "smtp_from_addr",
                                "mail_sendtype",
                                "mail_smtptype",
                                "mail_smtpserver",
                                "mail_smtpport",
                                "mail_smtpuser",
                                "mail_smtppass",
                                "mail_smtpauth_req",
                                "mail_smtpssl",
                                "outbound_email_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "type",
                                    "smtp_from_name",
                                    "smtp_from_addr",
                                    "mail_sendtype",
                                    "mail_smtptype",
                                    "mail_smtpserver",
                                    "mail_smtpport",
                                    "mail_smtpuser",
                                    "mail_smtppass",
                                    "mail_smtpauth_req",
                                    "mail_smtpssl",
                                    "outbound_email_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerOutboundEmailSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOutboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/outbound-emails\/{id}\/edit": {
            "get": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails edit",
                "operationId": "outbound-emails_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOutboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/outbound-emails\/relation": {
            "get": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails relation",
                "operationId": "outbound-emails_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/outbound-emails\/{id}\/restore": {
            "get": {
                "tags": [
                    "outbound-emails"
                ],
                "summary": "outbound-emails restore",
                "operationId": "outbound-emails_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cases": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "cases index",
                "operationId": "cases_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "case_number",
                                "type",
                                "status",
                                "priority",
                                "resolution",
                                "work_log",
                                "account_id",
                                "state",
                                "contact_created_by_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "case_belongsto_contact_created_by_relationship",
                                "case_belongsto_account_relationship",
                                "case_belongsto_assigned_user_relationship",
                                "case_belongsto_created_by_relationship",
                                "case_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[resolution][]",
                        "in": "query",
                        "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Resolution1",
                                    "Resolution2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[priority][]",
                        "in": "query",
                        "description": "{\n    \"Priority1\": \"Priority1\",\n    \"Priority2\": \"Priority2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Priority1",
                                    "Priority2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[account_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[contact_created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[case_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[state][]",
                        "in": "query",
                        "description": "{\n    \"Open\": \"Open\",\n    \"Closed\": \"Closed\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Open",
                                    "Closed"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCasesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "cases"
                ],
                "summary": "cases store",
                "operationId": "cases_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCasesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cases\/create": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "cases create",
                "operationId": "cases_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cases\/{id}": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "cases show",
                "operationId": "cases_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "cases update",
                "operationId": "cases_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCasesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "cases"
                ],
                "summary": "cases delete",
                "operationId": "cases_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cases\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "cases single update",
                "operationId": "cases_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "type",
                                "state",
                                "case_number",
                                "work_log",
                                "status",
                                "case_belongsto_account_relationship",
                                "resolution",
                                "contact_created_by_id",
                                "case_belongsto_contact_created_by_relationship",
                                "account_id",
                                "priority",
                                "case_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "type",
                                    "state",
                                    "case_number",
                                    "work_log",
                                    "status",
                                    "case_belongsto_account_relationship",
                                    "resolution",
                                    "contact_created_by_id",
                                    "case_belongsto_contact_created_by_relationship",
                                    "account_id",
                                    "priority",
                                    "case_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCasesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cases\/{id}\/edit": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "cases edit",
                "operationId": "cases_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCasesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cases\/relation": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "cases relation",
                "operationId": "cases_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cases\/{id}\/restore": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "cases restore",
                "operationId": "cases_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestions": {
            "get": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions index",
                "operationId": "surveyquestions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "sort_order",
                                "type",
                                "happiness_question",
                                "survey_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "surveyquestion_belongsto_assigned_user_relationship",
                                "surveyquestion_belongsto_survey_relationship",
                                "surveyquestion_belongsto_created_by_relationship",
                                "surveyquestion_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[sort_order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[happiness_question]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[survey_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSurveyquestionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions store",
                "operationId": "surveyquestions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveyquestionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestions\/create": {
            "get": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions create",
                "operationId": "surveyquestions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestions\/{id}": {
            "get": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions show",
                "operationId": "surveyquestions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions update",
                "operationId": "surveyquestions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveyquestionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions delete",
                "operationId": "surveyquestions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions single update",
                "operationId": "surveyquestions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "type",
                                "sort_order",
                                "happiness_question",
                                "surveyquestion_belongsto_assigned_user_relationship",
                                "surveyquestion_belongsto_survey_relationship",
                                "assigned_user_id",
                                "survey_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "type",
                                    "sort_order",
                                    "happiness_question",
                                    "surveyquestion_belongsto_assigned_user_relationship",
                                    "surveyquestion_belongsto_survey_relationship",
                                    "assigned_user_id",
                                    "survey_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveyquestionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestions\/{id}\/edit": {
            "get": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions edit",
                "operationId": "surveyquestions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestions\/relation": {
            "get": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions relation",
                "operationId": "surveyquestions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestions\/{id}\/restore": {
            "get": {
                "tags": [
                    "surveyquestions"
                ],
                "summary": "surveyquestions restore",
                "operationId": "surveyquestions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebases": {
            "get": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok_knowledgebase index",
                "operationId": "aok_knowledgebase_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "status",
                                "revision",
                                "additional_info",
                                "user_id_c",
                                "user_id1_c",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship",
                                "aok_knowledgebase_belongsto_user_id1_c_relationship",
                                "aok_knowledgebase_belongsto_user_id_c_relationship",
                                "aok_knowledgebase_belongsto_assigned_user_relationship",
                                "aok_knowledgebase_belongsto_created_by_relationship",
                                "aok_knowledgebase_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[revision]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id_c]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id1_c]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases store",
                "operationId": "aok-knowledgebases_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAokKnowledgebaseStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebases\/create": {
            "get": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok_knowledgebase create",
                "operationId": "aok_knowledgebase_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebases\/{id}": {
            "get": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases show",
                "operationId": "aok-knowledgebases_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases update",
                "operationId": "aok-knowledgebases_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAokKnowledgebaseUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases delete",
                "operationId": "aok-knowledgebases_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebases\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases single update",
                "operationId": "aok-knowledgebases_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship",
                                "revision",
                                "additional_info",
                                "aok_knowledgebase_belongsto_user_id_c_relationship",
                                "aok_knowledgebase_belongsto_user_id1_c_relationship",
                                "aok_knowledgebase_belongsto_assigned_user_relationship",
                                "user_id1_c",
                                "assigned_user_id",
                                "user_id_c"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship",
                                    "revision",
                                    "additional_info",
                                    "aok_knowledgebase_belongsto_user_id_c_relationship",
                                    "aok_knowledgebase_belongsto_user_id1_c_relationship",
                                    "aok_knowledgebase_belongsto_assigned_user_relationship",
                                    "user_id1_c",
                                    "assigned_user_id",
                                    "user_id_c"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAokKnowledgebaseSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebases\/{id}\/edit": {
            "get": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases edit",
                "operationId": "aok-knowledgebases_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAokKnowledgebaseReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebases\/relation": {
            "get": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases relation",
                "operationId": "aok-knowledgebases_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aok-knowledgebases\/{id}\/restore": {
            "get": {
                "tags": [
                    "aok-knowledgebases"
                ],
                "summary": "aok-knowledgebases restore",
                "operationId": "aok-knowledgebases_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-conditions": {
            "get": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor_conditions index",
                "operationId": "aor_conditions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "aor_report_id",
                                "condition_order",
                                "logic_op",
                                "parenthesis",
                                "module_path",
                                "field",
                                "operator",
                                "value_type",
                                "value",
                                "parameter",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aor_condition_belongsto_aor_report_relationship",
                                "aor_condition_belongsto_assigned_user_relationship",
                                "aor_condition_belongsto_created_by_relationship",
                                "aor_condition_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parameter]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[logic_op][]",
                        "in": "query",
                        "description": "{\n    \"LogicOp1\": \"LogicOp1\",\n    \"LogicOp2\": \"LogicOp2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LogicOp1",
                                    "LogicOp2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[value_type][]",
                        "in": "query",
                        "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "value",
                                    "field"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[aor_report_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[field][]",
                        "in": "query",
                        "description": "{\n    \"Field1\": \"Field1\",\n    \"Field2\": \"Field2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Field1",
                                    "Field2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[module_path][]",
                        "in": "query",
                        "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Module1",
                                    "Module2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[operator][]",
                        "in": "query",
                        "description": "{\n    \"Operator1\": \"Operator1\",\n    \"Operator2\": \"Operator2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Operator1",
                                    "Operator2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[condition_order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[parenthesis]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAorConditionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions store",
                "operationId": "aor-conditions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorConditionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-conditions\/create": {
            "get": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor_conditions create",
                "operationId": "aor_conditions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-conditions\/{id}": {
            "get": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions show",
                "operationId": "aor-conditions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions update",
                "operationId": "aor-conditions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorConditionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions delete",
                "operationId": "aor-conditions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-conditions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions single update",
                "operationId": "aor-conditions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "parameter",
                                "logic_op",
                                "value_type",
                                "aor_report_id",
                                "condition_order",
                                "parenthesis",
                                "aor_condition_belongsto_aor_report_relationship",
                                "operator",
                                "module_path",
                                "field",
                                "value",
                                "aor_condition_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "parameter",
                                    "logic_op",
                                    "value_type",
                                    "aor_report_id",
                                    "condition_order",
                                    "parenthesis",
                                    "aor_condition_belongsto_aor_report_relationship",
                                    "operator",
                                    "module_path",
                                    "field",
                                    "value",
                                    "aor_condition_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorConditionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-conditions\/{id}\/edit": {
            "get": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions edit",
                "operationId": "aor-conditions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-conditions\/relation": {
            "get": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions relation",
                "operationId": "aor-conditions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-conditions\/{id}\/restore": {
            "get": {
                "tags": [
                    "aor-conditions"
                ],
                "summary": "aor-conditions restore",
                "operationId": "aor-conditions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts-bugs": {
            "get": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts_bugs index",
                "operationId": "contacts_bugs_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "contact_id",
                                "bug_id",
                                "contact_role",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "contacts_bug_belongsto_contact_relationship",
                                "contacts_bug_belongsto_bug_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[contact_role]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[contact_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[bug_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerContactsBugsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs store",
                "operationId": "contacts-bugs_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContactsBugsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts-bugs\/create": {
            "get": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts_bugs create",
                "operationId": "contacts_bugs_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts-bugs\/{id}": {
            "get": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs show",
                "operationId": "contacts-bugs_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs update",
                "operationId": "contacts-bugs_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContactsBugsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs delete",
                "operationId": "contacts-bugs_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts-bugs\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs single update",
                "operationId": "contacts-bugs_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "contact_role",
                                "contacts_bug_belongsto_contact_relationship",
                                "contacts_bug_belongsto_bug_relationship",
                                "contact_id",
                                "bug_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "contact_role",
                                    "contacts_bug_belongsto_contact_relationship",
                                    "contacts_bug_belongsto_bug_relationship",
                                    "contact_id",
                                    "bug_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContactsBugsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts-bugs\/{id}\/edit": {
            "get": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs edit",
                "operationId": "contacts-bugs_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts-bugs\/relation": {
            "get": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs relation",
                "operationId": "contacts-bugs_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts-bugs\/{id}\/restore": {
            "get": {
                "tags": [
                    "contacts-bugs"
                ],
                "summary": "contacts-bugs restore",
                "operationId": "contacts-bugs_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-maps": {
            "get": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg_maps index",
                "operationId": "jjwg_maps_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "distance",
                                "unit_type",
                                "module_type",
                                "parent_type",
                                "parent_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "jjwg_map_belongsto_assigned_user_relationship",
                                "jjwg_map_belongsto_created_by_relationship",
                                "jjwg_map_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[unit_type][]",
                        "in": "query",
                        "description": "{\n    \"Mi\": \"Mi\",\n    \"Km\": \"Km\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Mi",
                                    "Km"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[distance]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerJjwgMapsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps store",
                "operationId": "jjwg-maps_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgMapsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-maps\/create": {
            "get": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg_maps create",
                "operationId": "jjwg_maps_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-maps\/{id}": {
            "get": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps show",
                "operationId": "jjwg-maps_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps update",
                "operationId": "jjwg-maps_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgMapsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps delete",
                "operationId": "jjwg-maps_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-maps\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps single update",
                "operationId": "jjwg-maps_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "unit_type",
                                "distance",
                                "jjwg_map_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "unit_type",
                                    "distance",
                                    "jjwg_map_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgMapsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-maps\/{id}\/edit": {
            "get": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps edit",
                "operationId": "jjwg-maps_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-maps\/relation": {
            "get": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps relation",
                "operationId": "jjwg-maps_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-maps\/{id}\/restore": {
            "get": {
                "tags": [
                    "jjwg-maps"
                ],
                "summary": "jjwg-maps restore",
                "operationId": "jjwg-maps_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-address-caches": {
            "get": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg_address_cache index",
                "operationId": "jjwg_address_cache_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "lat",
                                "lng",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "jjwg_address_cache_belongsto_assigned_user_relationship",
                                "jjwg_address_cache_belongsto_created_by_relationship",
                                "jjwg_address_cache_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[lat]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[lng]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerJjwgAddressCacheBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches store",
                "operationId": "jjwg-address-caches_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgAddressCacheStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAddressCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-address-caches\/create": {
            "get": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg_address_cache create",
                "operationId": "jjwg_address_cache_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-address-caches\/{id}": {
            "get": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches show",
                "operationId": "jjwg-address-caches_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAddressCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches update",
                "operationId": "jjwg-address-caches_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgAddressCacheUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAddressCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches delete",
                "operationId": "jjwg-address-caches_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-address-caches\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches single update",
                "operationId": "jjwg-address-caches_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "lat",
                                "lng",
                                "jjwg_address_cache_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "lat",
                                    "lng",
                                    "jjwg_address_cache_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgAddressCacheSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAddressCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-address-caches\/{id}\/edit": {
            "get": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches edit",
                "operationId": "jjwg-address-caches_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAddressCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-address-caches\/relation": {
            "get": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches relation",
                "operationId": "jjwg-address-caches_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-address-caches\/{id}\/restore": {
            "get": {
                "tags": [
                    "jjwg-address-caches"
                ],
                "summary": "jjwg-address-caches restore",
                "operationId": "jjwg-address-caches_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-fields": {
            "get": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor_fields index",
                "operationId": "aor_fields_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "aor_report_id",
                                "field_order",
                                "module_path",
                                "field",
                                "display",
                                "link",
                                "label",
                                "field_function",
                                "sort_by",
                                "format",
                                "total",
                                "sort_order",
                                "group_by",
                                "group_order",
                                "group_display",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aor_field_belongsto_aor_report_relationship",
                                "aor_field_belongsto_created_by_relationship",
                                "aor_field_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[sort_order][]",
                        "in": "query",
                        "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "asc",
                                    "desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[display]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[module_path]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[group_display]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[sort_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[field_order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[field_function]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[total]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[group_order][]",
                        "in": "query",
                        "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "asc",
                                    "desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[aor_report_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[link]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[label]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[format]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[field]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[group_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAorFieldsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields store",
                "operationId": "aor-fields_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorFieldsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-fields\/create": {
            "get": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor_fields create",
                "operationId": "aor_fields_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-fields\/{id}": {
            "get": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields show",
                "operationId": "aor-fields_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields update",
                "operationId": "aor-fields_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorFieldsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields delete",
                "operationId": "aor-fields_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-fields\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields single update",
                "operationId": "aor-fields_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "module_path",
                                "aor_field_belongsto_aor_report_relationship",
                                "group_display",
                                "sort_by",
                                "field_order",
                                "field_function",
                                "total",
                                "group_order",
                                "display",
                                "link",
                                "sort_order",
                                "label",
                                "aor_report_id",
                                "format",
                                "field",
                                "group_by"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "module_path",
                                    "aor_field_belongsto_aor_report_relationship",
                                    "group_display",
                                    "sort_by",
                                    "field_order",
                                    "field_function",
                                    "total",
                                    "group_order",
                                    "display",
                                    "link",
                                    "sort_order",
                                    "label",
                                    "aor_report_id",
                                    "format",
                                    "field",
                                    "group_by"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorFieldsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-fields\/{id}\/edit": {
            "get": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields edit",
                "operationId": "aor-fields_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-fields\/relation": {
            "get": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields relation",
                "operationId": "aor-fields_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-fields\/{id}\/restore": {
            "get": {
                "tags": [
                    "aor-fields"
                ],
                "summary": "aor-fields restore",
                "operationId": "aor-fields_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-actions": {
            "get": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow_actions index",
                "operationId": "aow_actions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "aow_workflow_id",
                                "action_order",
                                "action",
                                "parameters",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aow_action_belongsto_aow_workflow_relationship",
                                "aow_action_belongsto_created_by_relationship",
                                "aow_action_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[aow_workflow_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[action_order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[action][]",
                        "in": "query",
                        "description": "{\n    \"ActionType1\": \"ActionType1\",\n    \"ActionType2\": \"ActionType2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "ActionType1",
                                    "ActionType2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAowActionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions store",
                "operationId": "aow-actions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowActionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-actions\/create": {
            "get": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow_actions create",
                "operationId": "aow_actions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-actions\/{id}": {
            "get": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions show",
                "operationId": "aow-actions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions update",
                "operationId": "aow-actions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowActionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions delete",
                "operationId": "aow-actions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-actions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions single update",
                "operationId": "aow-actions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "aow_workflow_id",
                                "action_order",
                                "parameters",
                                "aow_action_belongsto_aow_workflow_relationship",
                                "action"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "aow_workflow_id",
                                    "action_order",
                                    "parameters",
                                    "aow_action_belongsto_aow_workflow_relationship",
                                    "action"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowActionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-actions\/{id}\/edit": {
            "get": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions edit",
                "operationId": "aow-actions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-actions\/relation": {
            "get": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions relation",
                "operationId": "aow-actions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-actions\/{id}\/restore": {
            "get": {
                "tags": [
                    "aow-actions"
                ],
                "summary": "aow-actions restore",
                "operationId": "aow-actions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/leads": {
            "get": {
                "tags": [
                    "leads"
                ],
                "summary": "leads index",
                "operationId": "leads_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "salutation",
                                "first_name",
                                "last_name",
                                "title",
                                "photo",
                                "department",
                                "do_not_call",
                                "phone_home",
                                "phone_mobile",
                                "phone_work",
                                "phone_other",
                                "phone_fax",
                                "lawful_basis",
                                "date_reviewed",
                                "lawful_basis_source",
                                "primary_address_street",
                                "primary_address_city",
                                "primary_address_state",
                                "primary_address_postalcode",
                                "primary_address_country",
                                "alt_address_street",
                                "alt_address_city",
                                "alt_address_state",
                                "alt_address_postalcode",
                                "alt_address_country",
                                "assistant",
                                "assistant_phone",
                                "converted",
                                "refered_by",
                                "lead_source",
                                "lead_source_description",
                                "status",
                                "status_description",
                                "reports_to_id",
                                "account_name",
                                "account_description",
                                "contact_id",
                                "account_id",
                                "opportunity_id",
                                "opportunity_name",
                                "opportunity_amount",
                                "campaign_id",
                                "birthdate",
                                "portal_name",
                                "portal_app",
                                "website",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "lead_belongsto_opportunity_relationship",
                                "lead_belongsto_campaign_relationship",
                                "lead_belongsto_account_relationship",
                                "lead_belongsto_reports_to_relationship",
                                "lead_belongsto_contact_relationship",
                                "lead_belongsto_assigned_user_relationship",
                                "lead_belongsto_created_by_relationship",
                                "lead_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[opportunity_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[alt_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_home]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[opportunity_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[department]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[lawful_basis_source]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[campaign_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[primary_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[portal_app]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[alt_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_work]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[alt_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[do_not_call]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[alt_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[photo]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[alt_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[opportunity_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[portal_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_mobile]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[refered_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assistant]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[account_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[converted]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[account_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[birthdate]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[phone_fax]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[salutation]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[contact_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[reports_to_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[last_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assistant_phone]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_other]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[website]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[first_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[lead_source]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_reviewed]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerLeadsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "leads"
                ],
                "summary": "leads store",
                "operationId": "leads_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerLeadsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLeadsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/leads\/create": {
            "get": {
                "tags": [
                    "leads"
                ],
                "summary": "leads create",
                "operationId": "leads_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/leads\/{id}": {
            "get": {
                "tags": [
                    "leads"
                ],
                "summary": "leads show",
                "operationId": "leads_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLeadsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "leads"
                ],
                "summary": "leads update",
                "operationId": "leads_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerLeadsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLeadsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "leads"
                ],
                "summary": "leads delete",
                "operationId": "leads_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/leads\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "leads"
                ],
                "summary": "leads single update",
                "operationId": "leads_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "description",
                                "do_not_call",
                                "lead_belongsto_opportunity_relationship",
                                "department",
                                "lawful_basis_source",
                                "primary_address_postalcode",
                                "account_description",
                                "campaign_id",
                                "primary_address_country",
                                "portal_app",
                                "alt_address_street",
                                "phone_work",
                                "lead_source_description",
                                "status",
                                "opportunity_name",
                                "alt_address_country",
                                "status_description",
                                "opportunity_id",
                                "alt_address_state",
                                "lead_belongsto_campaign_relationship",
                                "photo",
                                "alt_address_postalcode",
                                "primary_address_street",
                                "primary_address_state",
                                "opportunity_amount",
                                "portal_name",
                                "phone_mobile",
                                "assistant_phone",
                                "assistant",
                                "account_name",
                                "converted",
                                "lead_belongsto_account_relationship",
                                "primary_address_city",
                                "birthdate",
                                "phone_fax",
                                "account_id",
                                "salutation",
                                "contact_id",
                                "reports_to_id",
                                "last_name",
                                "phone_home",
                                "lead_belongsto_contact_relationship",
                                "phone_other",
                                "website",
                                "first_name",
                                "lead_belongsto_reports_to_relationship",
                                "lead_source",
                                "title",
                                "refered_by",
                                "date_reviewed",
                                "alt_address_city",
                                "lawful_basis",
                                "lead_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "description",
                                    "do_not_call",
                                    "lead_belongsto_opportunity_relationship",
                                    "department",
                                    "lawful_basis_source",
                                    "primary_address_postalcode",
                                    "account_description",
                                    "campaign_id",
                                    "primary_address_country",
                                    "portal_app",
                                    "alt_address_street",
                                    "phone_work",
                                    "lead_source_description",
                                    "status",
                                    "opportunity_name",
                                    "alt_address_country",
                                    "status_description",
                                    "opportunity_id",
                                    "alt_address_state",
                                    "lead_belongsto_campaign_relationship",
                                    "photo",
                                    "alt_address_postalcode",
                                    "primary_address_street",
                                    "primary_address_state",
                                    "opportunity_amount",
                                    "portal_name",
                                    "phone_mobile",
                                    "assistant_phone",
                                    "assistant",
                                    "account_name",
                                    "converted",
                                    "lead_belongsto_account_relationship",
                                    "primary_address_city",
                                    "birthdate",
                                    "phone_fax",
                                    "account_id",
                                    "salutation",
                                    "contact_id",
                                    "reports_to_id",
                                    "last_name",
                                    "phone_home",
                                    "lead_belongsto_contact_relationship",
                                    "phone_other",
                                    "website",
                                    "first_name",
                                    "lead_belongsto_reports_to_relationship",
                                    "lead_source",
                                    "title",
                                    "refered_by",
                                    "date_reviewed",
                                    "alt_address_city",
                                    "lawful_basis",
                                    "lead_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerLeadsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLeadsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/leads\/{id}\/edit": {
            "get": {
                "tags": [
                    "leads"
                ],
                "summary": "leads edit",
                "operationId": "leads_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLeadsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/leads\/relation": {
            "get": {
                "tags": [
                    "leads"
                ],
                "summary": "leads relation",
                "operationId": "leads_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/leads\/{id}\/restore": {
            "get": {
                "tags": [
                    "leads"
                ],
                "summary": "leads restore",
                "operationId": "leads_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "roles index",
                "operationId": "roles_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "display_name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[display_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerRolesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "roles"
                ],
                "summary": "roles store",
                "operationId": "roles_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/create": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "roles create",
                "operationId": "roles_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "roles show",
                "operationId": "roles_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "roles"
                ],
                "summary": "roles update",
                "operationId": "roles_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "roles"
                ],
                "summary": "roles delete",
                "operationId": "roles_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "roles"
                ],
                "summary": "roles single update",
                "operationId": "roles_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "display_name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "display_name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/edit": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "roles edit",
                "operationId": "roles_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/relation": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "roles relation",
                "operationId": "roles_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/restore": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "roles restore",
                "operationId": "roles_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-signatures": {
            "get": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users_signatures index",
                "operationId": "users_signatures_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "user_id",
                                "name",
                                "signature",
                                "signature_html",
                                "created_at",
                                "updated_at",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUsersSignaturesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures store",
                "operationId": "users-signatures_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersSignaturesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersSignaturesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-signatures\/create": {
            "get": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users_signatures create",
                "operationId": "users_signatures_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-signatures\/{id}": {
            "get": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures show",
                "operationId": "users-signatures_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersSignaturesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures update",
                "operationId": "users-signatures_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersSignaturesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersSignaturesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures delete",
                "operationId": "users-signatures_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-signatures\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures single update",
                "operationId": "users-signatures_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "signature",
                                "signature_html"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "signature",
                                    "signature_html"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersSignaturesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersSignaturesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-signatures\/{id}\/edit": {
            "get": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures edit",
                "operationId": "users-signatures_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersSignaturesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-signatures\/relation": {
            "get": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures relation",
                "operationId": "users-signatures_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-signatures\/{id}\/restore": {
            "get": {
                "tags": [
                    "users-signatures"
                ],
                "summary": "users-signatures restore",
                "operationId": "users-signatures_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders": {
            "get": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders index",
                "operationId": "reminders_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "popup",
                                "email",
                                "email_sent",
                                "timer_popup",
                                "timer_email",
                                "related_event_module",
                                "related_event_module_id",
                                "date_willexecute",
                                "popup_viewed",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "reminder_belongsto_assigned_user_relationship",
                                "reminder_belongsto_created_by_relationship",
                                "reminder_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[timer_popup]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[timer_email]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_willexecute]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[popup_viewed]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email_sent]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[popup]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerRemindersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders store",
                "operationId": "reminders_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRemindersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders\/create": {
            "get": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders create",
                "operationId": "reminders_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders\/{id}": {
            "get": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders show",
                "operationId": "reminders_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders update",
                "operationId": "reminders_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRemindersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders delete",
                "operationId": "reminders_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders single update",
                "operationId": "reminders_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "timer_popup",
                                "timer_email",
                                "date_willexecute",
                                "popup_viewed",
                                "email",
                                "email_sent",
                                "popup",
                                "reminder_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "timer_popup",
                                    "timer_email",
                                    "date_willexecute",
                                    "popup_viewed",
                                    "email",
                                    "email_sent",
                                    "popup",
                                    "reminder_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRemindersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders\/{id}\/edit": {
            "get": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders edit",
                "operationId": "reminders_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders\/relation": {
            "get": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders relation",
                "operationId": "reminders_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders\/{id}\/restore": {
            "get": {
                "tags": [
                    "reminders"
                ],
                "summary": "reminders restore",
                "operationId": "reminders_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-tasktemplates": {
            "get": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am_tasktemplates index",
                "operationId": "am_tasktemplates_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "status",
                                "priority",
                                "percent_complete",
                                "predecessors",
                                "milestone_flag",
                                "relationship_type",
                                "task_number",
                                "order_number",
                                "estimated_effort",
                                "utilization",
                                "duration",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "am_tasktemplate_belongsto_assigned_user_relationship",
                                "am_tasktemplate_belongsto_created_by_relationship",
                                "am_tasktemplate_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[utilization]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[relationship_type][]",
                        "in": "query",
                        "description": "{\n    \"FS\": \"FS\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "FS"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[order_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[percent_complete]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[priority][]",
                        "in": "query",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[milestone_flag]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[predecessors]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[estimated_effort]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[task_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[duration]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Not Started\": \"Not Started\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Not Started",
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAmTasktemplatesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates store",
                "operationId": "am-tasktemplates_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAmTasktemplatesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmTasktemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-tasktemplates\/create": {
            "get": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am_tasktemplates create",
                "operationId": "am_tasktemplates_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-tasktemplates\/{id}": {
            "get": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates show",
                "operationId": "am-tasktemplates_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmTasktemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates update",
                "operationId": "am-tasktemplates_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAmTasktemplatesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmTasktemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates delete",
                "operationId": "am-tasktemplates_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-tasktemplates\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates single update",
                "operationId": "am-tasktemplates_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "duration",
                                "task_number",
                                "estimated_effort",
                                "utilization",
                                "predecessors",
                                "milestone_flag",
                                "priority",
                                "percent_complete",
                                "order_number",
                                "relationship_type",
                                "status",
                                "am_tasktemplate_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "duration",
                                    "task_number",
                                    "estimated_effort",
                                    "utilization",
                                    "predecessors",
                                    "milestone_flag",
                                    "priority",
                                    "percent_complete",
                                    "order_number",
                                    "relationship_type",
                                    "status",
                                    "am_tasktemplate_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAmTasktemplatesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmTasktemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-tasktemplates\/{id}\/edit": {
            "get": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates edit",
                "operationId": "am-tasktemplates_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAmTasktemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-tasktemplates\/relation": {
            "get": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates relation",
                "operationId": "am-tasktemplates_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/am-tasktemplates\/{id}\/restore": {
            "get": {
                "tags": [
                    "am-tasktemplates"
                ],
                "summary": "am-tasktemplates restore",
                "operationId": "am-tasktemplates_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-markers": {
            "get": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg_markers index",
                "operationId": "jjwg_markers_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "city",
                                "state",
                                "country",
                                "jjwg_maps_lat",
                                "jjwg_maps_lng",
                                "marker_image",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "jjwg_marker_belongsto_assigned_user_relationship",
                                "jjwg_marker_belongsto_created_by_relationship",
                                "jjwg_marker_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[jjwg_maps_lat]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[jjwg_maps_lng]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[marker_image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerJjwgMarkersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers store",
                "operationId": "jjwg-markers_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgMarkersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMarkersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-markers\/create": {
            "get": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg_markers create",
                "operationId": "jjwg_markers_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-markers\/{id}": {
            "get": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers show",
                "operationId": "jjwg-markers_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMarkersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers update",
                "operationId": "jjwg-markers_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgMarkersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMarkersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers delete",
                "operationId": "jjwg-markers_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-markers\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers single update",
                "operationId": "jjwg-markers_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "state",
                                "country",
                                "jjwg_maps_lat",
                                "jjwg_maps_lng",
                                "city",
                                "marker_image",
                                "jjwg_marker_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "state",
                                    "country",
                                    "jjwg_maps_lat",
                                    "jjwg_maps_lng",
                                    "city",
                                    "marker_image",
                                    "jjwg_marker_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgMarkersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMarkersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-markers\/{id}\/edit": {
            "get": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers edit",
                "operationId": "jjwg-markers_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgMarkersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-markers\/relation": {
            "get": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers relation",
                "operationId": "jjwg-markers_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-markers\/{id}\/restore": {
            "get": {
                "tags": [
                    "jjwg-markers"
                ],
                "summary": "jjwg-markers restore",
                "operationId": "jjwg-markers_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaigns": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns index",
                "operationId": "campaigns_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "assigned_user_id",
                                "tracker_key",
                                "tracker_count",
                                "refer_url",
                                "tracker_text",
                                "start_date",
                                "end_date",
                                "status",
                                "impressions",
                                "currency_id",
                                "budget",
                                "expected_cost",
                                "actual_cost",
                                "expected_revenue",
                                "campaign_type",
                                "objective",
                                "content",
                                "frequency",
                                "survey_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "campaign_belongsto_currency_relationship",
                                "campaign_belongsto_survey_relationship",
                                "campaign_belongsto_assigned_user_relationship",
                                "campaign_belongsto_created_by_relationship",
                                "campaign_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[tracker_key]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[expected_revenue]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[impressions]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[campaign_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[currency]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[currency_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[survey_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[start_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[frequency][]",
                        "in": "query",
                        "description": "{\n    \"every minute\": \"Every minute\",\n    \"hourly\": \"Hourly\",\n    \"daily\": \"Daily\",\n    \"weekly\": \"Weekly\",\n    \"mothly\": \"Mothly\",\n    \"yearly\": \"Yearly\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "every minute",
                                    "hourly",
                                    "daily",
                                    "weekly",
                                    "mothly",
                                    "yearly"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[end_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[actual_cost]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[budget]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[refer_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[tracker_count]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCampaignsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns store",
                "operationId": "campaigns_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCampaignsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaigns\/create": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns create",
                "operationId": "campaigns_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaigns\/{id}": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns show",
                "operationId": "campaigns_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns update",
                "operationId": "campaigns_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCampaignsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns delete",
                "operationId": "campaigns_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaigns\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns single update",
                "operationId": "campaigns_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "content",
                                "objective",
                                "expected_revenue",
                                "impressions",
                                "campaign_type",
                                "currency",
                                "tracker_text",
                                "campaign_belongsto_currency_relationship",
                                "survey_id",
                                "tracker_key",
                                "frequency",
                                "end_date",
                                "actual_cost",
                                "campaign_belongsto_survey_relationship",
                                "budget",
                                "refer_url",
                                "tracker_count",
                                "start_date",
                                "status",
                                "campaign_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "content",
                                    "objective",
                                    "expected_revenue",
                                    "impressions",
                                    "campaign_type",
                                    "currency",
                                    "tracker_text",
                                    "campaign_belongsto_currency_relationship",
                                    "survey_id",
                                    "tracker_key",
                                    "frequency",
                                    "end_date",
                                    "actual_cost",
                                    "campaign_belongsto_survey_relationship",
                                    "budget",
                                    "refer_url",
                                    "tracker_count",
                                    "start_date",
                                    "status",
                                    "campaign_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCampaignsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaigns\/{id}\/edit": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns edit",
                "operationId": "campaigns_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaigns\/relation": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns relation",
                "operationId": "campaigns_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaigns\/{id}\/restore": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "campaigns restore",
                "operationId": "campaigns_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings": {
            "get": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings index",
                "operationId": "meetings_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "location",
                                "password",
                                "join_url",
                                "host_url",
                                "displayed_url",
                                "creator",
                                "external_id",
                                "duration_hours",
                                "duration_minutes",
                                "date_start",
                                "date_end",
                                "parent_type",
                                "status",
                                "type",
                                "parent_id",
                                "reminder_time",
                                "email_reminder_time",
                                "email_reminder_sent",
                                "outlook_id",
                                "sequence",
                                "repeat_type",
                                "repeat_interval",
                                "repeat_dow",
                                "repeat_until",
                                "repeat_count",
                                "repeat_parent_id",
                                "recurring_source",
                                "gsync_id",
                                "gsync_lastsync",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "meeting_belongsto_assigned_user_relationship",
                                "meeting_belongsto_created_by_relationship",
                                "meeting_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_end]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Sugar\": \"Sugar\",\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Sugar",
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[gsync_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_start]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[join_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email_reminder_sent]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Planned\": \"Planned\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Planned"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[repeat_until]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[email_reminder_time]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[outlook_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[sequence]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[host_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[duration_minutes]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[creator]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[displayed_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[gsync_lastsync]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[external_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reminder_time]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[location]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[repeat_dow]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[duration_hours]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[repeat_count]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[password]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMeetingsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings store",
                "operationId": "meetings_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings\/create": {
            "get": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings create",
                "operationId": "meetings_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings\/{id}": {
            "get": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings show",
                "operationId": "meetings_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings update",
                "operationId": "meetings_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings delete",
                "operationId": "meetings_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings single update",
                "operationId": "meetings_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "password",
                                "type",
                                "gsync_id",
                                "date_start",
                                "join_url",
                                "email_reminder_sent",
                                "status",
                                "repeat_until",
                                "email_reminder_time",
                                "outlook_id",
                                "sequence",
                                "host_url",
                                "duration_minutes",
                                "date_end",
                                "repeat_count",
                                "duration_hours",
                                "repeat_dow",
                                "creator",
                                "location",
                                "reminder_time",
                                "external_id",
                                "gsync_lastsync",
                                "displayed_url",
                                "meeting_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "password",
                                    "type",
                                    "gsync_id",
                                    "date_start",
                                    "join_url",
                                    "email_reminder_sent",
                                    "status",
                                    "repeat_until",
                                    "email_reminder_time",
                                    "outlook_id",
                                    "sequence",
                                    "host_url",
                                    "duration_minutes",
                                    "date_end",
                                    "repeat_count",
                                    "duration_hours",
                                    "repeat_dow",
                                    "creator",
                                    "location",
                                    "reminder_time",
                                    "external_id",
                                    "gsync_lastsync",
                                    "displayed_url",
                                    "meeting_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings\/{id}\/edit": {
            "get": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings edit",
                "operationId": "meetings_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings\/relation": {
            "get": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings relation",
                "operationId": "meetings_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings\/{id}\/restore": {
            "get": {
                "tags": [
                    "meetings"
                ],
                "summary": "meetings restore",
                "operationId": "meetings_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-products": {
            "get": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos_products index",
                "operationId": "aos_products_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "maincode",
                                "part_number",
                                "category",
                                "type",
                                "cost",
                                "cost_usdollar",
                                "currency_id",
                                "price",
                                "price_usdollar",
                                "url",
                                "contact_id",
                                "product_image",
                                "aos_product_category_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aos_product_belongsto_aos_product_category_relationship",
                                "aos_product_belongsto_currency_relationship",
                                "aos_product_belongsto_contact_relationship",
                                "aos_product_belongsto_assigned_user_relationship",
                                "aos_product_belongsto_created_by_relationship",
                                "aos_product_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[category]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[aos_product_category_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[cost_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[contact_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[price_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[currency_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[cost]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[product_image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[part_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[maincode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAosProductsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products store",
                "operationId": "aos-products_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosProductsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-products\/create": {
            "get": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos_products create",
                "operationId": "aos_products_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-products\/{id}": {
            "get": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products show",
                "operationId": "aos-products_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products update",
                "operationId": "aos-products_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosProductsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products delete",
                "operationId": "aos-products_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-products\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products single update",
                "operationId": "aos-products_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "category",
                                "price",
                                "aos_product_belongsto_aos_product_category_relationship",
                                "cost_usdollar",
                                "type",
                                "contact_id",
                                "aos_product_category_id",
                                "price_usdollar",
                                "aos_product_belongsto_currency_relationship",
                                "currency_id",
                                "cost",
                                "url",
                                "aos_product_belongsto_contact_relationship",
                                "product_image",
                                "part_number",
                                "maincode",
                                "aos_product_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "category",
                                    "price",
                                    "aos_product_belongsto_aos_product_category_relationship",
                                    "cost_usdollar",
                                    "type",
                                    "contact_id",
                                    "aos_product_category_id",
                                    "price_usdollar",
                                    "aos_product_belongsto_currency_relationship",
                                    "currency_id",
                                    "cost",
                                    "url",
                                    "aos_product_belongsto_contact_relationship",
                                    "product_image",
                                    "part_number",
                                    "maincode",
                                    "aos_product_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosProductsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-products\/{id}\/edit": {
            "get": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products edit",
                "operationId": "aos-products_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-products\/relation": {
            "get": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products relation",
                "operationId": "aos-products_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-products\/{id}\/restore": {
            "get": {
                "tags": [
                    "aos-products"
                ],
                "summary": "aos-products restore",
                "operationId": "aos-products_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "users index",
                "operationId": "users_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "role_id",
                                "name",
                                "email",
                                "avatar",
                                "email_verified_at",
                                "password",
                                "remember_token",
                                "settings",
                                "created_at",
                                "updated_at",
                                "user_name",
                                "user_hash",
                                "system_generated_password",
                                "pwd_last_changed",
                                "authenticate_id",
                                "sugar_login",
                                "first_name",
                                "last_name",
                                "is_admin",
                                "external_auth_only",
                                "receive_notifications",
                                "description",
                                "modified_by_id",
                                "created_by_id",
                                "title",
                                "photo",
                                "department",
                                "phone_home",
                                "phone_mobile",
                                "phone_work",
                                "phone_other",
                                "phone_fax",
                                "status",
                                "address_street",
                                "address_city",
                                "address_state",
                                "address_country",
                                "address_postalcode",
                                "portal_only",
                                "show_on_employees",
                                "employee_status",
                                "messenger_id",
                                "messenger_type",
                                "reports_to_id",
                                "is_group",
                                "factor_auth",
                                "factor_auth_interface",
                                "deleted_at",
                                "user_belongsto_reports_to_relationship",
                                "user_belongsto_role_relationship",
                                "user_belongstomany_role_relationship",
                                "user_belongsto_modified_by_relationship",
                                "user_belongsto_created_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[avatar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[role_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[reports_to_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_belongstomany_role_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[user_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[system_generated_password]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[pwd_last_changed]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[sugar_login]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[first_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[last_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_admin]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[external_auth_only]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[receive_notifications]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[photo]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[department]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_home]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_mobile]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_work]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_other]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_fax]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[portal_only]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[show_on_employees]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[employee_status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[is_group]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[factor_auth]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[factor_auth_interface]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUsersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "users store",
                "operationId": "users_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/create": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "users create",
                "operationId": "users_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "users show",
                "operationId": "users_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "users update",
                "operationId": "users_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "users delete",
                "operationId": "users_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "users single update",
                "operationId": "users_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "email",
                                "password",
                                "avatar",
                                "role_id",
                                "user_belongsto_reports_to_relationship",
                                "user_belongsto_role_relationship",
                                "user_belongstomany_role_relationship",
                                "user_name",
                                "sugar_login",
                                "first_name",
                                "last_name",
                                "is_admin",
                                "external_auth_only",
                                "receive_notifications",
                                "description",
                                "title",
                                "photo",
                                "department",
                                "phone_home",
                                "phone_mobile",
                                "phone_work",
                                "phone_other",
                                "phone_fax",
                                "status",
                                "address_street",
                                "address_city",
                                "address_state",
                                "address_country",
                                "address_postalcode",
                                "portal_only",
                                "show_on_employees",
                                "employee_status",
                                "reports_to_id",
                                "is_group",
                                "factor_auth",
                                "factor_auth_interface"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "email",
                                    "password",
                                    "avatar",
                                    "role_id",
                                    "user_belongsto_reports_to_relationship",
                                    "user_belongsto_role_relationship",
                                    "user_belongstomany_role_relationship",
                                    "user_name",
                                    "sugar_login",
                                    "first_name",
                                    "last_name",
                                    "is_admin",
                                    "external_auth_only",
                                    "receive_notifications",
                                    "description",
                                    "title",
                                    "photo",
                                    "department",
                                    "phone_home",
                                    "phone_mobile",
                                    "phone_work",
                                    "phone_other",
                                    "phone_fax",
                                    "status",
                                    "address_street",
                                    "address_city",
                                    "address_state",
                                    "address_country",
                                    "address_postalcode",
                                    "portal_only",
                                    "show_on_employees",
                                    "employee_status",
                                    "reports_to_id",
                                    "is_group",
                                    "factor_auth",
                                    "factor_auth_interface"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/edit": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "users edit",
                "operationId": "users_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/relation": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "users relation",
                "operationId": "users_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/restore": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "users restore",
                "operationId": "users_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-conditions": {
            "get": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow_conditions index",
                "operationId": "aow_conditions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "aow_workflow_id",
                                "condition_order",
                                "module_path",
                                "field",
                                "operator",
                                "value_type",
                                "value",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aow_condition_belongsto_aow_workflow_relationship",
                                "aow_condition_belongsto_created_by_relationship",
                                "aow_condition_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[operator]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[value_type][]",
                        "in": "query",
                        "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "value",
                                    "field"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[field]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[condition_order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[aow_workflow_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAowConditionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions store",
                "operationId": "aow-conditions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowConditionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-conditions\/create": {
            "get": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow_conditions create",
                "operationId": "aow_conditions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-conditions\/{id}": {
            "get": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions show",
                "operationId": "aow-conditions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions update",
                "operationId": "aow-conditions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowConditionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions delete",
                "operationId": "aow-conditions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-conditions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions single update",
                "operationId": "aow-conditions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "operator",
                                "module_path",
                                "value",
                                "value_type",
                                "field",
                                "condition_order",
                                "aow_condition_belongsto_aow_workflow_relationship",
                                "aow_workflow_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "operator",
                                    "module_path",
                                    "value",
                                    "value_type",
                                    "field",
                                    "condition_order",
                                    "aow_condition_belongsto_aow_workflow_relationship",
                                    "aow_workflow_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowConditionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-conditions\/{id}\/edit": {
            "get": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions edit",
                "operationId": "aow-conditions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowConditionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-conditions\/relation": {
            "get": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions relation",
                "operationId": "aow-conditions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-conditions\/{id}\/restore": {
            "get": {
                "tags": [
                    "aow-conditions"
                ],
                "summary": "aow-conditions restore",
                "operationId": "aow-conditions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts index",
                "operationId": "contacts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "salutation",
                                "first_name",
                                "last_name",
                                "title",
                                "photo",
                                "department",
                                "do_not_call",
                                "phone_home",
                                "phone_mobile",
                                "phone_work",
                                "phone_other",
                                "phone_fax",
                                "lawful_basis",
                                "date_reviewed",
                                "lawful_basis_source",
                                "primary_address_street",
                                "primary_address_city",
                                "primary_address_state",
                                "primary_address_postalcode",
                                "primary_address_country",
                                "alt_address_street",
                                "alt_address_city",
                                "alt_address_state",
                                "alt_address_postalcode",
                                "alt_address_country",
                                "assistant",
                                "assistant_phone",
                                "lead_source",
                                "reports_to_id",
                                "birthdate",
                                "campaign_id",
                                "joomla_account_id",
                                "portal_account_disabled",
                                "portal_user_type",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "contact_belongstomany_users_relationship",
                                "contact_belongsto_reports_to_relationship",
                                "contact_belongsto_campaign_relationship",
                                "contact_belongsto_assigned_user_relationship",
                                "contact_belongsto_created_by_relationship",
                                "contact_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[alt_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[birthdate]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[phone_work]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[department]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_fax]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[salutation]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[do_not_call]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[joomla_account_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_reviewed]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[primary_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[portal_user_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[last_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[portal_account_disabled]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[lawful_basis_source]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_other]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[primary_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[photo]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[lead_source]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[contact_belongstomany_users_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[alt_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reports_to_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[first_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[alt_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_mobile]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[alt_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assistant]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[alt_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assistant_phone]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_home]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[campaign_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerContactsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts store",
                "operationId": "contacts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContactsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts\/create": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts create",
                "operationId": "contacts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts\/{id}": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts show",
                "operationId": "contacts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts update",
                "operationId": "contacts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContactsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts delete",
                "operationId": "contacts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts single update",
                "operationId": "contacts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "description",
                                "last_name",
                                "phone_fax",
                                "salutation",
                                "do_not_call",
                                "lawful_basis",
                                "joomla_account_id",
                                "date_reviewed",
                                "primary_address_postalcode",
                                "primary_address_state",
                                "alt_address_country",
                                "department",
                                "portal_account_disabled",
                                "lawful_basis_source",
                                "phone_other",
                                "primary_address_country",
                                "primary_address_street",
                                "primary_address_city",
                                "photo",
                                "lead_source",
                                "title",
                                "first_name",
                                "alt_address_postalcode",
                                "phone_home",
                                "assistant_phone",
                                "alt_address_street",
                                "assistant",
                                "alt_address_state",
                                "birthdate",
                                "phone_mobile",
                                "contact_belongsto_reports_to_relationship",
                                "reports_to_id",
                                "alt_address_city",
                                "contact_belongstomany_users_relationship",
                                "portal_user_type",
                                "phone_work",
                                "campaign_id",
                                "contact_belongsto_campaign_relationship",
                                "contact_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "description",
                                    "last_name",
                                    "phone_fax",
                                    "salutation",
                                    "do_not_call",
                                    "lawful_basis",
                                    "joomla_account_id",
                                    "date_reviewed",
                                    "primary_address_postalcode",
                                    "primary_address_state",
                                    "alt_address_country",
                                    "department",
                                    "portal_account_disabled",
                                    "lawful_basis_source",
                                    "phone_other",
                                    "primary_address_country",
                                    "primary_address_street",
                                    "primary_address_city",
                                    "photo",
                                    "lead_source",
                                    "title",
                                    "first_name",
                                    "alt_address_postalcode",
                                    "phone_home",
                                    "assistant_phone",
                                    "alt_address_street",
                                    "assistant",
                                    "alt_address_state",
                                    "birthdate",
                                    "phone_mobile",
                                    "contact_belongsto_reports_to_relationship",
                                    "reports_to_id",
                                    "alt_address_city",
                                    "contact_belongstomany_users_relationship",
                                    "portal_user_type",
                                    "phone_work",
                                    "campaign_id",
                                    "contact_belongsto_campaign_relationship",
                                    "contact_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContactsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts\/{id}\/edit": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts edit",
                "operationId": "contacts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts\/relation": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts relation",
                "operationId": "contacts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contacts\/{id}\/restore": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "contacts restore",
                "operationId": "contacts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-users": {
            "get": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls_users index",
                "operationId": "calls_users_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "call_id",
                                "user_id",
                                "required",
                                "accept_status",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "calls_user_belongsto_call_relationship",
                                "calls_user_belongsto_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[call_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[accept_status][]",
                        "in": "query",
                        "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "none",
                                    "Accept1",
                                    "Accept2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[required][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    0
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCallsUsersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users store",
                "operationId": "calls-users_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsUsersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-users\/create": {
            "get": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls_users create",
                "operationId": "calls_users_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-users\/{id}": {
            "get": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users show",
                "operationId": "calls-users_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users update",
                "operationId": "calls-users_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsUsersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users delete",
                "operationId": "calls-users_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-users\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users single update",
                "operationId": "calls-users_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "calls_user_belongsto_call_relationship",
                                "call_id",
                                "calls_user_belongsto_user_relationship",
                                "user_id",
                                "accept_status",
                                "required"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "calls_user_belongsto_call_relationship",
                                    "call_id",
                                    "calls_user_belongsto_user_relationship",
                                    "user_id",
                                    "accept_status",
                                    "required"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsUsersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-users\/{id}\/edit": {
            "get": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users edit",
                "operationId": "calls-users_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-users\/relation": {
            "get": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users relation",
                "operationId": "calls-users_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-users\/{id}\/restore": {
            "get": {
                "tags": [
                    "calls-users"
                ],
                "summary": "calls-users restore",
                "operationId": "calls-users_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aobh-businesshours": {
            "get": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh_businesshours index",
                "operationId": "aobh_businesshours_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "opening_hours",
                                "closing_hours",
                                "open_status",
                                "day",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aobh_businesshour_belongsto_assigned_user_relationship",
                                "aobh_businesshour_belongsto_created_by_relationship",
                                "aobh_businesshour_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[day][]",
                        "in": "query",
                        "description": "{\n    \"sunday\": \"Sunday\",\n    \"monday\": \"Monday\",\n    \"tuesday\": \"Tuesday\",\n    \"wednesday\": \"Wednesday\",\n    \"thursday\": \"Thursday\",\n    \"friday\": \"Friday\",\n    \"saturday\": \"Saturday\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "sunday",
                                    "monday",
                                    "tuesday",
                                    "wednesday",
                                    "thursday",
                                    "friday",
                                    "saturday"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[closing_hours]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[open_status]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[opening_hours]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAobhBusinesshoursBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours store",
                "operationId": "aobh-businesshours_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAobhBusinesshoursStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAobhBusinesshoursReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aobh-businesshours\/create": {
            "get": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh_businesshours create",
                "operationId": "aobh_businesshours_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aobh-businesshours\/{id}": {
            "get": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours show",
                "operationId": "aobh-businesshours_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAobhBusinesshoursReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours update",
                "operationId": "aobh-businesshours_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAobhBusinesshoursUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAobhBusinesshoursReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours delete",
                "operationId": "aobh-businesshours_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aobh-businesshours\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours single update",
                "operationId": "aobh-businesshours_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "day",
                                "closing_hours",
                                "open_status",
                                "opening_hours",
                                "aobh_businesshour_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "day",
                                    "closing_hours",
                                    "open_status",
                                    "opening_hours",
                                    "aobh_businesshour_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAobhBusinesshoursSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAobhBusinesshoursReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aobh-businesshours\/{id}\/edit": {
            "get": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours edit",
                "operationId": "aobh-businesshours_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAobhBusinesshoursReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aobh-businesshours\/relation": {
            "get": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours relation",
                "operationId": "aobh-businesshours_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aobh-businesshours\/{id}\/restore": {
            "get": {
                "tags": [
                    "aobh-businesshours"
                ],
                "summary": "aobh-businesshours restore",
                "operationId": "aobh-businesshours_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "categories index",
                "operationId": "categories_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "parent_id",
                                "order",
                                "name",
                                "slug",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[slug]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCategoriesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "categories"
                ],
                "summary": "categories store",
                "operationId": "categories_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCategoriesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/create": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "categories create",
                "operationId": "categories_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "categories show",
                "operationId": "categories_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "categories"
                ],
                "summary": "categories update",
                "operationId": "categories_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCategoriesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "categories"
                ],
                "summary": "categories delete",
                "operationId": "categories_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "categories"
                ],
                "summary": "categories single update",
                "operationId": "categories_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "parent_id",
                                "order",
                                "name",
                                "slug"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parent_id",
                                    "order",
                                    "name",
                                    "slug"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCategoriesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/edit": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "categories edit",
                "operationId": "categories_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/relation": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "categories relation",
                "operationId": "categories_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/restore": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "categories restore",
                "operationId": "categories_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/linked-documents": {
            "get": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked_documents index",
                "operationId": "linked_documents_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "parent_id",
                                "parent_type",
                                "document_id",
                                "document_revision_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "linked_document_belongsto_document_revision_relationship",
                                "linked_document_belongsto_document_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[document_revision_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[document_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerLinkedDocumentsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents store",
                "operationId": "linked-documents_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerLinkedDocumentsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLinkedDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/linked-documents\/create": {
            "get": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked_documents create",
                "operationId": "linked_documents_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/linked-documents\/{id}": {
            "get": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents show",
                "operationId": "linked-documents_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLinkedDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents update",
                "operationId": "linked-documents_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerLinkedDocumentsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLinkedDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents delete",
                "operationId": "linked-documents_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/linked-documents\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents single update",
                "operationId": "linked-documents_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "linked_document_belongsto_document_revision_relationship",
                                "parent_type",
                                "document_revision_id",
                                "linked_document_belongsto_document_relationship",
                                "document_id",
                                "parent_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "linked_document_belongsto_document_revision_relationship",
                                    "parent_type",
                                    "document_revision_id",
                                    "linked_document_belongsto_document_relationship",
                                    "document_id",
                                    "parent_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerLinkedDocumentsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLinkedDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/linked-documents\/{id}\/edit": {
            "get": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents edit",
                "operationId": "linked-documents_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerLinkedDocumentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/linked-documents\/relation": {
            "get": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents relation",
                "operationId": "linked-documents_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/linked-documents\/{id}\/restore": {
            "get": {
                "tags": [
                    "linked-documents"
                ],
                "summary": "linked-documents restore",
                "operationId": "linked-documents_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/favorites": {
            "get": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites index",
                "operationId": "favorites_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "parent_id",
                                "parent_type",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "favorite_belongsto_assigned_user_relationship",
                                "favorite_belongsto_created_by_relationship",
                                "favorite_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFavoritesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites store",
                "operationId": "favorites_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFavoritesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFavoritesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/favorites\/create": {
            "get": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites create",
                "operationId": "favorites_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/favorites\/{id}": {
            "get": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites show",
                "operationId": "favorites_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFavoritesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites update",
                "operationId": "favorites_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFavoritesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFavoritesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites delete",
                "operationId": "favorites_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/favorites\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites single update",
                "operationId": "favorites_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "favorite_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "favorite_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFavoritesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFavoritesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/favorites\/{id}\/edit": {
            "get": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites edit",
                "operationId": "favorites_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFavoritesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/favorites\/relation": {
            "get": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites relation",
                "operationId": "favorites_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/favorites\/{id}\/restore": {
            "get": {
                "tags": [
                    "favorites"
                ],
                "summary": "favorites restore",
                "operationId": "favorites_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups": {
            "get": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups index",
                "operationId": "securitygroups_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "noninheritable",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "securitygroup_belongsto_assigned_user_relationship",
                                "securitygroup_belongsto_created_by_relationship",
                                "securitygroup_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[noninheritable]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups store",
                "operationId": "securitygroups_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSecuritygroupsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups\/create": {
            "get": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups create",
                "operationId": "securitygroups_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups\/{id}": {
            "get": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups show",
                "operationId": "securitygroups_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups update",
                "operationId": "securitygroups_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSecuritygroupsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups delete",
                "operationId": "securitygroups_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups single update",
                "operationId": "securitygroups_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "noninheritable",
                                "securitygroup_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "noninheritable",
                                    "securitygroup_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSecuritygroupsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups\/{id}\/edit": {
            "get": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups edit",
                "operationId": "securitygroups_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSecuritygroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups\/relation": {
            "get": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups relation",
                "operationId": "securitygroups_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/securitygroups\/{id}\/restore": {
            "get": {
                "tags": [
                    "securitygroups"
                ],
                "summary": "securitygroups restore",
                "operationId": "securitygroups_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-events": {
            "get": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop_case_events index",
                "operationId": "aop_case_events_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "case_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aop_case_event_belongsto_case_relationship",
                                "aop_case_event_belongsto_assigned_user_relationship",
                                "aop_case_event_belongsto_created_by_relationship",
                                "aop_case_event_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[case_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAopCaseEventsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events store",
                "operationId": "aop-case-events_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAopCaseEventsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-events\/create": {
            "get": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop_case_events create",
                "operationId": "aop_case_events_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-events\/{id}": {
            "get": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events show",
                "operationId": "aop-case-events_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events update",
                "operationId": "aop-case-events_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAopCaseEventsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events delete",
                "operationId": "aop-case-events_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-events\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events single update",
                "operationId": "aop-case-events_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "aop_case_event_belongsto_case_relationship",
                                "case_id",
                                "aop_case_event_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "aop_case_event_belongsto_case_relationship",
                                    "case_id",
                                    "aop_case_event_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAopCaseEventsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-events\/{id}\/edit": {
            "get": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events edit",
                "operationId": "aop-case-events_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseEventsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-events\/relation": {
            "get": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events relation",
                "operationId": "aop-case-events_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-events\/{id}\/restore": {
            "get": {
                "tags": [
                    "aop-case-events"
                ],
                "summary": "aop-case-events restore",
                "operationId": "aop-case-events_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-line-item-groups": {
            "get": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos_line_item_groups index",
                "operationId": "aos_line_item_groups_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "total_amt",
                                "total_amt_usdollar",
                                "discount_amount",
                                "discount_amount_usdollar",
                                "subtotal_amount",
                                "subtotal_amount_usdollar",
                                "tax_amount",
                                "tax_amount_usdollar",
                                "subtotal_tax_amount",
                                "subtotal_tax_amount_usdollar",
                                "total_amount",
                                "total_amount_usdollar",
                                "parent_type",
                                "parent_id",
                                "number",
                                "currency_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aos_line_item_group_belongsto_currency_relationship",
                                "aos_line_item_group_belongsto_assigned_user_relationship",
                                "aos_line_item_group_belongsto_created_by_relationship",
                                "aos_line_item_group_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[subtotal_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[tax_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[discount_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[currency_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[parent_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[total_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_tax_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[tax_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amt_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_tax_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[parent_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[discount_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAosLineItemGroupsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups store",
                "operationId": "aos-line-item-groups_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosLineItemGroupsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosLineItemGroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-line-item-groups\/create": {
            "get": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos_line_item_groups create",
                "operationId": "aos_line_item_groups_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-line-item-groups\/{id}": {
            "get": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups show",
                "operationId": "aos-line-item-groups_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosLineItemGroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups update",
                "operationId": "aos-line-item-groups_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosLineItemGroupsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosLineItemGroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups delete",
                "operationId": "aos-line-item-groups_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-line-item-groups\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups single update",
                "operationId": "aos-line-item-groups_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "total_amt",
                                "total_amount",
                                "parent_type",
                                "number",
                                "tax_amount",
                                "discount_amount_usdollar",
                                "currency_id",
                                "total_amount_usdollar",
                                "subtotal_tax_amount",
                                "subtotal_amount",
                                "tax_amount_usdollar",
                                "total_amt_usdollar",
                                "subtotal_amount_usdollar",
                                "aos_line_item_group_belongsto_currency_relationship",
                                "subtotal_tax_amount_usdollar",
                                "parent_id",
                                "discount_amount",
                                "aos_line_item_group_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "total_amt",
                                    "total_amount",
                                    "parent_type",
                                    "number",
                                    "tax_amount",
                                    "discount_amount_usdollar",
                                    "currency_id",
                                    "total_amount_usdollar",
                                    "subtotal_tax_amount",
                                    "subtotal_amount",
                                    "tax_amount_usdollar",
                                    "total_amt_usdollar",
                                    "subtotal_amount_usdollar",
                                    "aos_line_item_group_belongsto_currency_relationship",
                                    "subtotal_tax_amount_usdollar",
                                    "parent_id",
                                    "discount_amount",
                                    "aos_line_item_group_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosLineItemGroupsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosLineItemGroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-line-item-groups\/{id}\/edit": {
            "get": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups edit",
                "operationId": "aos-line-item-groups_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosLineItemGroupsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-line-item-groups\/relation": {
            "get": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups relation",
                "operationId": "aos-line-item-groups_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-line-item-groups\/{id}\/restore": {
            "get": {
                "tags": [
                    "aos-line-item-groups"
                ],
                "summary": "aos-line-item-groups restore",
                "operationId": "aos-line-item-groups_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notes": {
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "notes index",
                "operationId": "notes_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "assigned_user_id",
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "name",
                                "file_mime_type",
                                "filename",
                                "parent_type",
                                "parent_id",
                                "contact_id",
                                "portal_flag",
                                "embed_flag",
                                "description",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "note_belongsto_parent_relationship",
                                "note_belongsto_contact_relationship",
                                "note_belongsto_assigned_user_relationship",
                                "note_belongsto_created_by_relationship",
                                "note_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[file_mime_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[contact_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[parent_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[portal_flag]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[filename]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[embed_flag]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerNotesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "notes"
                ],
                "summary": "notes store",
                "operationId": "notes_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notes\/create": {
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "notes create",
                "operationId": "notes_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notes\/{id}": {
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "notes show",
                "operationId": "notes_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "notes"
                ],
                "summary": "notes update",
                "operationId": "notes_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "notes"
                ],
                "summary": "notes delete",
                "operationId": "notes_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notes\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "notes"
                ],
                "summary": "notes single update",
                "operationId": "notes_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "filename",
                                "parent_type",
                                "portal_flag",
                                "note_belongsto_contact_relationship",
                                "note_belongsto_parent_relationship",
                                "embed_flag",
                                "parent_id",
                                "contact_id",
                                "file_mime_type",
                                "note_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "filename",
                                    "parent_type",
                                    "portal_flag",
                                    "note_belongsto_contact_relationship",
                                    "note_belongsto_parent_relationship",
                                    "embed_flag",
                                    "parent_id",
                                    "contact_id",
                                    "file_mime_type",
                                    "note_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notes\/{id}\/edit": {
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "notes edit",
                "operationId": "notes_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notes\/relation": {
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "notes relation",
                "operationId": "notes_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notes\/{id}\/restore": {
            "get": {
                "tags": [
                    "notes"
                ],
                "summary": "notes restore",
                "operationId": "notes_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/accounts": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts index",
                "operationId": "accounts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "account_type",
                                "industry",
                                "annual_revenue",
                                "phone_fax",
                                "billing_address_street",
                                "billing_address_city",
                                "billing_address_state",
                                "billing_address_postalcode",
                                "billing_address_country",
                                "rating",
                                "phone_office",
                                "phone_alternate",
                                "website",
                                "ownership",
                                "employees",
                                "ticker_symbol",
                                "shipping_address_street",
                                "shipping_address_city",
                                "shipping_address_state",
                                "shipping_address_postalcode",
                                "shipping_address_country",
                                "parent_id",
                                "sic_code",
                                "campaign_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "account_belongstomany_opportunities_relationship",
                                "account_belongstomany_bugs_relationship",
                                "account_belongstomany_contacts_relationship",
                                "account_belongsto_campaign_relationship",
                                "account_belongsto_assigned_user_relationship",
                                "account_belongsto_parent_relationship",
                                "account_belongsto_created_by_relationship",
                                "account_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[account_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[industry]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[annual_revenue]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_fax]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[billing_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[billing_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[account_belongstomany_opportunities_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[account_belongstomany_bugs_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[account_belongstomany_contacts_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[billing_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[billing_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[billing_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[rating]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_office]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[phone_alternate]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[website]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[ownership]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[employees]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[ticker_symbol]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_street]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_postalcode]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_address_country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[sic_code]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[campaign_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAccountsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts store",
                "operationId": "accounts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAccountsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAccountsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/accounts\/create": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts create",
                "operationId": "accounts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/accounts\/{id}": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts show",
                "operationId": "accounts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAccountsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts update",
                "operationId": "accounts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAccountsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAccountsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts delete",
                "operationId": "accounts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/accounts\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts single update",
                "operationId": "accounts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "account_type",
                                "industry",
                                "annual_revenue",
                                "phone_fax",
                                "billing_address_street",
                                "billing_address_city",
                                "account_belongstomany_bugs_relationship",
                                "account_belongstomany_opportunities_relationship",
                                "account_belongstomany_contacts_relationship",
                                "billing_address_state",
                                "billing_address_postalcode",
                                "billing_address_country",
                                "rating",
                                "phone_office",
                                "phone_alternate",
                                "website",
                                "ownership",
                                "employees",
                                "ticker_symbol",
                                "shipping_address_street",
                                "shipping_address_city",
                                "shipping_address_state",
                                "shipping_address_postalcode",
                                "shipping_address_country",
                                "sic_code",
                                "campaign_id",
                                "account_belongsto_campaign_relationship",
                                "account_belongsto_assigned_user_relationship",
                                "assigned_user_id",
                                "account_belongsto_parent_relationship",
                                "parent_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "account_type",
                                    "industry",
                                    "annual_revenue",
                                    "phone_fax",
                                    "billing_address_street",
                                    "billing_address_city",
                                    "account_belongstomany_bugs_relationship",
                                    "account_belongstomany_opportunities_relationship",
                                    "account_belongstomany_contacts_relationship",
                                    "billing_address_state",
                                    "billing_address_postalcode",
                                    "billing_address_country",
                                    "rating",
                                    "phone_office",
                                    "phone_alternate",
                                    "website",
                                    "ownership",
                                    "employees",
                                    "ticker_symbol",
                                    "shipping_address_street",
                                    "shipping_address_city",
                                    "shipping_address_state",
                                    "shipping_address_postalcode",
                                    "shipping_address_country",
                                    "sic_code",
                                    "campaign_id",
                                    "account_belongsto_campaign_relationship",
                                    "account_belongsto_assigned_user_relationship",
                                    "assigned_user_id",
                                    "account_belongsto_parent_relationship",
                                    "parent_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAccountsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAccountsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/accounts\/{id}\/edit": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts edit",
                "operationId": "accounts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAccountsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/accounts\/relation": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts relation",
                "operationId": "accounts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/accounts\/{id}\/restore": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "accounts restore",
                "operationId": "accounts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/inbound-emails": {
            "get": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound_email index",
                "operationId": "inbound_email_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "name",
                                "status",
                                "server_url",
                                "email_user",
                                "email_password",
                                "port",
                                "service",
                                "mailbox",
                                "delete_seen",
                                "mailbox_type",
                                "template_id",
                                "stored_options",
                                "group_id",
                                "is_personal",
                                "groupfolder_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "inbound_email_belongsto_created_by_relationship",
                                "inbound_email_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[server_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email_user]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[port]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[service]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[delete_seen]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mailbox_type][]",
                        "in": "query",
                        "description": "{\n    \"MailboxType1\": \"MailboxType1\",\n    \"MailboxType2\": \"MailboxType2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "MailboxType1",
                                    "MailboxType2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[template_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[group_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_personal]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[groupfolder_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerInboundEmailBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails store",
                "operationId": "inbound-emails_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerInboundEmailStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerInboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/inbound-emails\/create": {
            "get": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound_email create",
                "operationId": "inbound_email_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/inbound-emails\/{id}": {
            "get": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails show",
                "operationId": "inbound-emails_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerInboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails update",
                "operationId": "inbound-emails_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerInboundEmailUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerInboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails delete",
                "operationId": "inbound-emails_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/inbound-emails\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails single update",
                "operationId": "inbound-emails_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "server_url",
                                "email_user",
                                "email_password",
                                "port",
                                "service",
                                "mailbox",
                                "delete_seen",
                                "mailbox_type",
                                "template_id",
                                "group_id",
                                "is_personal",
                                "groupfolder_id",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "server_url",
                                    "email_user",
                                    "email_password",
                                    "port",
                                    "service",
                                    "mailbox",
                                    "delete_seen",
                                    "mailbox_type",
                                    "template_id",
                                    "group_id",
                                    "is_personal",
                                    "groupfolder_id",
                                    "status"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerInboundEmailSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerInboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/inbound-emails\/{id}\/edit": {
            "get": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails edit",
                "operationId": "inbound-emails_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerInboundEmailReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/inbound-emails\/relation": {
            "get": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails relation",
                "operationId": "inbound-emails_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/inbound-emails\/{id}\/restore": {
            "get": {
                "tags": [
                    "inbound-emails"
                ],
                "summary": "inbound-emails restore",
                "operationId": "inbound-emails_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/folders": {
            "get": {
                "tags": [
                    "folders"
                ],
                "summary": "folders index",
                "operationId": "folders_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "folder_type",
                                "parent_folder",
                                "has_child",
                                "is_group",
                                "is_dynamic",
                                "dynamic_query",
                                "assigned_user_id",
                                "modified_by_id",
                                "created_by_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "folder_belongsto_parent_folder_relationship",
                                "folder_belongsto_assigned_user_relationship",
                                "folder_belongsto_created_by_relationship",
                                "folder_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[folder_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[parent_folder]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[has_child]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_group]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_dynamic]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFoldersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "folders"
                ],
                "summary": "folders store",
                "operationId": "folders_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFoldersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFoldersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/folders\/create": {
            "get": {
                "tags": [
                    "folders"
                ],
                "summary": "folders create",
                "operationId": "folders_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/folders\/{id}": {
            "get": {
                "tags": [
                    "folders"
                ],
                "summary": "folders show",
                "operationId": "folders_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFoldersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "folders"
                ],
                "summary": "folders update",
                "operationId": "folders_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFoldersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFoldersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "folders"
                ],
                "summary": "folders delete",
                "operationId": "folders_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/folders\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "folders"
                ],
                "summary": "folders single update",
                "operationId": "folders_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "folder_type",
                                "folder_belongsto_parent_folder_relationship",
                                "parent_folder",
                                "has_child",
                                "is_group",
                                "is_dynamic",
                                "dynamic_query",
                                "folder_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "folder_type",
                                    "folder_belongsto_parent_folder_relationship",
                                    "parent_folder",
                                    "has_child",
                                    "is_group",
                                    "is_dynamic",
                                    "dynamic_query",
                                    "folder_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFoldersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFoldersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/folders\/{id}\/edit": {
            "get": {
                "tags": [
                    "folders"
                ],
                "summary": "folders edit",
                "operationId": "folders_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFoldersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/folders\/relation": {
            "get": {
                "tags": [
                    "folders"
                ],
                "summary": "folders relation",
                "operationId": "folders_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/folders\/{id}\/restore": {
            "get": {
                "tags": [
                    "folders"
                ],
                "summary": "folders restore",
                "operationId": "folders_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/emails": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "emails index",
                "operationId": "emails_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "assigned_user_id",
                                "orphaned",
                                "last_synced",
                                "date_sent_received",
                                "message_id",
                                "type",
                                "status",
                                "flagged",
                                "reply_to_status",
                                "intent",
                                "mailbox_id",
                                "parent_type",
                                "parent_id",
                                "uid",
                                "category_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "email_belongsto_assigned_user_relationship",
                                "email_belongsto_created_by_relationship",
                                "email_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[orphaned]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[last_synced]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[date_sent_received]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[flagged]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reply_to_status]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[intent]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mailbox_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_type][]",
                        "in": "query",
                        "description": "{\n    \"opportunities\": \"opportunities\",\n    \"cases\": \"cases\",\n    \"leads\": \"leads\",\n    \"project\": \"project\",\n    \"prospects\": \"prospects\",\n    \"bugs\": \"bugs\",\n    \"project_task\": \"project_task\",\n    \"accounts\": \"accounts\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "opportunities",
                                    "cases",
                                    "leads",
                                    "project",
                                    "prospects",
                                    "bugs",
                                    "project_task",
                                    "accounts"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[parent_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[uid]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[category_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Active",
                                    "Inactive"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerEmailsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "emails"
                ],
                "summary": "emails store",
                "operationId": "emails_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/emails\/create": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "emails create",
                "operationId": "emails_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/emails\/{id}": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "emails show",
                "operationId": "emails_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "emails"
                ],
                "summary": "emails update",
                "operationId": "emails_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "emails"
                ],
                "summary": "emails delete",
                "operationId": "emails_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/emails\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "emails"
                ],
                "summary": "emails single update",
                "operationId": "emails_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "orphaned",
                                "last_synced",
                                "date_sent_received",
                                "type",
                                "flagged",
                                "reply_to_status",
                                "intent",
                                "mailbox_id",
                                "parent_type",
                                "parent_id",
                                "uid",
                                "category_id",
                                "status",
                                "email_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "orphaned",
                                    "last_synced",
                                    "date_sent_received",
                                    "type",
                                    "flagged",
                                    "reply_to_status",
                                    "intent",
                                    "mailbox_id",
                                    "parent_type",
                                    "parent_id",
                                    "uid",
                                    "category_id",
                                    "status",
                                    "email_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/emails\/{id}\/edit": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "emails edit",
                "operationId": "emails_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/emails\/relation": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "emails relation",
                "operationId": "emails_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/emails\/{id}\/restore": {
            "get": {
                "tags": [
                    "emails"
                ],
                "summary": "emails restore",
                "operationId": "emails_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-product-categories": {
            "get": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos_product_categories index",
                "operationId": "aos_product_categories_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "is_parent",
                                "parent_category_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aos_product_category_belongsto_parent_relationship",
                                "aos_product_category_belongsto_assigned_user_relationship",
                                "aos_product_category_belongsto_created_by_relationship",
                                "aos_product_category_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_parent]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_category_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAosProductCategoriesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories store",
                "operationId": "aos-product-categories_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosProductCategoriesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-product-categories\/create": {
            "get": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos_product_categories create",
                "operationId": "aos_product_categories_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-product-categories\/{id}": {
            "get": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories show",
                "operationId": "aos-product-categories_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories update",
                "operationId": "aos-product-categories_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosProductCategoriesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories delete",
                "operationId": "aos-product-categories_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-product-categories\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories single update",
                "operationId": "aos-product-categories_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "is_parent",
                                "parent_category_id",
                                "aos_product_category_belongsto_parent_relationship",
                                "aos_product_category_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "is_parent",
                                    "parent_category_id",
                                    "aos_product_category_belongsto_parent_relationship",
                                    "aos_product_category_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosProductCategoriesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-product-categories\/{id}\/edit": {
            "get": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories edit",
                "operationId": "aos-product-categories_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosProductCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-product-categories\/relation": {
            "get": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories relation",
                "operationId": "aos-product-categories_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-product-categories\/{id}\/restore": {
            "get": {
                "tags": [
                    "aos-product-categories"
                ],
                "summary": "aos-product-categories restore",
                "operationId": "aos-product-categories_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages": {
            "get": {
                "tags": [
                    "pages"
                ],
                "summary": "pages index",
                "operationId": "pages_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "author_id",
                                "title",
                                "excerpt",
                                "body",
                                "image",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "INACTIVE",
                                    "ACTIVE"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPagesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "pages"
                ],
                "summary": "pages store",
                "operationId": "pages_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/create": {
            "get": {
                "tags": [
                    "pages"
                ],
                "summary": "pages create",
                "operationId": "pages_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}": {
            "get": {
                "tags": [
                    "pages"
                ],
                "summary": "pages show",
                "operationId": "pages_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "pages"
                ],
                "summary": "pages update",
                "operationId": "pages_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "pages"
                ],
                "summary": "pages delete",
                "operationId": "pages_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "pages"
                ],
                "summary": "pages single update",
                "operationId": "pages_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "excerpt",
                                "body",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "image"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "excerpt",
                                    "body",
                                    "slug",
                                    "meta_description",
                                    "meta_keywords",
                                    "status",
                                    "image"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/edit": {
            "get": {
                "tags": [
                    "pages"
                ],
                "summary": "pages edit",
                "operationId": "pages_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/relation": {
            "get": {
                "tags": [
                    "pages"
                ],
                "summary": "pages relation",
                "operationId": "pages_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/restore": {
            "get": {
                "tags": [
                    "pages"
                ],
                "summary": "pages restore",
                "operationId": "pages_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-pdf-templates": {
            "get": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos_pdf_templates index",
                "operationId": "aos_pdf_templates_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "active",
                                "type",
                                "pdfheader",
                                "pdffooter",
                                "margin_left",
                                "margin_right",
                                "margin_top",
                                "margin_bottom",
                                "margin_header",
                                "margin_footer",
                                "page_size",
                                "orientation",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aos_pdf_template_belongsto_assigned_user_relationship",
                                "aos_pdf_template_belongsto_created_by_relationship",
                                "aos_pdf_template_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[active]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[margin_left]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[margin_right]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[margin_top]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[margin_bottom]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[margin_header]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[margin_footer]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[page_size]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[orientation][]",
                        "in": "query",
                        "description": "{\n    \"LANDSCAPE\": \"LANDSCAPE\",\n    \"PORTRAIT\": \"PORTRAIT\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "LANDSCAPE",
                                    "PORTRAIT"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAosPdfTemplatesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates store",
                "operationId": "aos-pdf-templates_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosPdfTemplatesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosPdfTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-pdf-templates\/create": {
            "get": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos_pdf_templates create",
                "operationId": "aos_pdf_templates_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-pdf-templates\/{id}": {
            "get": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates show",
                "operationId": "aos-pdf-templates_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosPdfTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates update",
                "operationId": "aos-pdf-templates_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosPdfTemplatesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosPdfTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates delete",
                "operationId": "aos-pdf-templates_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-pdf-templates\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates single update",
                "operationId": "aos-pdf-templates_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "active",
                                "type",
                                "pdfheader",
                                "pdffooter",
                                "margin_left",
                                "margin_right",
                                "margin_top",
                                "margin_bottom",
                                "margin_header",
                                "margin_footer",
                                "page_size",
                                "orientation",
                                "aos_pdf_template_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "active",
                                    "type",
                                    "pdfheader",
                                    "pdffooter",
                                    "margin_left",
                                    "margin_right",
                                    "margin_top",
                                    "margin_bottom",
                                    "margin_header",
                                    "margin_footer",
                                    "page_size",
                                    "orientation",
                                    "aos_pdf_template_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosPdfTemplatesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosPdfTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-pdf-templates\/{id}\/edit": {
            "get": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates edit",
                "operationId": "aos-pdf-templates_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosPdfTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-pdf-templates\/relation": {
            "get": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates relation",
                "operationId": "aos-pdf-templates_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-pdf-templates\/{id}\/restore": {
            "get": {
                "tags": [
                    "aos-pdf-templates"
                ],
                "summary": "aos-pdf-templates restore",
                "operationId": "aos-pdf-templates_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/project-tasks": {
            "get": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project_task index",
                "operationId": "project_task_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "project_id",
                                "project_task_id",
                                "name",
                                "status",
                                "relationship_type",
                                "description",
                                "predecessors",
                                "date_start",
                                "time_start",
                                "time_finish",
                                "date_finish",
                                "duration",
                                "duration_unit",
                                "actual_duration",
                                "percent_complete",
                                "date_due",
                                "time_due",
                                "parent_task_id",
                                "assigned_user_id",
                                "modified_by_id",
                                "created_by_id",
                                "priority",
                                "milestone_flag",
                                "order_number",
                                "task_number",
                                "estimated_effort",
                                "actual_effort",
                                "utilization",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "project_task_belongsto_assigned_user_relationship",
                                "project_task_belongsto_created_by_relationship",
                                "project_task_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[duration]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[time_finish]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[priority][]",
                        "in": "query",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[actual_effort]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[order_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[actual_duration]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[task_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[utilization]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[estimated_effort]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[relationship_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[time_start]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[time_due]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[milestone_flag]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[duration_unit][]",
                        "in": "query",
                        "description": "{\n    \"Seconds\": \"Seconds\",\n    \"Hours\": \"Hours\",\n    \"Days\": \"Days\",\n    \"Weeks\": \"Weeks\",\n    \"Months\": \"Months\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Seconds",
                                    "Hours",
                                    "Days",
                                    "Weeks",
                                    "Months"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[date_finish]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[date_due]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[percent_complete]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[date_start]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\",\n    \"Planned\": \"Planned\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active",
                                    "Planned"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerProjectTaskBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks store",
                "operationId": "project-tasks_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProjectTaskStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectTaskReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/project-tasks\/create": {
            "get": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project_task create",
                "operationId": "project_task_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/project-tasks\/{id}": {
            "get": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks show",
                "operationId": "project-tasks_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectTaskReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks update",
                "operationId": "project-tasks_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProjectTaskUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectTaskReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks delete",
                "operationId": "project-tasks_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/project-tasks\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks single update",
                "operationId": "project-tasks_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "order_number",
                                "date_start",
                                "percent_complete",
                                "predecessors",
                                "time_due",
                                "time_start",
                                "time_finish",
                                "priority",
                                "actual_effort",
                                "task_number",
                                "actual_duration",
                                "utilization",
                                "estimated_effort",
                                "duration",
                                "relationship_type",
                                "milestone_flag",
                                "duration_unit",
                                "date_finish",
                                "date_due",
                                "status",
                                "project_task_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "order_number",
                                    "date_start",
                                    "percent_complete",
                                    "predecessors",
                                    "time_due",
                                    "time_start",
                                    "time_finish",
                                    "priority",
                                    "actual_effort",
                                    "task_number",
                                    "actual_duration",
                                    "utilization",
                                    "estimated_effort",
                                    "duration",
                                    "relationship_type",
                                    "milestone_flag",
                                    "duration_unit",
                                    "date_finish",
                                    "date_due",
                                    "status",
                                    "project_task_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProjectTaskSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectTaskReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/project-tasks\/{id}\/edit": {
            "get": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks edit",
                "operationId": "project-tasks_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectTaskReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/project-tasks\/relation": {
            "get": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks relation",
                "operationId": "project-tasks_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/project-tasks\/{id}\/restore": {
            "get": {
                "tags": [
                    "project-tasks"
                ],
                "summary": "project-tasks restore",
                "operationId": "project-tasks_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-areas": {
            "get": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg_areas index",
                "operationId": "jjwg_areas_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "city",
                                "state",
                                "country",
                                "coordinates",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "jjwg_area_belongsto_assigned_user_relationship",
                                "jjwg_area_belongsto_created_by_relationship",
                                "jjwg_area_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[state]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[country]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerJjwgAreasBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas store",
                "operationId": "jjwg-areas_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgAreasStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAreasReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-areas\/create": {
            "get": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg_areas create",
                "operationId": "jjwg_areas_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-areas\/{id}": {
            "get": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas show",
                "operationId": "jjwg-areas_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAreasReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas update",
                "operationId": "jjwg-areas_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgAreasUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAreasReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas delete",
                "operationId": "jjwg-areas_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-areas\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas single update",
                "operationId": "jjwg-areas_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "city",
                                "state",
                                "country",
                                "jjwg_area_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "city",
                                    "state",
                                    "country",
                                    "jjwg_area_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerJjwgAreasSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAreasReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-areas\/{id}\/edit": {
            "get": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas edit",
                "operationId": "jjwg-areas_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerJjwgAreasReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-areas\/relation": {
            "get": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas relation",
                "operationId": "jjwg-areas_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/jjwg-areas\/{id}\/restore": {
            "get": {
                "tags": [
                    "jjwg-areas"
                ],
                "summary": "jjwg-areas restore",
                "operationId": "jjwg-areas_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestionoptions": {
            "get": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions index",
                "operationId": "surveyquestionoptions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "sort_order",
                                "survey_question_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "surveyquestionoption_belongsto_survey_question_relationship",
                                "surveyquestionoption_belongsto_assigned_user_relationship",
                                "surveyquestionoption_belongsto_created_by_relationship",
                                "surveyquestionoption_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[sort_order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[survey_question_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSurveyquestionoptionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions store",
                "operationId": "surveyquestionoptions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveyquestionoptionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionoptionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestionoptions\/create": {
            "get": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions create",
                "operationId": "surveyquestionoptions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestionoptions\/{id}": {
            "get": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions show",
                "operationId": "surveyquestionoptions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionoptionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions update",
                "operationId": "surveyquestionoptions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveyquestionoptionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionoptionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions delete",
                "operationId": "surveyquestionoptions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestionoptions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions single update",
                "operationId": "surveyquestionoptions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "survey_question_id",
                                "sort_order",
                                "surveyquestionoption_belongsto_survey_question_relationship",
                                "surveyquestionoption_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "survey_question_id",
                                    "sort_order",
                                    "surveyquestionoption_belongsto_survey_question_relationship",
                                    "surveyquestionoption_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSurveyquestionoptionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionoptionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestionoptions\/{id}\/edit": {
            "get": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions edit",
                "operationId": "surveyquestionoptions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSurveyquestionoptionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestionoptions\/relation": {
            "get": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions relation",
                "operationId": "surveyquestionoptions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/surveyquestionoptions\/{id}\/restore": {
            "get": {
                "tags": [
                    "surveyquestionoptions"
                ],
                "summary": "surveyquestionoptions restore",
                "operationId": "surveyquestionoptions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-reschedules": {
            "get": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls_reschedule index",
                "operationId": "calls_reschedule_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "reason",
                                "call_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "calls_reschedule_belongsto_call_relationship",
                                "calls_reschedule_belongsto_assigned_user_relationship",
                                "calls_reschedule_belongsto_created_by_relationship",
                                "calls_reschedule_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[call_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reason]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCallsRescheduleBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules store",
                "operationId": "calls-reschedules_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsRescheduleStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsRescheduleReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-reschedules\/create": {
            "get": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls_reschedule create",
                "operationId": "calls_reschedule_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-reschedules\/{id}": {
            "get": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules show",
                "operationId": "calls-reschedules_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsRescheduleReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules update",
                "operationId": "calls-reschedules_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsRescheduleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsRescheduleReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules delete",
                "operationId": "calls-reschedules_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-reschedules\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules single update",
                "operationId": "calls-reschedules_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "calls_reschedule_belongsto_call_relationship",
                                "reason",
                                "call_id",
                                "calls_reschedule_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "calls_reschedule_belongsto_call_relationship",
                                    "reason",
                                    "call_id",
                                    "calls_reschedule_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsRescheduleSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsRescheduleReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-reschedules\/{id}\/edit": {
            "get": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules edit",
                "operationId": "calls-reschedules_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsRescheduleReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-reschedules\/relation": {
            "get": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules relation",
                "operationId": "calls-reschedules_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-reschedules\/{id}\/restore": {
            "get": {
                "tags": [
                    "calls-reschedules"
                ],
                "summary": "calls-reschedules restore",
                "operationId": "calls-reschedules_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-templates": {
            "get": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email_templates index",
                "operationId": "email_templates_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "modified_by_id",
                                "created_by_id",
                                "published",
                                "name",
                                "description",
                                "subject",
                                "body",
                                "body_html",
                                "assigned_user_id",
                                "text_only",
                                "type",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "email_template_belongsto_assigned_user_relationship",
                                "email_template_belongsto_created_by_relationship",
                                "email_template_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text_only]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[published][]",
                        "in": "query",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Yes",
                                    "No"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerEmailTemplatesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates store",
                "operationId": "email-templates_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailTemplatesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-templates\/create": {
            "get": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email_templates create",
                "operationId": "email_templates_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-templates\/{id}": {
            "get": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates show",
                "operationId": "email-templates_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates update",
                "operationId": "email-templates_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailTemplatesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates delete",
                "operationId": "email-templates_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-templates\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates single update",
                "operationId": "email-templates_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "subject",
                                "body",
                                "body_html",
                                "text_only",
                                "type",
                                "published",
                                "email_template_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "subject",
                                    "body",
                                    "body_html",
                                    "text_only",
                                    "type",
                                    "published",
                                    "email_template_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailTemplatesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-templates\/{id}\/edit": {
            "get": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates edit",
                "operationId": "email-templates_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailTemplatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-templates\/relation": {
            "get": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates relation",
                "operationId": "email-templates_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-templates\/{id}\/restore": {
            "get": {
                "tags": [
                    "email-templates"
                ],
                "summary": "email-templates restore",
                "operationId": "email-templates_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-charts": {
            "get": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor_charts index",
                "operationId": "aor_charts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "aor_report_id",
                                "type",
                                "x_field",
                                "y_field",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aor_chart_belongsto_aor_report_relationship",
                                "aor_chart_belongsto_created_by_relationship",
                                "aor_chart_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[aor_report_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[y_field]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[x_field]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAorChartsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts store",
                "operationId": "aor-charts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorChartsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorChartsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-charts\/create": {
            "get": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor_charts create",
                "operationId": "aor_charts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-charts\/{id}": {
            "get": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts show",
                "operationId": "aor-charts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorChartsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts update",
                "operationId": "aor-charts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorChartsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorChartsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts delete",
                "operationId": "aor-charts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-charts\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts single update",
                "operationId": "aor-charts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "aor_chart_belongsto_aor_report_relationship",
                                "aor_report_id",
                                "y_field",
                                "x_field",
                                "type"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "aor_chart_belongsto_aor_report_relationship",
                                    "aor_report_id",
                                    "y_field",
                                    "x_field",
                                    "type"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorChartsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorChartsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-charts\/{id}\/edit": {
            "get": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts edit",
                "operationId": "aor-charts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorChartsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-charts\/relation": {
            "get": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts relation",
                "operationId": "aor-charts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-charts\/{id}\/restore": {
            "get": {
                "tags": [
                    "aor-charts"
                ],
                "summary": "aor-charts restore",
                "operationId": "aor-charts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls": {
            "get": {
                "tags": [
                    "calls"
                ],
                "summary": "calls index",
                "operationId": "calls_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "duration_hours",
                                "duration_minutes",
                                "date_start",
                                "date_end",
                                "parent_type",
                                "status",
                                "direction",
                                "parent_id",
                                "reminder_time",
                                "email_reminder_time",
                                "email_reminder_sent",
                                "outlook_id",
                                "repeat_type",
                                "repeat_interval",
                                "repeat_dow",
                                "repeat_until",
                                "repeat_count",
                                "repeat_parent_id",
                                "recurring_source",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "call_belongsto_assigned_user_relationship",
                                "call_belongsto_created_by_relationship",
                                "call_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[duration_hours]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[duration_minutes]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[date_start]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[date_end]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[direction][]",
                        "in": "query",
                        "description": "{\n    \"INCOMING\": \"INCOMING\",\n    \"OUTGOING\": \"OUTGOING\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "INCOMING",
                                    "OUTGOING"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[reminder_time]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[email_reminder_time]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[email_reminder_sent]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[outlook_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\",\n    \"Planned\": \"Planned\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Active",
                                    "Inactive",
                                    "Planned"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCallsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "calls"
                ],
                "summary": "calls store",
                "operationId": "calls_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls\/create": {
            "get": {
                "tags": [
                    "calls"
                ],
                "summary": "calls create",
                "operationId": "calls_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls\/{id}": {
            "get": {
                "tags": [
                    "calls"
                ],
                "summary": "calls show",
                "operationId": "calls_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "calls"
                ],
                "summary": "calls update",
                "operationId": "calls_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "calls"
                ],
                "summary": "calls delete",
                "operationId": "calls_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "calls"
                ],
                "summary": "calls single update",
                "operationId": "calls_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "duration_hours",
                                "duration_minutes",
                                "date_start",
                                "date_end",
                                "direction",
                                "reminder_time",
                                "email_reminder_time",
                                "email_reminder_sent",
                                "outlook_id",
                                "status",
                                "call_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "duration_hours",
                                    "duration_minutes",
                                    "date_start",
                                    "date_end",
                                    "direction",
                                    "reminder_time",
                                    "email_reminder_time",
                                    "email_reminder_sent",
                                    "outlook_id",
                                    "status",
                                    "call_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls\/{id}\/edit": {
            "get": {
                "tags": [
                    "calls"
                ],
                "summary": "calls edit",
                "operationId": "calls_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls\/relation": {
            "get": {
                "tags": [
                    "calls"
                ],
                "summary": "calls relation",
                "operationId": "calls_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls\/{id}\/restore": {
            "get": {
                "tags": [
                    "calls"
                ],
                "summary": "calls restore",
                "operationId": "calls_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-users": {
            "get": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings_users index",
                "operationId": "meetings_users_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "meeting_id",
                                "user_id",
                                "required",
                                "accept_status",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "meetings_user_belongsto_meeting_relationship",
                                "meetings_user_belongsto_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[meeting_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[accept_status][]",
                        "in": "query",
                        "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "none",
                                    "Accept1",
                                    "Accept2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[required][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    0
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMeetingsUsersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users store",
                "operationId": "meetings-users_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsUsersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-users\/create": {
            "get": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings_users create",
                "operationId": "meetings_users_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-users\/{id}": {
            "get": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users show",
                "operationId": "meetings-users_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users update",
                "operationId": "meetings-users_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsUsersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users delete",
                "operationId": "meetings-users_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-users\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users single update",
                "operationId": "meetings-users_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "meetings_user_belongsto_meeting_relationship",
                                "meeting_id",
                                "meetings_user_belongsto_user_relationship",
                                "user_id",
                                "accept_status",
                                "required"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "meetings_user_belongsto_meeting_relationship",
                                    "meeting_id",
                                    "meetings_user_belongsto_user_relationship",
                                    "user_id",
                                    "accept_status",
                                    "required"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMeetingsUsersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-users\/{id}\/edit": {
            "get": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users edit",
                "operationId": "meetings-users_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMeetingsUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-users\/relation": {
            "get": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users relation",
                "operationId": "meetings-users_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/meetings-users\/{id}\/restore": {
            "get": {
                "tags": [
                    "meetings-users"
                ],
                "summary": "meetings-users restore",
                "operationId": "meetings-users_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed": {
            "get": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow_processed index",
                "operationId": "aow_processed_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "aow_workflow_id",
                                "parent_id",
                                "parent_type",
                                "status",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aow_processed_belongsto_aow_workflow_relationship",
                                "aow_processed_belongsto_created_by_relationship",
                                "aow_processed_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[aow_workflow_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[parent_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAowProcessedBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed store",
                "operationId": "aow-processed_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowProcessedStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed\/create": {
            "get": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow_processed create",
                "operationId": "aow_processed_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed\/{id}": {
            "get": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed show",
                "operationId": "aow-processed_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed update",
                "operationId": "aow-processed_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowProcessedUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed delete",
                "operationId": "aow-processed_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed single update",
                "operationId": "aow-processed_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "aow_workflow_id",
                                "parent_id",
                                "parent_type",
                                "aow_processed_belongsto_aow_workflow_relationship"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "aow_workflow_id",
                                    "parent_id",
                                    "parent_type",
                                    "aow_processed_belongsto_aow_workflow_relationship"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowProcessedSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed\/{id}\/edit": {
            "get": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed edit",
                "operationId": "aow-processed_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed\/relation": {
            "get": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed relation",
                "operationId": "aow-processed_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed\/{id}\/restore": {
            "get": {
                "tags": [
                    "aow-processed"
                ],
                "summary": "aow-processed restore",
                "operationId": "aow-processed_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/document-revisions": {
            "get": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document_revisions index",
                "operationId": "document_revisions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "change_log",
                                "document_id",
                                "doc_id",
                                "doc_type",
                                "doc_url",
                                "modified_by_id",
                                "created_by_id",
                                "filename",
                                "file_ext",
                                "file_mime_type",
                                "revision",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "document_revision_belongsto_document_relationship",
                                "document_revision_belongsto_created_by_relationship",
                                "document_revision_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[change_log]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[doc_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[document_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[doc_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[file_ext]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[filename]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[file_mime_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[doc_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[revision]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerDocumentRevisionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions store",
                "operationId": "document-revisions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerDocumentRevisionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentRevisionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/document-revisions\/create": {
            "get": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document_revisions create",
                "operationId": "document_revisions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/document-revisions\/{id}": {
            "get": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions show",
                "operationId": "document-revisions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentRevisionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions update",
                "operationId": "document-revisions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerDocumentRevisionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentRevisionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions delete",
                "operationId": "document-revisions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/document-revisions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions single update",
                "operationId": "document-revisions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "change_log",
                                "doc_id",
                                "document_revision_belongsto_document_relationship",
                                "doc_type",
                                "file_ext",
                                "filename",
                                "file_mime_type",
                                "doc_url",
                                "revision",
                                "document_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "change_log",
                                    "doc_id",
                                    "document_revision_belongsto_document_relationship",
                                    "doc_type",
                                    "file_ext",
                                    "filename",
                                    "file_mime_type",
                                    "doc_url",
                                    "revision",
                                    "document_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerDocumentRevisionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentRevisionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/document-revisions\/{id}\/edit": {
            "get": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions edit",
                "operationId": "document-revisions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerDocumentRevisionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/document-revisions\/relation": {
            "get": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions relation",
                "operationId": "document-revisions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/document-revisions\/{id}\/restore": {
            "get": {
                "tags": [
                    "document-revisions"
                ],
                "summary": "document-revisions restore",
                "operationId": "document-revisions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/opportunities": {
            "get": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities index",
                "operationId": "opportunities_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "opportunity_type",
                                "campaign_id",
                                "lead_source",
                                "amount",
                                "amount_usdollar",
                                "currency_id",
                                "date_closed",
                                "next_step",
                                "sales_stage",
                                "probability",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "opportunity_belongsto_campaign_relationship",
                                "opportunity_belongsto_currency_relationship",
                                "opportunity_belongsto_assigned_user_relationship",
                                "opportunity_belongsto_created_by_relationship",
                                "opportunity_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_closed]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[next_step]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[campaign_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[lead_source]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[opportunity_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[currency_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[probability]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[sales_stage][]",
                        "in": "query",
                        "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Stage1",
                                    "Stage2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerOpportunitiesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities store",
                "operationId": "opportunities_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerOpportunitiesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOpportunitiesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/opportunities\/create": {
            "get": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities create",
                "operationId": "opportunities_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/opportunities\/{id}": {
            "get": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities show",
                "operationId": "opportunities_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOpportunitiesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities update",
                "operationId": "opportunities_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerOpportunitiesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOpportunitiesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities delete",
                "operationId": "opportunities_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/opportunities\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities single update",
                "operationId": "opportunities_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "lead_source",
                                "sales_stage",
                                "probability",
                                "campaign_id",
                                "opportunity_belongsto_currency_relationship",
                                "currency_id",
                                "opportunity_type",
                                "date_closed",
                                "amount",
                                "opportunity_belongsto_campaign_relationship",
                                "amount_usdollar",
                                "next_step",
                                "opportunity_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "lead_source",
                                    "sales_stage",
                                    "probability",
                                    "campaign_id",
                                    "opportunity_belongsto_currency_relationship",
                                    "currency_id",
                                    "opportunity_type",
                                    "date_closed",
                                    "amount",
                                    "opportunity_belongsto_campaign_relationship",
                                    "amount_usdollar",
                                    "next_step",
                                    "opportunity_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerOpportunitiesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOpportunitiesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/opportunities\/{id}\/edit": {
            "get": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities edit",
                "operationId": "opportunities_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerOpportunitiesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/opportunities\/relation": {
            "get": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities relation",
                "operationId": "opportunities_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/opportunities\/{id}\/restore": {
            "get": {
                "tags": [
                    "opportunities"
                ],
                "summary": "opportunities restore",
                "operationId": "opportunities_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-caches": {
            "get": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email_cache index",
                "operationId": "email_cache_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "ie_id",
                                "mbox",
                                "subject",
                                "fromaddr",
                                "toaddr",
                                "senddate",
                                "message_id",
                                "mailsize",
                                "imap_uid",
                                "msgno",
                                "recent",
                                "flagged",
                                "answered",
                                "seen",
                                "draft",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "email_cache_belongsto_assigned_user_relationship",
                                "email_cache_belongsto_created_by_relationship",
                                "email_cache_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[mbox]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[subject]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[msgno]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[answered]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[draft]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[seen]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[toaddr]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[flagged]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[fromaddr]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[recent]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[mailsize]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[senddate]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[message_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[imap_uid]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerEmailCacheBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches store",
                "operationId": "email-caches_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailCacheStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-caches\/create": {
            "get": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email_cache create",
                "operationId": "email_cache_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-caches\/{id}": {
            "get": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches show",
                "operationId": "email-caches_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches update",
                "operationId": "email-caches_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailCacheUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches delete",
                "operationId": "email-caches_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-caches\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches single update",
                "operationId": "email-caches_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "mbox",
                                "subject",
                                "msgno",
                                "draft",
                                "seen",
                                "recent",
                                "senddate",
                                "message_id",
                                "imap_uid",
                                "mailsize",
                                "fromaddr",
                                "flagged",
                                "toaddr",
                                "answered",
                                "email_cache_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "mbox",
                                    "subject",
                                    "msgno",
                                    "draft",
                                    "seen",
                                    "recent",
                                    "senddate",
                                    "message_id",
                                    "imap_uid",
                                    "mailsize",
                                    "fromaddr",
                                    "flagged",
                                    "toaddr",
                                    "answered",
                                    "email_cache_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerEmailCacheSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-caches\/{id}\/edit": {
            "get": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches edit",
                "operationId": "email-caches_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerEmailCacheReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-caches\/relation": {
            "get": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches relation",
                "operationId": "email-caches_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-caches\/{id}\/restore": {
            "get": {
                "tags": [
                    "email-caches"
                ],
                "summary": "email-caches restore",
                "operationId": "email-caches_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/spots": {
            "get": {
                "tags": [
                    "spots"
                ],
                "summary": "spots index",
                "operationId": "spots_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "config",
                                "type",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "spot_belongsto_assigned_user_relationship",
                                "spot_belongsto_created_by_relationship",
                                "spot_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSpotsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "spots"
                ],
                "summary": "spots store",
                "operationId": "spots_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSpotsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSpotsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/spots\/create": {
            "get": {
                "tags": [
                    "spots"
                ],
                "summary": "spots create",
                "operationId": "spots_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/spots\/{id}": {
            "get": {
                "tags": [
                    "spots"
                ],
                "summary": "spots show",
                "operationId": "spots_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSpotsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "spots"
                ],
                "summary": "spots update",
                "operationId": "spots_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSpotsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSpotsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "spots"
                ],
                "summary": "spots delete",
                "operationId": "spots_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/spots\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "spots"
                ],
                "summary": "spots single update",
                "operationId": "spots_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "type",
                                "config",
                                "spot_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "type",
                                    "config",
                                    "spot_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSpotsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSpotsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/spots\/{id}\/edit": {
            "get": {
                "tags": [
                    "spots"
                ],
                "summary": "spots edit",
                "operationId": "spots_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSpotsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/spots\/relation": {
            "get": {
                "tags": [
                    "spots"
                ],
                "summary": "spots relation",
                "operationId": "spots_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/spots\/{id}\/restore": {
            "get": {
                "tags": [
                    "spots"
                ],
                "summary": "spots restore",
                "operationId": "spots_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-workflows": {
            "get": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow_workflow index",
                "operationId": "aow_workflow_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "flow_module",
                                "flow_run_on",
                                "status",
                                "run_when",
                                "multiple_runs",
                                "run_on_import",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aow_workflow_belongsto_assigned_user_relationship",
                                "aow_workflow_belongsto_created_by_relationship",
                                "aow_workflow_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[flow_module][]",
                        "in": "query",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "accounts",
                                    "contacts"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[flow_run_on]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[run_when]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[multiple_runs]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[run_on_import]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Active",
                                    "Inactive"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAowWorkflowBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows store",
                "operationId": "aow-workflows_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowWorkflowStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowWorkflowReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-workflows\/create": {
            "get": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow_workflow create",
                "operationId": "aow_workflow_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-workflows\/{id}": {
            "get": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows show",
                "operationId": "aow-workflows_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowWorkflowReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows update",
                "operationId": "aow-workflows_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowWorkflowUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowWorkflowReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows delete",
                "operationId": "aow-workflows_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-workflows\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows single update",
                "operationId": "aow-workflows_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "flow_module",
                                "flow_run_on",
                                "run_when",
                                "multiple_runs",
                                "run_on_import",
                                "status",
                                "aow_workflow_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "flow_module",
                                    "flow_run_on",
                                    "run_when",
                                    "multiple_runs",
                                    "run_on_import",
                                    "status",
                                    "aow_workflow_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowWorkflowSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowWorkflowReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-workflows\/{id}\/edit": {
            "get": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows edit",
                "operationId": "aow-workflows_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowWorkflowReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-workflows\/relation": {
            "get": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows relation",
                "operationId": "aow-workflows_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-workflows\/{id}\/restore": {
            "get": {
                "tags": [
                    "aow-workflows"
                ],
                "summary": "aow-workflows restore",
                "operationId": "aow-workflows_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/import-maps": {
            "get": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import_maps index",
                "operationId": "import_maps_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "source",
                                "enclosure",
                                "delimiter",
                                "module",
                                "content",
                                "default_values",
                                "has_header",
                                "assigned_user_id",
                                "is_published",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "import_map_belongsto_assigned_user_relationship",
                                "import_map_belongsto_created_by_relationship",
                                "import_map_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[module]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[enclosure][]",
                        "in": "query",
                        "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    " ",
                                    ",",
                                    ";",
                                    "|"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[is_published][]",
                        "in": "query",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Yes",
                                    "No"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[default_values]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[source]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[delimiter][]",
                        "in": "query",
                        "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    " ",
                                    ",",
                                    ";",
                                    "|"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[content]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[has_header]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerImportMapsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps store",
                "operationId": "import-maps_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerImportMapsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerImportMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/import-maps\/create": {
            "get": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import_maps create",
                "operationId": "import_maps_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/import-maps\/{id}": {
            "get": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps show",
                "operationId": "import-maps_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerImportMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps update",
                "operationId": "import-maps_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerImportMapsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerImportMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps delete",
                "operationId": "import-maps_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/import-maps\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps single update",
                "operationId": "import-maps_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "module",
                                "enclosure",
                                "is_published",
                                "default_values",
                                "source",
                                "delimiter",
                                "content",
                                "has_header",
                                "import_map_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "module",
                                    "enclosure",
                                    "is_published",
                                    "default_values",
                                    "source",
                                    "delimiter",
                                    "content",
                                    "has_header",
                                    "import_map_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerImportMapsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerImportMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/import-maps\/{id}\/edit": {
            "get": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps edit",
                "operationId": "import-maps_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerImportMapsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/import-maps\/relation": {
            "get": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps relation",
                "operationId": "import-maps_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/import-maps\/{id}\/restore": {
            "get": {
                "tags": [
                    "import-maps"
                ],
                "summary": "import-maps restore",
                "operationId": "import-maps_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-updates": {
            "get": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop_case_updates index",
                "operationId": "aop_case_updates_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "case_id",
                                "contact_id",
                                "internal",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aop_case_update_belongsto_assigned_user_relationship",
                                "aop_case_update_belongsto_contact_relationship",
                                "aop_case_update_belongsto_case_relationship",
                                "aop_case_update_belongsto_created_by_relationship",
                                "aop_case_update_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[internal]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[contact_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[case_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAopCaseUpdatesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates store",
                "operationId": "aop-case-updates_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAopCaseUpdatesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseUpdatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-updates\/create": {
            "get": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop_case_updates create",
                "operationId": "aop_case_updates_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-updates\/{id}": {
            "get": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates show",
                "operationId": "aop-case-updates_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseUpdatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates update",
                "operationId": "aop-case-updates_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAopCaseUpdatesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseUpdatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates delete",
                "operationId": "aop-case-updates_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-updates\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates single update",
                "operationId": "aop-case-updates_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "internal",
                                "aop_case_update_belongsto_contact_relationship",
                                "aop_case_update_belongsto_case_relationship",
                                "aop_case_update_belongsto_assigned_user_relationship",
                                "assigned_user_id",
                                "contact_id",
                                "case_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "internal",
                                    "aop_case_update_belongsto_contact_relationship",
                                    "aop_case_update_belongsto_case_relationship",
                                    "aop_case_update_belongsto_assigned_user_relationship",
                                    "assigned_user_id",
                                    "contact_id",
                                    "case_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAopCaseUpdatesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseUpdatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-updates\/{id}\/edit": {
            "get": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates edit",
                "operationId": "aop-case-updates_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAopCaseUpdatesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-updates\/relation": {
            "get": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates relation",
                "operationId": "aop-case-updates_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aop-case-updates\/{id}\/restore": {
            "get": {
                "tags": [
                    "aop-case-updates"
                ],
                "summary": "aop-case-updates restore",
                "operationId": "aop-case-updates_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed-aow-actions": {
            "get": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow_processed_aow_actions index",
                "operationId": "aow_processed_aow_actions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "aow_processed_id",
                                "aow_action_id",
                                "status",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aow_processed_aow_action_belongsto_aow_action_relationship",
                                "aow_processed_aow_action_belongsto_aow_processed_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Pending\": \"Pending\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Pending",
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[aow_action_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[aow_processed_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAowProcessedAowActionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions store",
                "operationId": "aow-processed-aow-actions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowProcessedAowActionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed-aow-actions\/create": {
            "get": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow_processed_aow_actions create",
                "operationId": "aow_processed_aow_actions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed-aow-actions\/{id}": {
            "get": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions show",
                "operationId": "aow-processed-aow-actions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions update",
                "operationId": "aow-processed-aow-actions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowProcessedAowActionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions delete",
                "operationId": "aow-processed-aow-actions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed-aow-actions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions single update",
                "operationId": "aow-processed-aow-actions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "status",
                                "aow_processed_aow_action_belongsto_aow_action_relationship",
                                "aow_action_id",
                                "aow_processed_aow_action_belongsto_aow_processed_relationship",
                                "aow_processed_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "status",
                                    "aow_processed_aow_action_belongsto_aow_action_relationship",
                                    "aow_action_id",
                                    "aow_processed_aow_action_belongsto_aow_processed_relationship",
                                    "aow_processed_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAowProcessedAowActionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed-aow-actions\/{id}\/edit": {
            "get": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions edit",
                "operationId": "aow-processed-aow-actions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAowProcessedAowActionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed-aow-actions\/relation": {
            "get": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions relation",
                "operationId": "aow-processed-aow-actions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aow-processed-aow-actions\/{id}\/restore": {
            "get": {
                "tags": [
                    "aow-processed-aow-actions"
                ],
                "summary": "aow-processed-aow-actions restore",
                "operationId": "aow-processed-aow-actions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaign-trkrs": {
            "get": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign_trkrs index",
                "operationId": "campaign_trkrs_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "tracker_name",
                                "tracker_url",
                                "tracker_key",
                                "campaign_id",
                                "modified_by_id",
                                "created_by_id",
                                "is_optout",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "campaign_trkr_belongsto_campaign_relationship",
                                "campaign_trkr_belongsto_created_by_relationship",
                                "campaign_trkr_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[tracker_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[tracker_url]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[tracker_key]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[is_optout]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[campaign_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCampaignTrkrsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs store",
                "operationId": "campaign-trkrs_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCampaignTrkrsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignTrkrsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaign-trkrs\/create": {
            "get": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign_trkrs create",
                "operationId": "campaign_trkrs_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaign-trkrs\/{id}": {
            "get": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs show",
                "operationId": "campaign-trkrs_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignTrkrsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs update",
                "operationId": "campaign-trkrs_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCampaignTrkrsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignTrkrsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs delete",
                "operationId": "campaign-trkrs_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaign-trkrs\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs single update",
                "operationId": "campaign-trkrs_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "tracker_name",
                                "tracker_url",
                                "tracker_key",
                                "is_optout",
                                "campaign_trkr_belongsto_campaign_relationship",
                                "campaign_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "tracker_name",
                                    "tracker_url",
                                    "tracker_key",
                                    "is_optout",
                                    "campaign_trkr_belongsto_campaign_relationship",
                                    "campaign_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCampaignTrkrsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignTrkrsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaign-trkrs\/{id}\/edit": {
            "get": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs edit",
                "operationId": "campaign-trkrs_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCampaignTrkrsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaign-trkrs\/relation": {
            "get": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs relation",
                "operationId": "campaign-trkrs_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/campaign-trkrs\/{id}\/restore": {
            "get": {
                "tags": [
                    "campaign-trkrs"
                ],
                "summary": "campaign-trkrs restore",
                "operationId": "campaign-trkrs_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/projects": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "project index",
                "operationId": "project_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "assigned_user_id",
                                "modified_by_id",
                                "created_by_id",
                                "name",
                                "description",
                                "estimated_start_date",
                                "estimated_end_date",
                                "status",
                                "priority",
                                "override_business_hours",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "project_belongstomany_contacts_relationship",
                                "project_belongstomany_accounts_relationship",
                                "project_belongstomany_opportunities_relationship",
                                "project_belongstomany_bugs_relationship",
                                "project_belongsto_assigned_user_relationship",
                                "project_belongsto_created_by_relationship",
                                "project_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Active",
                                    "Inactive"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[project_belongstomany_contacts_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[project_belongstomany_accounts_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[project_belongstomany_opportunities_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[priority][]",
                        "in": "query",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[override_business_hours]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[estimated_start_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[project_belongstomany_bugs_relationship][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[estimated_end_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerProjectBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "summary": "projects store",
                "operationId": "projects_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProjectStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/projects\/create": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "project create",
                "operationId": "project_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/projects\/{id}": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "projects show",
                "operationId": "projects_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "projects"
                ],
                "summary": "projects update",
                "operationId": "projects_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProjectUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "summary": "projects delete",
                "operationId": "projects_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/projects\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "projects"
                ],
                "summary": "projects single update",
                "operationId": "projects_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "estimated_end_date",
                                "project_belongstomany_bugs_relationship",
                                "estimated_start_date",
                                "override_business_hours",
                                "status",
                                "priority",
                                "project_belongstomany_opportunities_relationship",
                                "project_belongstomany_accounts_relationship",
                                "project_belongstomany_contacts_relationship",
                                "project_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "estimated_end_date",
                                    "project_belongstomany_bugs_relationship",
                                    "estimated_start_date",
                                    "override_business_hours",
                                    "status",
                                    "priority",
                                    "project_belongstomany_opportunities_relationship",
                                    "project_belongstomany_accounts_relationship",
                                    "project_belongstomany_contacts_relationship",
                                    "project_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerProjectSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/projects\/{id}\/edit": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "projects edit",
                "operationId": "projects_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerProjectReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/projects\/relation": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "projects relation",
                "operationId": "projects_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/projects\/{id}\/restore": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "projects restore",
                "operationId": "projects_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/posts": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "posts index",
                "operationId": "posts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "author_id",
                                "category_id",
                                "title",
                                "seo_title",
                                "excerpt",
                                "body",
                                "image",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "featured",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"PUBLISHED\": \"published\",\n    \"DRAFT\": \"draft\",\n    \"PENDING\": \"pending\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "PUBLISHED",
                                    "DRAFT",
                                    "PENDING"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[seo_title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[featured]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPostsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "posts store",
                "operationId": "posts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPostsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPostsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/posts\/create": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "posts create",
                "operationId": "posts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/posts\/{id}": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "posts show",
                "operationId": "posts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPostsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "posts update",
                "operationId": "posts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPostsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPostsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "posts"
                ],
                "summary": "posts delete",
                "operationId": "posts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/posts\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "posts single update",
                "operationId": "posts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "author_id",
                                "category_id",
                                "title",
                                "excerpt",
                                "body",
                                "image",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "seo_title",
                                "featured"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "author_id",
                                    "category_id",
                                    "title",
                                    "excerpt",
                                    "body",
                                    "image",
                                    "slug",
                                    "meta_description",
                                    "meta_keywords",
                                    "status",
                                    "seo_title",
                                    "featured"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPostsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPostsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/posts\/{id}\/edit": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "posts edit",
                "operationId": "posts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPostsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/posts\/relation": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "posts relation",
                "operationId": "posts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/posts\/{id}\/restore": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "posts restore",
                "operationId": "posts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders-invitees": {
            "get": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders_invitees index",
                "operationId": "reminders_invitees_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "reminder_id",
                                "related_invitee_module",
                                "related_invitee_module_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "reminders_invitee_belongsto_reminder_relationship",
                                "reminders_invitee_belongsto_assigned_user_relationship",
                                "reminders_invitee_belongsto_created_by_relationship",
                                "reminders_invitee_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reminder_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[related_invitee_module_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[related_invitee_module][]",
                        "in": "query",
                        "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Module1",
                                    "Module2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerRemindersInviteesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees store",
                "operationId": "reminders-invitees_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRemindersInviteesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersInviteesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders-invitees\/create": {
            "get": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders_invitees create",
                "operationId": "reminders_invitees_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders-invitees\/{id}": {
            "get": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees show",
                "operationId": "reminders-invitees_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersInviteesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees update",
                "operationId": "reminders-invitees_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRemindersInviteesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersInviteesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees delete",
                "operationId": "reminders-invitees_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders-invitees\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees single update",
                "operationId": "reminders-invitees_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "reminder_id",
                                "related_invitee_module_id",
                                "reminders_invitee_belongsto_reminder_relationship",
                                "related_invitee_module",
                                "reminders_invitee_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "reminder_id",
                                    "related_invitee_module_id",
                                    "reminders_invitee_belongsto_reminder_relationship",
                                    "related_invitee_module",
                                    "reminders_invitee_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRemindersInviteesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersInviteesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders-invitees\/{id}\/edit": {
            "get": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees edit",
                "operationId": "reminders-invitees_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRemindersInviteesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders-invitees\/relation": {
            "get": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees relation",
                "operationId": "reminders-invitees_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reminders-invitees\/{id}\/restore": {
            "get": {
                "tags": [
                    "reminders-invitees"
                ],
                "summary": "reminders-invitees restore",
                "operationId": "reminders-invitees_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/bugs": {
            "get": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs index",
                "operationId": "bugs_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "bug_number",
                                "type",
                                "status",
                                "priority",
                                "resolution",
                                "work_log",
                                "found_in_release",
                                "fixed_in_release",
                                "source",
                                "product_category",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "bug_belongsto_found_in_release_relationship",
                                "bug_belongsto_fixed_in_release_relationship",
                                "bug_belongsto_assigned_user_relationship",
                                "bug_belongsto_created_by_relationship",
                                "bug_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[bug_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[priority][]",
                        "in": "query",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[resolution][]",
                        "in": "query",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Yes",
                                    "No"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[work_log]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[found_in_release][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[fixed_in_release][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[source]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[product_category]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Active",
                                    "Inactive"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerBugsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs store",
                "operationId": "bugs_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBugsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/bugs\/create": {
            "get": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs create",
                "operationId": "bugs_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/bugs\/{id}": {
            "get": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs show",
                "operationId": "bugs_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs update",
                "operationId": "bugs_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBugsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs delete",
                "operationId": "bugs_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/bugs\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs single update",
                "operationId": "bugs_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "bug_number",
                                "type",
                                "priority",
                                "resolution",
                                "work_log",
                                "found_in_release",
                                "bug_belongsto_found_in_release_relationship",
                                "fixed_in_release",
                                "bug_belongsto_fixed_in_release_relationship",
                                "source",
                                "product_category",
                                "status",
                                "bug_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "bug_number",
                                    "type",
                                    "priority",
                                    "resolution",
                                    "work_log",
                                    "found_in_release",
                                    "bug_belongsto_found_in_release_relationship",
                                    "fixed_in_release",
                                    "bug_belongsto_fixed_in_release_relationship",
                                    "source",
                                    "product_category",
                                    "status",
                                    "bug_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBugsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/bugs\/{id}\/edit": {
            "get": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs edit",
                "operationId": "bugs_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBugsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/bugs\/relation": {
            "get": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs relation",
                "operationId": "bugs_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/bugs\/{id}\/restore": {
            "get": {
                "tags": [
                    "bugs"
                ],
                "summary": "bugs restore",
                "operationId": "bugs_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-contacts": {
            "get": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls_contacts index",
                "operationId": "calls_contacts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "call_id",
                                "contact_id",
                                "required",
                                "accept_status",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "calls_contact_belongsto_contact_relationship",
                                "calls_contact_belongsto_call_relationship",
                                "calls_contact_belongsto_created_by_relationship",
                                "calls_contact_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[accept_status][]",
                        "in": "query",
                        "description": "{\n    \"none\": \"none\",\n    \"Accepted\": \"Accepted\",\n    \"Rejected\": \"Rejected\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "none",
                                    "Accepted",
                                    "Rejected"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[contact_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[call_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[required][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    0
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCallsContactsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts store",
                "operationId": "calls-contacts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsContactsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-contacts\/create": {
            "get": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls_contacts create",
                "operationId": "calls_contacts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-contacts\/{id}": {
            "get": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts show",
                "operationId": "calls-contacts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts update",
                "operationId": "calls-contacts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsContactsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts delete",
                "operationId": "calls-contacts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-contacts\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts single update",
                "operationId": "calls-contacts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "accept_status",
                                "calls_contact_belongsto_contact_relationship",
                                "call_id",
                                "contact_id",
                                "required",
                                "calls_contact_belongsto_call_relationship"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "accept_status",
                                    "calls_contact_belongsto_contact_relationship",
                                    "call_id",
                                    "contact_id",
                                    "required",
                                    "calls_contact_belongsto_call_relationship"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCallsContactsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-contacts\/{id}\/edit": {
            "get": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts edit",
                "operationId": "calls-contacts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCallsContactsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-contacts\/relation": {
            "get": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts relation",
                "operationId": "calls-contacts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/calls-contacts\/{id}\/restore": {
            "get": {
                "tags": [
                    "calls-contacts"
                ],
                "summary": "calls-contacts restore",
                "operationId": "calls-contacts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-contracts": {
            "get": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos_contracts index",
                "operationId": "aos_contracts_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "reference_code",
                                "start_date",
                                "end_date",
                                "total_contract_value",
                                "total_contract_value_usdollar",
                                "currency_id",
                                "status",
                                "customer_signed_date",
                                "company_signed_date",
                                "renewal_reminder_date",
                                "contract_type",
                                "contract_account_id",
                                "opportunity_id",
                                "contact_id",
                                "call_id",
                                "total_amt",
                                "total_amt_usdollar",
                                "subtotal_amount",
                                "subtotal_amount_usdollar",
                                "discount_amount",
                                "discount_amount_usdollar",
                                "tax_amount",
                                "tax_amount_usdollar",
                                "shipping_amount",
                                "shipping_amount_usdollar",
                                "shipping_tax",
                                "shipping_tax_amt",
                                "shipping_tax_amt_usdollar",
                                "total_amount",
                                "total_amount_usdollar",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aos_contract_belongsto_contract_account_relationship",
                                "aos_contract_belongsto_contact_relationship",
                                "aos_contract_belongsto_call_relationship",
                                "aos_contract_belongsto_currency_relationship",
                                "aos_contract_belongsto_opportunity_relationship",
                                "aos_contract_belongsto_assigned_user_relationship",
                                "aos_contract_belongsto_created_by_relationship",
                                "aos_contract_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[shipping_tax]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[discount_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[customer_signed_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[start_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[total_amt_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[call_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[contract_account_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reference_code]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[total_contract_value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[subtotal_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_contract_value_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_tax_amt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[company_signed_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[contract_type][]",
                        "in": "query",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Type1",
                                    "Type2"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[subtotal_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[renewal_reminder_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[opportunity_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[tax_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "Inactive",
                                    "Active"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[shipping_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[currency_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[contact_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[end_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01,,2021-06-01"
                        }
                    },
                    {
                        "name": "filters[tax_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amount_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[total_amt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[shipping_tax_amt_usdollar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[discount_amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAosContractsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts store",
                "operationId": "aos-contracts_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosContractsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosContractsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-contracts\/create": {
            "get": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos_contracts create",
                "operationId": "aos_contracts_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-contracts\/{id}": {
            "get": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts show",
                "operationId": "aos-contracts_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosContractsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts update",
                "operationId": "aos-contracts_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosContractsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosContractsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts delete",
                "operationId": "aos-contracts_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-contracts\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts single update",
                "operationId": "aos-contracts_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "customer_signed_date",
                                "total_amount_usdollar",
                                "start_date",
                                "total_amt_usdollar",
                                "call_id",
                                "aos_contract_belongsto_contract_account_relationship",
                                "reference_code",
                                "total_contract_value",
                                "shipping_amount",
                                "shipping_tax",
                                "total_contract_value_usdollar",
                                "shipping_tax_amt",
                                "company_signed_date",
                                "contract_type",
                                "subtotal_amount",
                                "total_amount",
                                "renewal_reminder_date",
                                "opportunity_id",
                                "tax_amount_usdollar",
                                "status",
                                "shipping_amount_usdollar",
                                "currency_id",
                                "aos_contract_belongsto_contact_relationship",
                                "end_date",
                                "tax_amount",
                                "contract_account_id",
                                "subtotal_amount_usdollar",
                                "aos_contract_belongsto_call_relationship",
                                "total_amt",
                                "contact_id",
                                "aos_contract_belongsto_currency_relationship",
                                "aos_contract_belongsto_opportunity_relationship",
                                "shipping_tax_amt_usdollar",
                                "discount_amount",
                                "discount_amount_usdollar",
                                "aos_contract_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "customer_signed_date",
                                    "total_amount_usdollar",
                                    "start_date",
                                    "total_amt_usdollar",
                                    "call_id",
                                    "aos_contract_belongsto_contract_account_relationship",
                                    "reference_code",
                                    "total_contract_value",
                                    "shipping_amount",
                                    "shipping_tax",
                                    "total_contract_value_usdollar",
                                    "shipping_tax_amt",
                                    "company_signed_date",
                                    "contract_type",
                                    "subtotal_amount",
                                    "total_amount",
                                    "renewal_reminder_date",
                                    "opportunity_id",
                                    "tax_amount_usdollar",
                                    "status",
                                    "shipping_amount_usdollar",
                                    "currency_id",
                                    "aos_contract_belongsto_contact_relationship",
                                    "end_date",
                                    "tax_amount",
                                    "contract_account_id",
                                    "subtotal_amount_usdollar",
                                    "aos_contract_belongsto_call_relationship",
                                    "total_amt",
                                    "contact_id",
                                    "aos_contract_belongsto_currency_relationship",
                                    "aos_contract_belongsto_opportunity_relationship",
                                    "shipping_tax_amt_usdollar",
                                    "discount_amount",
                                    "discount_amount_usdollar",
                                    "aos_contract_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAosContractsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosContractsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-contracts\/{id}\/edit": {
            "get": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts edit",
                "operationId": "aos-contracts_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAosContractsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-contracts\/relation": {
            "get": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts relation",
                "operationId": "aos-contracts_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aos-contracts\/{id}\/restore": {
            "get": {
                "tags": [
                    "aos-contracts"
                ],
                "summary": "aos-contracts restore",
                "operationId": "aos-contracts_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-reports": {
            "get": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor_reports index",
                "operationId": "aor_reports_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "modified_by_id",
                                "created_by_id",
                                "description",
                                "assigned_user_id",
                                "report_module",
                                "graphs_per_row",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "aor_report_belongsto_assigned_user_relationship",
                                "aor_report_belongsto_created_by_relationship",
                                "aor_report_belongsto_modified_by_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[graphs_per_row]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[report_module][]",
                        "in": "query",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "accounts",
                                    "contacts",
                                    "opportunities"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[assigned_user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[created_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[modified_by_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAorReportsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports store",
                "operationId": "aor-reports_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorReportsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-reports\/create": {
            "get": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor_reports create",
                "operationId": "aor_reports_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-reports\/{id}": {
            "get": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports show",
                "operationId": "aor-reports_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports update",
                "operationId": "aor-reports_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorReportsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports delete",
                "operationId": "aor-reports_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-reports\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports single update",
                "operationId": "aor-reports_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "description",
                                "graphs_per_row",
                                "report_module",
                                "aor_report_belongsto_assigned_user_relationship",
                                "assigned_user_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "description",
                                    "graphs_per_row",
                                    "report_module",
                                    "aor_report_belongsto_assigned_user_relationship",
                                    "assigned_user_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAorReportsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-reports\/{id}\/edit": {
            "get": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports edit",
                "operationId": "aor-reports_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAorReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-reports\/relation": {
            "get": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports relation",
                "operationId": "aor-reports_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/aor-reports\/{id}\/restore": {
            "get": {
                "tags": [
                    "aor-reports"
                ],
                "summary": "aor-reports restore",
                "operationId": "aor-reports_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "VoyagerDocumentsBrowseResource": {
                "type": "object",
                "properties": {
                    "document_name": {
                        "type": "string",
                        "description": "Document name"
                    },
                    "doc_type": {
                        "enum": [
                            "DocType1",
                            "DocType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"DocType1\": \"DocType1\",\n    \"DocType2\": \"DocType2\"\n}"
                    },
                    "doc_url": {
                        "type": "string",
                        "description": "Doc url"
                    },
                    "doc_id": {
                        "type": "string",
                        "description": "Doc id"
                    },
                    "document_belongstomany_accounts_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.accounts"
                    },
                    "exp_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Exp date",
                        "example": "2021-05-17"
                    },
                    "is_template": {
                        "type": "string",
                        "description": "Is template"
                    },
                    "document_belongstomany_contacts_relationship": {
                        "type": "integer",
                        "description": "Contacts"
                    },
                    "template_type": {
                        "enum": [
                            "TemplateType1",
                            "TemplateType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"TemplateType1\": \"TemplateType1\",\n    \"TemplateType2\": \"TemplateType2\"\n}"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category id"
                    },
                    "document_belongstomany_bugs_relationship": {
                        "type": "integer",
                        "description": "Bugs"
                    },
                    "document_belongstomany_opportunities_relationship": {
                        "type": "integer",
                        "description": "Opportunities"
                    },
                    "subcategory_id": {
                        "type": "string",
                        "description": "Subcategory id"
                    },
                    "status_id": {
                        "type": "string",
                        "description": "Status id"
                    },
                    "active_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Active date",
                        "example": "2021-05-17"
                    },
                    "document_belongsto_related_doc_relationship": {
                        "type": "integer",
                        "description": "Related doc"
                    },
                    "document_belongsto_related_doc_rev_relationship": {
                        "type": "integer",
                        "description": "Related doc rev"
                    },
                    "document_belongsto_document_revision_relationship": {
                        "type": "integer",
                        "description": "Document revision"
                    },
                    "document_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "related_doc_id": {
                        "type": "string",
                        "description": "Related doc id"
                    },
                    "related_doc_rev_id": {
                        "type": "string",
                        "description": "Related doc rev id"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "document_revision_id": {
                        "type": "string",
                        "description": "Document revision id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "document_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "document_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerDocumentsReadResource": {
                "type": "object",
                "properties": {
                    "document_name": {
                        "type": "string",
                        "description": "Document name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "doc_type": {
                        "enum": [
                            "DocType1",
                            "DocType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"DocType1\": \"DocType1\",\n    \"DocType2\": \"DocType2\"\n}"
                    },
                    "doc_url": {
                        "type": "string",
                        "description": "Doc url"
                    },
                    "doc_id": {
                        "type": "string",
                        "description": "Doc id"
                    },
                    "document_belongstomany_accounts_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.accounts"
                    },
                    "exp_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Exp date",
                        "example": "2021-05-17"
                    },
                    "is_template": {
                        "type": "string",
                        "description": "Is template"
                    },
                    "document_belongstomany_contacts_relationship": {
                        "type": "integer",
                        "description": "Contacts"
                    },
                    "template_type": {
                        "enum": [
                            "TemplateType1",
                            "TemplateType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"TemplateType1\": \"TemplateType1\",\n    \"TemplateType2\": \"TemplateType2\"\n}"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category id"
                    },
                    "document_belongstomany_bugs_relationship": {
                        "type": "integer",
                        "description": "Bugs"
                    },
                    "document_belongstomany_opportunities_relationship": {
                        "type": "integer",
                        "description": "Opportunities"
                    },
                    "subcategory_id": {
                        "type": "string",
                        "description": "Subcategory id"
                    },
                    "status_id": {
                        "type": "string",
                        "description": "Status id"
                    },
                    "active_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Active date",
                        "example": "2021-05-17"
                    },
                    "document_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "document_belongsto_related_doc_relationship": {
                        "type": "integer",
                        "description": "Related doc"
                    },
                    "document_belongsto_related_doc_rev_relationship": {
                        "type": "integer",
                        "description": "Related doc rev"
                    },
                    "document_belongsto_document_revision_relationship": {
                        "type": "integer",
                        "description": "Document revision"
                    },
                    "related_doc_id": {
                        "type": "string",
                        "description": "Related doc id"
                    },
                    "related_doc_rev_id": {
                        "type": "string",
                        "description": "Related doc rev id"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "document_revision_id": {
                        "type": "string",
                        "description": "Document revision id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "document_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "document_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerReleasesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "list_order": {
                        "type": "integer",
                        "description": "List order"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "release_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "release_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerReleasesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "list_order": {
                        "type": "integer",
                        "description": "List order"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "release_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "release_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailMarketingBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email_marketing_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "reply_to_addr": {
                        "type": "string",
                        "description": "Reply to addr"
                    },
                    "inbound_email_id": {
                        "type": "string",
                        "description": "Inbound email id"
                    },
                    "all_prospect_lists": {
                        "type": "string",
                        "description": "All prospect lists"
                    },
                    "email_marketing_belongsto_outbound_email_relationship": {
                        "type": "integer",
                        "description": "Outbound email"
                    },
                    "email_marketing_belongsto_email_template_relationship": {
                        "type": "integer",
                        "description": "Email template"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "from_addr": {
                        "type": "string",
                        "description": "From addr"
                    },
                    "template_id": {
                        "type": "string",
                        "description": "Template id"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "from_name": {
                        "type": "string",
                        "description": "From name"
                    },
                    "outbound_email_id": {
                        "type": "string",
                        "description": "Outbound email id"
                    },
                    "email_marketing_belongsto_inbound_email_relationship": {
                        "type": "integer",
                        "description": "Inbound email"
                    },
                    "reply_to_name": {
                        "type": "string",
                        "description": "Reply to name"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date start",
                        "example": "2021-05-17"
                    },
                    "email_marketing_belongstomany_prospect_lists_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.prospect_lists"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_marketing_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_marketing_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailMarketingReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email_marketing_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "reply_to_addr": {
                        "type": "string",
                        "description": "Reply to addr"
                    },
                    "inbound_email_id": {
                        "type": "string",
                        "description": "Inbound email id"
                    },
                    "all_prospect_lists": {
                        "type": "string",
                        "description": "All prospect lists"
                    },
                    "email_marketing_belongsto_outbound_email_relationship": {
                        "type": "integer",
                        "description": "Outbound email"
                    },
                    "email_marketing_belongsto_email_template_relationship": {
                        "type": "integer",
                        "description": "Email template"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "from_addr": {
                        "type": "string",
                        "description": "From addr"
                    },
                    "template_id": {
                        "type": "string",
                        "description": "Template id"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "from_name": {
                        "type": "string",
                        "description": "From name"
                    },
                    "outbound_email_id": {
                        "type": "string",
                        "description": "Outbound email id"
                    },
                    "email_marketing_belongsto_inbound_email_relationship": {
                        "type": "integer",
                        "description": "Inbound email"
                    },
                    "reply_to_name": {
                        "type": "string",
                        "description": "Reply to name"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date start",
                        "example": "2021-05-17"
                    },
                    "email_marketing_belongstomany_prospect_lists_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.prospect_lists"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_marketing_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_marketing_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosInvoicesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "aos_invoice_belongsto_billing_contact_relationship": {
                        "type": "integer",
                        "description": "Billing contact"
                    },
                    "subtotal_tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal tax amount usdollar"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "shipping_address_street": {
                        "type": "string",
                        "description": "Shipping address street"
                    },
                    "shipping_amount_usdollar": {
                        "type": "integer",
                        "description": "Shipping amount usdollar"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Number"
                    },
                    "billing_address_street": {
                        "type": "string",
                        "description": "Billing address street"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "billing_contact_id": {
                        "type": "string",
                        "description": "Billing contact id"
                    },
                    "billing_address_state": {
                        "type": "string",
                        "description": "Billing address state"
                    },
                    "due_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Due date",
                        "example": "2021-05-17"
                    },
                    "quote_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Quote date",
                        "example": "2021-05-17"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "subtotal_tax_amount": {
                        "type": "integer",
                        "description": "Subtotal tax amount"
                    },
                    "billing_address_postalcode": {
                        "type": "string",
                        "description": "Billing address postalcode"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "shipping_address_country": {
                        "type": "string",
                        "description": "Shipping address country"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "billing_account_id": {
                        "type": "string",
                        "description": "Billing account id"
                    },
                    "invoice_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Invoice date",
                        "example": "2021-05-17"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "shipping_address_state": {
                        "type": "string",
                        "description": "Shipping address state"
                    },
                    "aos_invoice_belongsto_billing_account_relationship": {
                        "type": "integer",
                        "description": "Billing account"
                    },
                    "shipping_tax": {
                        "type": "string",
                        "description": "Shipping tax"
                    },
                    "billing_address_city": {
                        "type": "string",
                        "description": "Billing address city"
                    },
                    "shipping_amount": {
                        "type": "integer",
                        "description": "Shipping amount"
                    },
                    "billing_address_country": {
                        "type": "string",
                        "description": "Billing address country"
                    },
                    "aos_invoice_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "shipping_address_postalcode": {
                        "type": "string",
                        "description": "Shipping address postalcode"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "shipping_tax_amt": {
                        "type": "integer",
                        "description": "Shipping tax amt"
                    },
                    "shipping_address_city": {
                        "type": "string",
                        "description": "Shipping address city"
                    },
                    "shipping_tax_amt_usdollar": {
                        "type": "integer",
                        "description": "Shipping tax amt usdollar"
                    },
                    "quote_number": {
                        "type": "integer",
                        "description": "Quote number"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "aos_invoice_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_invoice_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_invoice_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosInvoicesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "aos_invoice_belongsto_billing_contact_relationship": {
                        "type": "integer",
                        "description": "Billing contact"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "billing_address_state": {
                        "type": "string",
                        "description": "Billing address state"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "shipping_address_street": {
                        "type": "string",
                        "description": "Shipping address street"
                    },
                    "shipping_amount_usdollar": {
                        "type": "integer",
                        "description": "Shipping amount usdollar"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Number"
                    },
                    "billing_address_street": {
                        "type": "string",
                        "description": "Billing address street"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "billing_contact_id": {
                        "type": "string",
                        "description": "Billing contact id"
                    },
                    "subtotal_tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal tax amount usdollar"
                    },
                    "due_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Due date",
                        "example": "2021-05-17"
                    },
                    "template_ddown_c": {
                        "type": "string",
                        "description": "Template ddown"
                    },
                    "quote_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Quote date",
                        "example": "2021-05-17"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "subtotal_tax_amount": {
                        "type": "integer",
                        "description": "Subtotal tax amount"
                    },
                    "billing_address_postalcode": {
                        "type": "string",
                        "description": "Billing address postalcode"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "shipping_address_country": {
                        "type": "string",
                        "description": "Shipping address country"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "billing_account_id": {
                        "type": "string",
                        "description": "Billing account id"
                    },
                    "invoice_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Invoice date",
                        "example": "2021-05-17"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "shipping_address_state": {
                        "type": "string",
                        "description": "Shipping address state"
                    },
                    "aos_invoice_belongsto_billing_account_relationship": {
                        "type": "integer",
                        "description": "Billing account"
                    },
                    "shipping_tax": {
                        "type": "string",
                        "description": "Shipping tax"
                    },
                    "billing_address_city": {
                        "type": "string",
                        "description": "Billing address city"
                    },
                    "shipping_amount": {
                        "type": "integer",
                        "description": "Shipping amount"
                    },
                    "billing_address_country": {
                        "type": "string",
                        "description": "Billing address country"
                    },
                    "aos_invoice_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "shipping_address_postalcode": {
                        "type": "string",
                        "description": "Shipping address postalcode"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "shipping_tax_amt": {
                        "type": "integer",
                        "description": "Shipping tax amt"
                    },
                    "shipping_address_city": {
                        "type": "string",
                        "description": "Shipping address city"
                    },
                    "shipping_tax_amt_usdollar": {
                        "type": "integer",
                        "description": "Shipping tax amt usdollar"
                    },
                    "quote_number": {
                        "type": "integer",
                        "description": "Quote number"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "aos_invoice_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_invoice_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_invoice_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEapmBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "api_data": {
                        "type": "string",
                        "description": "Api data"
                    },
                    "url": {
                        "type": "string",
                        "description": "Url"
                    },
                    "oauth_token": {
                        "type": "string",
                        "description": "Oauth token"
                    },
                    "application": {
                        "type": "string",
                        "description": "Application"
                    },
                    "consumer_secret": {
                        "type": "string",
                        "description": "Consumer secret"
                    },
                    "oauth_secret": {
                        "type": "string",
                        "description": "Oauth secret"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password"
                    },
                    "validated": {
                        "type": "string",
                        "description": "Validated"
                    },
                    "consumer_key": {
                        "type": "string",
                        "description": "Consumer key"
                    },
                    "eapm_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "eapm_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "eapm_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEapmReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "consumer_key": {
                        "type": "string",
                        "description": "Consumer key"
                    },
                    "url": {
                        "type": "string",
                        "description": "Url"
                    },
                    "oauth_token": {
                        "type": "string",
                        "description": "Oauth token"
                    },
                    "application": {
                        "type": "string",
                        "description": "Application"
                    },
                    "consumer_secret": {
                        "type": "string",
                        "description": "Consumer secret"
                    },
                    "oauth_secret": {
                        "type": "string",
                        "description": "Oauth secret"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password"
                    },
                    "validated": {
                        "type": "string",
                        "description": "Validated"
                    },
                    "api_data": {
                        "type": "string",
                        "description": "Api data"
                    },
                    "eapm_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "eapm_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "eapm_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerFpEventLocationsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "address_country": {
                        "type": "string",
                        "description": "Address country"
                    },
                    "capacity": {
                        "type": "string",
                        "description": "Capacity"
                    },
                    "address": {
                        "type": "string",
                        "description": "Address"
                    },
                    "address_state": {
                        "type": "string",
                        "description": "Address state"
                    },
                    "address_city": {
                        "type": "string",
                        "description": "Address city"
                    },
                    "address_postalcode": {
                        "type": "string",
                        "description": "Address postalcode"
                    },
                    "fp_event_location_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "fp_event_location_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "fp_event_location_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerFpEventLocationsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "address_country": {
                        "type": "string",
                        "description": "Address country"
                    },
                    "capacity": {
                        "type": "string",
                        "description": "Capacity"
                    },
                    "address": {
                        "type": "string",
                        "description": "Address"
                    },
                    "address_state": {
                        "type": "string",
                        "description": "Address state"
                    },
                    "address_city": {
                        "type": "string",
                        "description": "Address city"
                    },
                    "address_postalcode": {
                        "type": "string",
                        "description": "Address postalcode"
                    },
                    "fp_event_location_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "fp_event_location_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "fp_event_location_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCurrenciesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Symbol"
                    },
                    "iso4217": {
                        "type": "string",
                        "description": "Iso4217"
                    },
                    "decimal": {
                        "type": "integer",
                        "description": "Decimal"
                    },
                    "rounding": {
                        "type": "integer",
                        "description": "Rounding"
                    },
                    "conversion_rate": {
                        "type": "integer",
                        "description": "Conversion rate"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "currency_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "currency_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCurrenciesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Symbol"
                    },
                    "iso4217": {
                        "type": "string",
                        "description": "Iso4217"
                    },
                    "decimal": {
                        "type": "integer",
                        "description": "Decimal"
                    },
                    "rounding": {
                        "type": "integer",
                        "description": "Rounding"
                    },
                    "conversion_rate": {
                        "type": "integer",
                        "description": "Conversion rate"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "currency_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "currency_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAlertsBrowseResource": {
                "type": "object",
                "properties": {
                    "alert_belongsto_reminder_relationship": {
                        "type": "integer",
                        "description": "Reminder"
                    },
                    "reminder_id": {
                        "type": "string",
                        "description": "Reminder"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "is_read": {
                        "type": "string",
                        "description": "Is read"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "target_module": {
                        "enum": [
                            "accounts",
                            "contacts",
                            "opportunities",
                            "leads"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"Accounts\",\n    \"contacts\": \"Contacts\",\n    \"opportunities\": \"Opportunities\",\n    \"leads\": \"Leads\"\n}"
                    },
                    "url_redirect": {
                        "type": "string",
                        "description": "Url redirect"
                    },
                    "alert_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "alert_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "alert_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAlertsReadResource": {
                "type": "object",
                "properties": {
                    "alert_belongsto_reminder_relationship": {
                        "type": "integer",
                        "description": "Reminder"
                    },
                    "reminder_id": {
                        "type": "string",
                        "description": "Reminder"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "is_read": {
                        "type": "string",
                        "description": "Is read"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "target_module": {
                        "enum": [
                            "accounts",
                            "contacts",
                            "opportunities",
                            "leads"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"Accounts\",\n    \"contacts\": \"Contacts\",\n    \"opportunities\": \"Opportunities\",\n    \"leads\": \"Leads\"\n}"
                    },
                    "url_redirect": {
                        "type": "string",
                        "description": "Url redirect"
                    },
                    "alert_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "alert_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "alert_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAodIndexesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "last_optimised": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last optimised",
                        "example": "2021-05-17 00:00"
                    },
                    "aod_index_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aod_index_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aod_index_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAodIndexesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "last_optimised": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last optimised",
                        "example": "2021-05-17 00:00"
                    },
                    "aod_index_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aod_index_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aod_index_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSecuritygroupsUsersBrowseResource": {
                "type": "object",
                "properties": {
                    "primary_group": {
                        "type": "string",
                        "description": "Primary group"
                    },
                    "noninheritable": {
                        "type": "string",
                        "description": "Noninheritable"
                    },
                    "securitygroups_user_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "User"
                    },
                    "securitygroups_user_belongsto_securitygroup_relationship": {
                        "type": "integer",
                        "description": "Securitygroup"
                    },
                    "securitygroup_id": {
                        "type": "string",
                        "description": "Securitygroup id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerSecuritygroupsUsersReadResource": {
                "type": "object",
                "properties": {
                    "primary_group": {
                        "type": "string",
                        "description": "Primary group"
                    },
                    "noninheritable": {
                        "type": "string",
                        "description": "Noninheritable"
                    },
                    "securitygroups_user_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "User"
                    },
                    "securitygroups_user_belongsto_securitygroup_relationship": {
                        "type": "integer",
                        "description": "Securitygroup"
                    },
                    "securitygroup_id": {
                        "type": "string",
                        "description": "Securitygroup id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerAorScheduledReportsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "last_run": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last run",
                        "example": "2021-05-17 00:00"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "aor_scheduled_report_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "schedule": {
                        "type": "string",
                        "description": "Schedule"
                    },
                    "aor_scheduled_report_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_scheduled_report_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_scheduled_report_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorScheduledReportsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "last_run": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last run",
                        "example": "2021-05-17 00:00"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "aor_scheduled_report_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "schedule": {
                        "type": "string",
                        "description": "Schedule"
                    },
                    "email_recipients": {
                        "type": "string",
                        "description": "Email recipients"
                    },
                    "aor_scheduled_report_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_scheduled_report_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_scheduled_report_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerMenusBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    }
                }
            },
            "VoyagerMenusReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    }
                }
            },
            "VoyagerAosQuotesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "opportunity_id": {
                        "type": "string",
                        "description": "Opportunity id"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "aos_quote_belongsto_billing_contact_relationship": {
                        "type": "integer",
                        "description": "Billing contact"
                    },
                    "approval_status": {
                        "enum": [
                            "Approval1",
                            "Approval2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Approval1\": \"Approval1\",\n    \"Approval2\": \"Approval2\"\n}"
                    },
                    "billing_address_postalcode": {
                        "type": "string",
                        "description": "Billing address postalcode"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "billing_address_country": {
                        "type": "string",
                        "description": "Billing address country"
                    },
                    "shipping_address_state": {
                        "type": "string",
                        "description": "Shipping address state"
                    },
                    "billing_address_state": {
                        "type": "string",
                        "description": "Billing address state"
                    },
                    "shipping_amount_usdollar": {
                        "type": "integer",
                        "description": "Shipping amount usdollar"
                    },
                    "billing_account_id": {
                        "type": "string",
                        "description": "Billing account id"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "subtotal_tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal tax amount usdollar"
                    },
                    "stage": {
                        "enum": [
                            "Stage1",
                            "Stage2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "shipping_address_country": {
                        "type": "string",
                        "description": "Shipping address country"
                    },
                    "shipping_address_street": {
                        "type": "string",
                        "description": "Shipping address street"
                    },
                    "shipping_tax_amt_usdollar": {
                        "type": "integer",
                        "description": "Shipping tax amt usdollar"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "shipping_amount": {
                        "type": "integer",
                        "description": "Shipping amount"
                    },
                    "term": {
                        "type": "string",
                        "description": "Term"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Number"
                    },
                    "aos_quote_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "expiration": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Expiration",
                        "example": "2021-05-17"
                    },
                    "shipping_tax": {
                        "type": "string",
                        "description": "Shipping tax"
                    },
                    "shipping_address_city": {
                        "type": "string",
                        "description": "Shipping address city"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "billing_contact_id": {
                        "type": "string",
                        "description": "Billing contact id"
                    },
                    "aos_quote_belongsto_opportunity_relationship": {
                        "type": "integer",
                        "description": "Opportunity"
                    },
                    "aos_quote_belongsto_billing_account_relationship": {
                        "type": "integer",
                        "description": "Billing account"
                    },
                    "subtotal_tax_amount": {
                        "type": "integer",
                        "description": "Subtotal tax amount"
                    },
                    "shipping_tax_amt": {
                        "type": "integer",
                        "description": "Shipping tax amt"
                    },
                    "billing_address_street": {
                        "type": "string",
                        "description": "Billing address street"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "billing_address_city": {
                        "type": "string",
                        "description": "Billing address city"
                    },
                    "invoice_status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "shipping_address_postalcode": {
                        "type": "string",
                        "description": "Shipping address postalcode"
                    },
                    "aos_quote_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_quote_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_quote_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosQuotesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "stage": {
                        "enum": [
                            "Stage1",
                            "Stage2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                    },
                    "approval_status": {
                        "enum": [
                            "Approval1",
                            "Approval2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Approval1\": \"Approval1\",\n    \"Approval2\": \"Approval2\"\n}"
                    },
                    "terms_c": {
                        "type": "string",
                        "description": "Terms"
                    },
                    "billing_address_postalcode": {
                        "type": "string",
                        "description": "Billing address postalcode"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "billing_address_country": {
                        "type": "string",
                        "description": "Billing address country"
                    },
                    "billing_address_state": {
                        "type": "string",
                        "description": "Billing address state"
                    },
                    "shipping_amount_usdollar": {
                        "type": "integer",
                        "description": "Shipping amount usdollar"
                    },
                    "billing_account_id": {
                        "type": "string",
                        "description": "Billing account id"
                    },
                    "opportunity_id": {
                        "type": "string",
                        "description": "Opportunity id"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "subtotal_tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal tax amount usdollar"
                    },
                    "term": {
                        "type": "string",
                        "description": "Term"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "shipping_address_country": {
                        "type": "string",
                        "description": "Shipping address country"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "approval_issue": {
                        "type": "string",
                        "description": "Approval issue"
                    },
                    "shipping_tax_amt_usdollar": {
                        "type": "integer",
                        "description": "Shipping tax amt usdollar"
                    },
                    "shipping_address_street": {
                        "type": "string",
                        "description": "Shipping address street"
                    },
                    "shipping_address_state": {
                        "type": "string",
                        "description": "Shipping address state"
                    },
                    "template_ddown_c": {
                        "type": "string",
                        "description": "Template ddown"
                    },
                    "aos_quote_belongsto_billing_contact_relationship": {
                        "type": "integer",
                        "description": "Billing contact"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Number"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "aos_quote_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "expiration": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Expiration",
                        "example": "2021-05-17"
                    },
                    "shipping_tax": {
                        "type": "string",
                        "description": "Shipping tax"
                    },
                    "shipping_address_city": {
                        "type": "string",
                        "description": "Shipping address city"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "billing_contact_id": {
                        "type": "string",
                        "description": "Billing contact id"
                    },
                    "aos_quote_belongsto_opportunity_relationship": {
                        "type": "integer",
                        "description": "Opportunity"
                    },
                    "shipping_amount": {
                        "type": "integer",
                        "description": "Shipping amount"
                    },
                    "subtotal_tax_amount": {
                        "type": "integer",
                        "description": "Subtotal tax amount"
                    },
                    "shipping_tax_amt": {
                        "type": "integer",
                        "description": "Shipping tax amt"
                    },
                    "billing_address_street": {
                        "type": "string",
                        "description": "Billing address street"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "billing_address_city": {
                        "type": "string",
                        "description": "Billing address city"
                    },
                    "invoice_status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "shipping_address_postalcode": {
                        "type": "string",
                        "description": "Shipping address postalcode"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "aos_quote_belongsto_billing_account_relationship": {
                        "type": "integer",
                        "description": "Billing account"
                    },
                    "aos_quote_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_quote_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_quote_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAokKnowledgebaseBaseCategoriesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "aok_knowledgebase_base_category_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerAokKnowledgebaseBaseCategoriesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "aok_knowledgebase_base_category_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerMeetingsContactsBrowseResource": {
                "type": "object",
                "properties": {
                    "meetings_contact_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                    },
                    "accept_status": {
                        "enum": [
                            "none",
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "meetings_contact_belongsto_meeting_relationship": {
                        "type": "integer",
                        "description": "Meeting"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerMeetingsContactsReadResource": {
                "type": "object",
                "properties": {
                    "meetings_contact_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                    },
                    "accept_status": {
                        "enum": [
                            "none",
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "meetings_contact_belongsto_meeting_relationship": {
                        "type": "integer",
                        "description": "Meeting"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerFpEventsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "fp_events_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "decline_redirect": {
                        "type": "string",
                        "description": "Decline redirect"
                    },
                    "duration_hours": {
                        "type": "integer",
                        "description": "Duration hours"
                    },
                    "invite_templates": {
                        "type": "string",
                        "description": "Invite templates"
                    },
                    "duration_minutes": {
                        "type": "integer",
                        "description": "Duration minutes"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "activity_status_type": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "accept_redirect": {
                        "type": "string",
                        "description": "Accept redirect"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date start",
                        "example": "2021-05-17"
                    },
                    "date_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date end",
                        "example": "2021-05-17"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "fp_event_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "fp_event_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "fp_event_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerFpEventsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "fp_events_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "activity_status_type": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "accept_redirect": {
                        "type": "string",
                        "description": "Accept redirect"
                    },
                    "date_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date end",
                        "example": "2021-05-17"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date start",
                        "example": "2021-05-17"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "duration_minutes": {
                        "type": "integer",
                        "description": "Duration minutes"
                    },
                    "invite_templates": {
                        "type": "string",
                        "description": "Invite templates"
                    },
                    "duration_hours": {
                        "type": "integer",
                        "description": "Duration hours"
                    },
                    "decline_redirect": {
                        "type": "string",
                        "description": "Decline redirect"
                    },
                    "fp_event_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "fp_event_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "fp_event_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAmProjecttemplatesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "override_business_hours": {
                        "type": "string",
                        "description": "Override business hours"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "status": {
                        "enum": [
                            "Draft",
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Draft\": \"Draft\",\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "am_projecttemplate_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "am_projecttemplate_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "am_projecttemplate_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAmProjecttemplatesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "override_business_hours": {
                        "type": "string",
                        "description": "Override business hours"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "status": {
                        "enum": [
                            "Draft",
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Draft\": \"Draft\",\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "am_projecttemplate_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "am_projecttemplate_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "am_projecttemplate_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerTemplatesectionlineBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "ord": {
                        "type": "integer",
                        "description": "Ord"
                    },
                    "grp": {
                        "type": "string",
                        "description": "Grp"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "templatesectionline_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "templatesectionline_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerTemplatesectionlineReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "ord": {
                        "type": "integer",
                        "description": "Ord"
                    },
                    "grp": {
                        "type": "string",
                        "description": "Grp"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "templatesectionline_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "templatesectionline_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSurveysBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "submit_text": {
                        "type": "string",
                        "description": "Submit text"
                    },
                    "satisfied_text": {
                        "type": "string",
                        "description": "Satisfied text"
                    },
                    "neither_text": {
                        "type": "string",
                        "description": "Neither text"
                    },
                    "dissatisfied_text": {
                        "type": "string",
                        "description": "Dissatisfied text"
                    },
                    "status": {
                        "enum": [
                            "Published",
                            "Draft"
                        ],
                        "type": "string",
                        "description": "{\n    \"Published\": \"Published\",\n    \"Draft\": \"Draft\"\n}"
                    },
                    "survey_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "survey_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "survey_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSurveysReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "submit_text": {
                        "type": "string",
                        "description": "Submit text"
                    },
                    "satisfied_text": {
                        "type": "string",
                        "description": "Satisfied text"
                    },
                    "neither_text": {
                        "type": "string",
                        "description": "Neither text"
                    },
                    "dissatisfied_text": {
                        "type": "string",
                        "description": "Dissatisfied text"
                    },
                    "status": {
                        "enum": [
                            "Published",
                            "Draft"
                        ],
                        "type": "string",
                        "description": "{\n    \"Published\": \"Published\",\n    \"Draft\": \"Draft\"\n}"
                    },
                    "survey_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "survey_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "survey_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSchedulersBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "catch_up": {
                        "type": "string",
                        "description": "Catch up"
                    },
                    "job_interval": {
                        "type": "string",
                        "description": "Job interval"
                    },
                    "date_time_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date time start",
                        "example": "2021-05-17 00:00"
                    },
                    "time_from": {
                        "type": "string",
                        "description": "Time from"
                    },
                    "job": {
                        "type": "string",
                        "description": "Job"
                    },
                    "date_time_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date time end",
                        "example": "2021-05-17 00:00"
                    },
                    "time_to": {
                        "type": "string",
                        "description": "Time to"
                    },
                    "last_run": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last run",
                        "example": "2021-05-17 00:00"
                    },
                    "scheduler_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "scheduler_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "scheduler_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSchedulersReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "catch_up": {
                        "type": "string",
                        "description": "Catch up"
                    },
                    "job_interval": {
                        "type": "string",
                        "description": "Job interval"
                    },
                    "date_time_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date time start",
                        "example": "2021-05-17 00:00"
                    },
                    "time_from": {
                        "type": "string",
                        "description": "Time from"
                    },
                    "job": {
                        "type": "string",
                        "description": "Job"
                    },
                    "date_time_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date time end",
                        "example": "2021-05-17 00:00"
                    },
                    "time_to": {
                        "type": "string",
                        "description": "Time to"
                    },
                    "last_run": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last run",
                        "example": "2021-05-17 00:00"
                    },
                    "scheduler_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "scheduler_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "scheduler_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSavedSearchBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "search_module": {
                        "enum": [
                            "accounts",
                            "contacts",
                            "opportunities"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                    },
                    "saved_search_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerSavedSearchReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "search_module": {
                        "enum": [
                            "accounts",
                            "contacts",
                            "opportunities"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                    },
                    "contents": {
                        "type": "string",
                        "description": "Contents"
                    },
                    "saved_search_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerProspectListsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "list_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "domain_name": {
                        "type": "string",
                        "description": "Domain name"
                    },
                    "prospect_list_belongstomany_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "prospect_list_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "prospect_list_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "prospect_list_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerProspectListsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "list_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "domain_name": {
                        "type": "string",
                        "description": "Domain name"
                    },
                    "prospect_list_belongstomany_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "prospect_list_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "prospect_list_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "prospect_list_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJobQueueBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "status": {
                        "enum": [
                            "Pending",
                            "Finished"
                        ],
                        "type": "string",
                        "description": "{\n    \"Pending\": \"Pending\",\n    \"Finished\": \"Finished\"\n}"
                    },
                    "requeue": {
                        "type": "string",
                        "description": "Requeue"
                    },
                    "target": {
                        "type": "string",
                        "description": "Target"
                    },
                    "retry_count": {
                        "type": "integer",
                        "description": "Retry count"
                    },
                    "execute_time": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Execute time",
                        "example": "2021-05-17 00:00"
                    },
                    "failure_count": {
                        "type": "integer",
                        "description": "Failure count"
                    },
                    "client": {
                        "type": "string",
                        "description": "Client"
                    },
                    "job_delay": {
                        "type": "integer",
                        "description": "Job delay"
                    },
                    "resolution": {
                        "enum": [
                            "Resolution1",
                            "Resolution2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "description": "Percent complete"
                    },
                    "job_queue_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "job_queue_belongsto_scheduler_relationship": {
                        "type": "integer",
                        "description": "Scheduler"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "scheduler_id": {
                        "type": "string",
                        "description": "Scheduler id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "job_queue_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "job_queue_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJobQueueReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "client": {
                        "type": "string",
                        "description": "Client"
                    },
                    "requeue": {
                        "type": "string",
                        "description": "Requeue"
                    },
                    "target": {
                        "type": "string",
                        "description": "Target"
                    },
                    "retry_count": {
                        "type": "integer",
                        "description": "Retry count"
                    },
                    "execute_time": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Execute time",
                        "example": "2021-05-17 00:00"
                    },
                    "failure_count": {
                        "type": "integer",
                        "description": "Failure count"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "description": "Percent complete"
                    },
                    "data": {
                        "type": "string",
                        "description": "Data"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message"
                    },
                    "job_delay": {
                        "type": "integer",
                        "description": "Job delay"
                    },
                    "resolution": {
                        "enum": [
                            "Resolution1",
                            "Resolution2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                    },
                    "status": {
                        "enum": [
                            "Pending",
                            "Finished"
                        ],
                        "type": "string",
                        "description": "{\n    \"Pending\": \"Pending\",\n    \"Finished\": \"Finished\"\n}"
                    },
                    "job_queue_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "job_queue_belongsto_scheduler_relationship": {
                        "type": "integer",
                        "description": "Scheduler"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "scheduler_id": {
                        "type": "string",
                        "description": "Scheduler id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "job_queue_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "job_queue_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerOutboundEmailBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "smtp_from_name": {
                        "type": "string",
                        "description": "Smtp from name"
                    },
                    "smtp_from_addr": {
                        "type": "string",
                        "description": "Smtp from addr"
                    },
                    "mail_sendtype": {
                        "type": "string",
                        "description": "Mail sendtype"
                    },
                    "mail_smtptype": {
                        "type": "string",
                        "description": "Mail smtptype"
                    },
                    "mail_smtpserver": {
                        "type": "string",
                        "description": "Mail smtpserver"
                    },
                    "mail_smtpport": {
                        "type": "string",
                        "description": "Mail smtpport"
                    },
                    "mail_smtpuser": {
                        "type": "string",
                        "description": "Mail smtpuser"
                    },
                    "mail_smtpauth_req": {
                        "type": "string",
                        "description": "Mail smtpauth req"
                    },
                    "mail_smtpssl": {
                        "type": "string",
                        "description": "Mail smtpssl"
                    },
                    "outbound_email_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "outbound_email_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "outbound_email_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerOutboundEmailReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "smtp_from_name": {
                        "type": "string",
                        "description": "Smtp from name"
                    },
                    "smtp_from_addr": {
                        "type": "string",
                        "description": "Smtp from addr"
                    },
                    "mail_sendtype": {
                        "type": "string",
                        "description": "Mail sendtype"
                    },
                    "mail_smtptype": {
                        "type": "string",
                        "description": "Mail smtptype"
                    },
                    "mail_smtpserver": {
                        "type": "string",
                        "description": "Mail smtpserver"
                    },
                    "mail_smtpport": {
                        "type": "string",
                        "description": "Mail smtpport"
                    },
                    "mail_smtpuser": {
                        "type": "string",
                        "description": "Mail smtpuser"
                    },
                    "mail_smtpauth_req": {
                        "type": "string",
                        "description": "Mail smtpauth req"
                    },
                    "mail_smtpssl": {
                        "type": "string",
                        "description": "Mail smtpssl"
                    },
                    "outbound_email_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "outbound_email_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "outbound_email_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCasesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "resolution": {
                        "enum": [
                            "Resolution1",
                            "Resolution2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                    },
                    "priority": {
                        "enum": [
                            "Priority1",
                            "Priority2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Priority1\": \"Priority1\",\n    \"Priority2\": \"Priority2\"\n}"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "Account id"
                    },
                    "case_belongsto_contact_created_by_relationship": {
                        "type": "integer",
                        "description": "Contact created by"
                    },
                    "contact_created_by_id": {
                        "type": "string",
                        "description": "Contact created by id"
                    },
                    "case_belongsto_account_relationship": {
                        "type": "integer",
                        "description": "Account"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "case_number": {
                        "type": "integer",
                        "description": "Case number"
                    },
                    "state": {
                        "enum": [
                            "Open",
                            "Closed"
                        ],
                        "type": "string",
                        "description": "{\n    \"Open\": \"Open\",\n    \"Closed\": \"Closed\"\n}"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "case_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "case_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "case_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCasesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "case_belongsto_account_relationship": {
                        "type": "integer",
                        "description": "Account"
                    },
                    "priority": {
                        "enum": [
                            "Priority1",
                            "Priority2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Priority1\": \"Priority1\",\n    \"Priority2\": \"Priority2\"\n}"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "Account id"
                    },
                    "case_belongsto_contact_created_by_relationship": {
                        "type": "integer",
                        "description": "Contact created by"
                    },
                    "contact_created_by_id": {
                        "type": "string",
                        "description": "Contact created by id"
                    },
                    "resolution": {
                        "enum": [
                            "Resolution1",
                            "Resolution2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "work_log": {
                        "type": "string",
                        "description": "Work log"
                    },
                    "case_number": {
                        "type": "integer",
                        "description": "Case number"
                    },
                    "state": {
                        "enum": [
                            "Open",
                            "Closed"
                        ],
                        "type": "string",
                        "description": "{\n    \"Open\": \"Open\",\n    \"Closed\": \"Closed\"\n}"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "case_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "case_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "case_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSurveyquestionsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "Sort order"
                    },
                    "happiness_question": {
                        "type": "string",
                        "description": "Happiness question"
                    },
                    "surveyquestion_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "surveyquestion_belongsto_survey_relationship": {
                        "type": "integer",
                        "description": "Survey"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "survey_id": {
                        "type": "string",
                        "description": "Survey id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "surveyquestion_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "surveyquestion_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSurveyquestionsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "Sort order"
                    },
                    "happiness_question": {
                        "type": "string",
                        "description": "Happiness question"
                    },
                    "surveyquestion_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "surveyquestion_belongsto_survey_relationship": {
                        "type": "integer",
                        "description": "Survey"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "survey_id": {
                        "type": "string",
                        "description": "Survey id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "surveyquestion_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "surveyquestion_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAokKnowledgebaseBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship": {
                        "type": "integer",
                        "description": "Categories"
                    },
                    "revision": {
                        "type": "string",
                        "description": "Revision"
                    },
                    "aok_knowledgebase_belongsto_user_id_c_relationship": {
                        "type": "integer",
                        "description": "User id"
                    },
                    "aok_knowledgebase_belongsto_user_id1_c_relationship": {
                        "type": "integer",
                        "description": "User id1"
                    },
                    "aok_knowledgebase_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "user_id1_c": {
                        "type": "string",
                        "description": "User id1"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "user_id_c": {
                        "type": "string",
                        "description": "User id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aok_knowledgebase_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aok_knowledgebase_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAokKnowledgebaseReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship": {
                        "type": "integer",
                        "description": "Categories"
                    },
                    "revision": {
                        "type": "string",
                        "description": "Revision"
                    },
                    "additional_info": {
                        "type": "string",
                        "description": "Additional info"
                    },
                    "aok_knowledgebase_belongsto_user_id_c_relationship": {
                        "type": "integer",
                        "description": "User id"
                    },
                    "aok_knowledgebase_belongsto_user_id1_c_relationship": {
                        "type": "integer",
                        "description": "User id1"
                    },
                    "aok_knowledgebase_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "user_id1_c": {
                        "type": "string",
                        "description": "User id1"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "user_id_c": {
                        "type": "string",
                        "description": "User id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aok_knowledgebase_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aok_knowledgebase_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorConditionsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "parameter": {
                        "type": "string",
                        "description": "joy-voyager-crm::seeders.data_rows.parameter"
                    },
                    "logic_op": {
                        "enum": [
                            "LogicOp1",
                            "LogicOp2"
                        ],
                        "type": "string",
                        "description": "{\n    \"LogicOp1\": \"LogicOp1\",\n    \"LogicOp2\": \"LogicOp2\"\n}"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "value_type": {
                        "enum": [
                            "value",
                            "field"
                        ],
                        "type": "string",
                        "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "field": {
                        "enum": [
                            "Field1",
                            "Field2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Field1\": \"Field1\",\n    \"Field2\": \"Field2\"\n}"
                    },
                    "module_path": {
                        "enum": [
                            "Module1",
                            "Module2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                    },
                    "operator": {
                        "enum": [
                            "Operator1",
                            "Operator2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Operator1\": \"Operator1\",\n    \"Operator2\": \"Operator2\"\n}"
                    },
                    "condition_order": {
                        "type": "integer",
                        "description": "Condition order"
                    },
                    "parenthesis": {
                        "type": "string",
                        "description": "Parenthesis"
                    },
                    "aor_condition_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "aor_condition_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_condition_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_condition_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorConditionsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "parameter": {
                        "type": "string",
                        "description": "joy-voyager-crm::seeders.data_rows.parameter"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "field": {
                        "enum": [
                            "Field1",
                            "Field2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Field1\": \"Field1\",\n    \"Field2\": \"Field2\"\n}"
                    },
                    "module_path": {
                        "enum": [
                            "Module1",
                            "Module2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                    },
                    "operator": {
                        "enum": [
                            "Operator1",
                            "Operator2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Operator1\": \"Operator1\",\n    \"Operator2\": \"Operator2\"\n}"
                    },
                    "aor_condition_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "parenthesis": {
                        "type": "string",
                        "description": "Parenthesis"
                    },
                    "condition_order": {
                        "type": "integer",
                        "description": "Condition order"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "value_type": {
                        "enum": [
                            "value",
                            "field"
                        ],
                        "type": "string",
                        "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                    },
                    "logic_op": {
                        "enum": [
                            "LogicOp1",
                            "LogicOp2"
                        ],
                        "type": "string",
                        "description": "{\n    \"LogicOp1\": \"LogicOp1\",\n    \"LogicOp2\": \"LogicOp2\"\n}"
                    },
                    "aor_condition_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_condition_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_condition_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerContactsBugsBrowseResource": {
                "type": "object",
                "properties": {
                    "contact_role": {
                        "type": "string",
                        "description": "Contact role"
                    },
                    "contacts_bug_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "contacts_bug_belongsto_bug_relationship": {
                        "type": "integer",
                        "description": "Bug"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "bug_id": {
                        "type": "string",
                        "description": "Bug id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerContactsBugsReadResource": {
                "type": "object",
                "properties": {
                    "contact_role": {
                        "type": "string",
                        "description": "Contact role"
                    },
                    "contacts_bug_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "contacts_bug_belongsto_bug_relationship": {
                        "type": "integer",
                        "description": "Bug"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "bug_id": {
                        "type": "string",
                        "description": "Bug id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerJjwgMapsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "unit_type": {
                        "enum": [
                            "Mi",
                            "Km"
                        ],
                        "type": "string",
                        "description": "{\n    \"Mi\": \"Mi\",\n    \"Km\": \"Km\"\n}"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Distance"
                    },
                    "jjwg_map_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_map_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_map_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJjwgMapsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "unit_type": {
                        "enum": [
                            "Mi",
                            "Km"
                        ],
                        "type": "string",
                        "description": "{\n    \"Mi\": \"Mi\",\n    \"Km\": \"Km\"\n}"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Distance"
                    },
                    "jjwg_map_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_map_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_map_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJjwgAddressCacheBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "lat": {
                        "type": "string",
                        "description": "Lat"
                    },
                    "lng": {
                        "type": "string",
                        "description": "Lng"
                    },
                    "jjwg_address_cache_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_address_cache_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_address_cache_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJjwgAddressCacheReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "lat": {
                        "type": "string",
                        "description": "Lat"
                    },
                    "lng": {
                        "type": "string",
                        "description": "Lng"
                    },
                    "jjwg_address_cache_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_address_cache_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_address_cache_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorFieldsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "display": {
                        "type": "string",
                        "description": "Display"
                    },
                    "module_path": {
                        "type": "string",
                        "description": "Module path"
                    },
                    "group_display": {
                        "type": "integer",
                        "description": "Group display"
                    },
                    "sort_by": {
                        "type": "string",
                        "description": "Sort by"
                    },
                    "field_order": {
                        "type": "integer",
                        "description": "Field order"
                    },
                    "field_function": {
                        "type": "string",
                        "description": "Field function"
                    },
                    "total": {
                        "type": "string",
                        "description": "Total"
                    },
                    "group_order": {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                    },
                    "aor_field_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "link": {
                        "type": "string",
                        "description": "Link"
                    },
                    "sort_order": {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "format": {
                        "type": "string",
                        "description": "Format"
                    },
                    "field": {
                        "type": "string",
                        "description": "Field"
                    },
                    "group_by": {
                        "type": "string",
                        "description": "Group by"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_field_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_field_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorFieldsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "module_path": {
                        "type": "string",
                        "description": "Module path"
                    },
                    "aor_field_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "group_display": {
                        "type": "integer",
                        "description": "Group display"
                    },
                    "sort_by": {
                        "type": "string",
                        "description": "Sort by"
                    },
                    "field_order": {
                        "type": "integer",
                        "description": "Field order"
                    },
                    "field_function": {
                        "type": "string",
                        "description": "Field function"
                    },
                    "total": {
                        "type": "string",
                        "description": "Total"
                    },
                    "group_order": {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                    },
                    "display": {
                        "type": "string",
                        "description": "Display"
                    },
                    "link": {
                        "type": "string",
                        "description": "Link"
                    },
                    "sort_order": {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "format": {
                        "type": "string",
                        "description": "Format"
                    },
                    "field": {
                        "type": "string",
                        "description": "Field"
                    },
                    "group_by": {
                        "type": "string",
                        "description": "Group by"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_field_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_field_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAowActionsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "aow_workflow_id": {
                        "type": "string",
                        "description": "Aow workflow id"
                    },
                    "action_order": {
                        "type": "integer",
                        "description": "Action order"
                    },
                    "aow_action_belongsto_aow_workflow_relationship": {
                        "type": "integer",
                        "description": "Aow workflow"
                    },
                    "action": {
                        "enum": [
                            "ActionType1",
                            "ActionType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"ActionType1\": \"ActionType1\",\n    \"ActionType2\": \"ActionType2\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_action_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_action_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAowActionsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "aow_workflow_id": {
                        "type": "string",
                        "description": "Aow workflow id"
                    },
                    "action_order": {
                        "type": "integer",
                        "description": "Action order"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "Parameters"
                    },
                    "aow_action_belongsto_aow_workflow_relationship": {
                        "type": "integer",
                        "description": "Aow workflow"
                    },
                    "action": {
                        "enum": [
                            "ActionType1",
                            "ActionType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"ActionType1\": \"ActionType1\",\n    \"ActionType2\": \"ActionType2\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_action_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_action_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerLeadsBrowseResource": {
                "type": "object",
                "properties": {
                    "opportunity_name": {
                        "type": "string",
                        "description": "Opportunity name"
                    },
                    "alt_address_city": {
                        "type": "string",
                        "description": "Alt address city"
                    },
                    "phone_home": {
                        "type": "string",
                        "description": "Phone home"
                    },
                    "lead_belongsto_opportunity_relationship": {
                        "type": "integer",
                        "description": "Opportunity"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department"
                    },
                    "lawful_basis_source": {
                        "type": "string",
                        "description": "Lawful basis source"
                    },
                    "primary_address_postalcode": {
                        "type": "string",
                        "description": "Primary address postalcode"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "primary_address_country": {
                        "type": "string",
                        "description": "Primary address country"
                    },
                    "portal_app": {
                        "type": "string",
                        "description": "Portal app"
                    },
                    "alt_address_street": {
                        "type": "string",
                        "description": "Alt address street"
                    },
                    "phone_work": {
                        "type": "string",
                        "description": "Phone work"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "alt_address_country": {
                        "type": "string",
                        "description": "Alt address country"
                    },
                    "do_not_call": {
                        "type": "string",
                        "description": "Do not call"
                    },
                    "opportunity_id": {
                        "type": "string",
                        "description": "Opportunity id"
                    },
                    "alt_address_state": {
                        "type": "string",
                        "description": "Alt address state"
                    },
                    "lead_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "photo": {
                        "type": "string",
                        "description": "Photo"
                    },
                    "alt_address_postalcode": {
                        "type": "string",
                        "description": "Alt address postalcode"
                    },
                    "primary_address_street": {
                        "type": "string",
                        "description": "Primary address street"
                    },
                    "primary_address_state": {
                        "type": "string",
                        "description": "Primary address state"
                    },
                    "opportunity_amount": {
                        "type": "string",
                        "description": "Opportunity amount"
                    },
                    "portal_name": {
                        "type": "string",
                        "description": "Portal name"
                    },
                    "phone_mobile": {
                        "type": "string",
                        "description": "Phone mobile"
                    },
                    "refered_by": {
                        "type": "string",
                        "description": "Refered by"
                    },
                    "assistant": {
                        "type": "string",
                        "description": "Assistant"
                    },
                    "account_name": {
                        "type": "string",
                        "description": "Account name"
                    },
                    "converted": {
                        "type": "string",
                        "description": "Converted"
                    },
                    "lead_belongsto_account_relationship": {
                        "type": "integer",
                        "description": "Account"
                    },
                    "primary_address_city": {
                        "type": "string",
                        "description": "Primary address city"
                    },
                    "birthdate": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Birthdate",
                        "example": "2021-05-17"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "Account id"
                    },
                    "salutation": {
                        "type": "string",
                        "description": "Salutation"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "reports_to_id": {
                        "type": "string",
                        "description": "Reports to id"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name"
                    },
                    "assistant_phone": {
                        "type": "string",
                        "description": "Assistant phone"
                    },
                    "lead_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "phone_other": {
                        "type": "string",
                        "description": "Phone other"
                    },
                    "website": {
                        "type": "string",
                        "description": "Website"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name"
                    },
                    "lead_belongsto_reports_to_relationship": {
                        "type": "integer",
                        "description": "Reports to"
                    },
                    "lead_source": {
                        "type": "string",
                        "description": "Lead source"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "date_reviewed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date reviewed",
                        "example": "2021-05-17"
                    },
                    "lead_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "lead_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "lead_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerLeadsReadResource": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "opportunity_name": {
                        "type": "string",
                        "description": "Opportunity name"
                    },
                    "phone_home": {
                        "type": "string",
                        "description": "Phone home"
                    },
                    "lead_belongsto_opportunity_relationship": {
                        "type": "integer",
                        "description": "Opportunity"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department"
                    },
                    "lawful_basis_source": {
                        "type": "string",
                        "description": "Lawful basis source"
                    },
                    "primary_address_postalcode": {
                        "type": "string",
                        "description": "Primary address postalcode"
                    },
                    "account_description": {
                        "type": "string",
                        "description": "Account description"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "primary_address_country": {
                        "type": "string",
                        "description": "Primary address country"
                    },
                    "portal_app": {
                        "type": "string",
                        "description": "Portal app"
                    },
                    "alt_address_street": {
                        "type": "string",
                        "description": "Alt address street"
                    },
                    "phone_work": {
                        "type": "string",
                        "description": "Phone work"
                    },
                    "lead_source_description": {
                        "type": "string",
                        "description": "Lead source description"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "alt_address_country": {
                        "type": "string",
                        "description": "Alt address country"
                    },
                    "do_not_call": {
                        "type": "string",
                        "description": "Do not call"
                    },
                    "status_description": {
                        "type": "string",
                        "description": "Status description"
                    },
                    "opportunity_id": {
                        "type": "string",
                        "description": "Opportunity id"
                    },
                    "alt_address_state": {
                        "type": "string",
                        "description": "Alt address state"
                    },
                    "lead_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "photo": {
                        "type": "string",
                        "description": "Photo"
                    },
                    "alt_address_postalcode": {
                        "type": "string",
                        "description": "Alt address postalcode"
                    },
                    "primary_address_street": {
                        "type": "string",
                        "description": "Primary address street"
                    },
                    "primary_address_state": {
                        "type": "string",
                        "description": "Primary address state"
                    },
                    "opportunity_amount": {
                        "type": "string",
                        "description": "Opportunity amount"
                    },
                    "portal_name": {
                        "type": "string",
                        "description": "Portal name"
                    },
                    "phone_mobile": {
                        "type": "string",
                        "description": "Phone mobile"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name"
                    },
                    "assistant": {
                        "type": "string",
                        "description": "Assistant"
                    },
                    "account_name": {
                        "type": "string",
                        "description": "Account name"
                    },
                    "converted": {
                        "type": "string",
                        "description": "Converted"
                    },
                    "lead_belongsto_account_relationship": {
                        "type": "integer",
                        "description": "Account"
                    },
                    "primary_address_city": {
                        "type": "string",
                        "description": "Primary address city"
                    },
                    "birthdate": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Birthdate",
                        "example": "2021-05-17"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "Account id"
                    },
                    "salutation": {
                        "type": "string",
                        "description": "Salutation"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "reports_to_id": {
                        "type": "string",
                        "description": "Reports to id"
                    },
                    "lawful_basis": {
                        "type": "string",
                        "description": "Lawful basis"
                    },
                    "assistant_phone": {
                        "type": "string",
                        "description": "Assistant phone"
                    },
                    "lead_belongsto_reports_to_relationship": {
                        "type": "integer",
                        "description": "Reports to"
                    },
                    "alt_address_city": {
                        "type": "string",
                        "description": "Alt address city"
                    },
                    "date_reviewed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date reviewed",
                        "example": "2021-05-17"
                    },
                    "refered_by": {
                        "type": "string",
                        "description": "Refered by"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "lead_source": {
                        "type": "string",
                        "description": "Lead source"
                    },
                    "lead_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name"
                    },
                    "website": {
                        "type": "string",
                        "description": "Website"
                    },
                    "phone_other": {
                        "type": "string",
                        "description": "Phone other"
                    },
                    "lead_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "lead_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "lead_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerRolesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display Name"
                    }
                }
            },
            "VoyagerRolesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display Name"
                    }
                }
            },
            "VoyagerUsersSignaturesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerUsersSignaturesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "signature": {
                        "type": "string",
                        "description": "Signature"
                    },
                    "signature_html": {
                        "type": "string",
                        "description": "Signature html"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerRemindersBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "timer_popup": {
                        "type": "string",
                        "description": "Timer popup"
                    },
                    "timer_email": {
                        "type": "string",
                        "description": "Timer email"
                    },
                    "date_willexecute": {
                        "type": "integer",
                        "description": "Date willexecute"
                    },
                    "popup_viewed": {
                        "type": "string",
                        "description": "Popup viewed"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "email_sent": {
                        "type": "string",
                        "description": "Email sent"
                    },
                    "popup": {
                        "type": "string",
                        "description": "Popup"
                    },
                    "reminder_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "reminder_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "reminder_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerRemindersReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "timer_popup": {
                        "type": "string",
                        "description": "Timer popup"
                    },
                    "timer_email": {
                        "type": "string",
                        "description": "Timer email"
                    },
                    "date_willexecute": {
                        "type": "integer",
                        "description": "Date willexecute"
                    },
                    "popup_viewed": {
                        "type": "string",
                        "description": "Popup viewed"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "email_sent": {
                        "type": "string",
                        "description": "Email sent"
                    },
                    "popup": {
                        "type": "string",
                        "description": "Popup"
                    },
                    "reminder_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "reminder_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "reminder_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAmTasktemplatesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "utilization": {
                        "type": "string",
                        "description": "Utilization"
                    },
                    "relationship_type": {
                        "enum": [
                            "FS"
                        ],
                        "type": "string",
                        "description": "{\n    \"FS\": \"FS\"\n}"
                    },
                    "order_number": {
                        "type": "integer",
                        "description": "Order number"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "description": "Percent complete"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "milestone_flag": {
                        "type": "string",
                        "description": "Milestone flag"
                    },
                    "predecessors": {
                        "type": "integer",
                        "description": "Predecessors"
                    },
                    "estimated_effort": {
                        "type": "integer",
                        "description": "Estimated effort"
                    },
                    "task_number": {
                        "type": "integer",
                        "description": "Task number"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration"
                    },
                    "status": {
                        "enum": [
                            "Not Started",
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Not Started\": \"Not Started\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "am_tasktemplate_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "am_tasktemplate_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "am_tasktemplate_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAmTasktemplatesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "utilization": {
                        "type": "string",
                        "description": "Utilization"
                    },
                    "relationship_type": {
                        "enum": [
                            "FS"
                        ],
                        "type": "string",
                        "description": "{\n    \"FS\": \"FS\"\n}"
                    },
                    "order_number": {
                        "type": "integer",
                        "description": "Order number"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "description": "Percent complete"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "milestone_flag": {
                        "type": "string",
                        "description": "Milestone flag"
                    },
                    "predecessors": {
                        "type": "integer",
                        "description": "Predecessors"
                    },
                    "estimated_effort": {
                        "type": "integer",
                        "description": "Estimated effort"
                    },
                    "task_number": {
                        "type": "integer",
                        "description": "Task number"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration"
                    },
                    "status": {
                        "enum": [
                            "Not Started",
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Not Started\": \"Not Started\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "am_tasktemplate_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "am_tasktemplate_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "am_tasktemplate_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJjwgMarkersBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "state": {
                        "type": "string",
                        "description": "State"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country"
                    },
                    "jjwg_maps_lat": {
                        "type": "string",
                        "description": "Jjwg maps lat"
                    },
                    "jjwg_maps_lng": {
                        "type": "string",
                        "description": "Jjwg maps lng"
                    },
                    "city": {
                        "type": "string",
                        "description": "City"
                    },
                    "marker_image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "jjwg_marker_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_marker_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_marker_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJjwgMarkersReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "state": {
                        "type": "string",
                        "description": "State"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country"
                    },
                    "jjwg_maps_lat": {
                        "type": "string",
                        "description": "Jjwg maps lat"
                    },
                    "jjwg_maps_lng": {
                        "type": "string",
                        "description": "Jjwg maps lng"
                    },
                    "city": {
                        "type": "string",
                        "description": "City"
                    },
                    "marker_image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "jjwg_marker_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_marker_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_marker_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCampaignsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "tracker_key": {
                        "type": "integer",
                        "description": "Tracker key"
                    },
                    "expected_revenue": {
                        "type": "integer",
                        "description": "Expected revenue"
                    },
                    "impressions": {
                        "type": "integer",
                        "description": "Impressions"
                    },
                    "campaign_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency"
                    },
                    "campaign_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "survey_id": {
                        "type": "string",
                        "description": "Survey id"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Start date",
                        "example": "2021-05-17"
                    },
                    "frequency": {
                        "enum": [
                            "every minute",
                            "hourly",
                            "daily",
                            "weekly",
                            "mothly",
                            "yearly"
                        ],
                        "type": "string",
                        "description": "{\n    \"every minute\": \"Every minute\",\n    \"hourly\": \"Hourly\",\n    \"daily\": \"Daily\",\n    \"weekly\": \"Weekly\",\n    \"mothly\": \"Mothly\",\n    \"yearly\": \"Yearly\"\n}"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "End date",
                        "example": "2021-05-17"
                    },
                    "actual_cost": {
                        "type": "integer",
                        "description": "Actual cost"
                    },
                    "campaign_belongsto_survey_relationship": {
                        "type": "integer",
                        "description": "Survey"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "refer_url": {
                        "type": "string",
                        "description": "Refer url"
                    },
                    "tracker_count": {
                        "type": "integer",
                        "description": "Tracker count"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "campaign_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "campaign_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "campaign_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCampaignsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "tracker_key": {
                        "type": "integer",
                        "description": "Tracker key"
                    },
                    "objective": {
                        "type": "string",
                        "description": "Objective"
                    },
                    "expected_revenue": {
                        "type": "integer",
                        "description": "Expected revenue"
                    },
                    "impressions": {
                        "type": "integer",
                        "description": "Impressions"
                    },
                    "campaign_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency"
                    },
                    "tracker_text": {
                        "type": "string",
                        "description": "Tracker text"
                    },
                    "campaign_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "survey_id": {
                        "type": "string",
                        "description": "Survey id"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Start date",
                        "example": "2021-05-17"
                    },
                    "frequency": {
                        "enum": [
                            "every minute",
                            "hourly",
                            "daily",
                            "weekly",
                            "mothly",
                            "yearly"
                        ],
                        "type": "string",
                        "description": "{\n    \"every minute\": \"Every minute\",\n    \"hourly\": \"Hourly\",\n    \"daily\": \"Daily\",\n    \"weekly\": \"Weekly\",\n    \"mothly\": \"Mothly\",\n    \"yearly\": \"Yearly\"\n}"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "End date",
                        "example": "2021-05-17"
                    },
                    "actual_cost": {
                        "type": "integer",
                        "description": "Actual cost"
                    },
                    "campaign_belongsto_survey_relationship": {
                        "type": "integer",
                        "description": "Survey"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "refer_url": {
                        "type": "string",
                        "description": "Refer url"
                    },
                    "tracker_count": {
                        "type": "integer",
                        "description": "Tracker count"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "campaign_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "campaign_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "campaign_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerMeetingsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "date_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date end",
                        "example": "2021-05-17 00:00"
                    },
                    "type": {
                        "enum": [
                            "Sugar",
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Sugar\": \"Sugar\",\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "gsync_id": {
                        "type": "string",
                        "description": "Gsync id"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date start",
                        "example": "2021-05-17 00:00"
                    },
                    "join_url": {
                        "type": "string",
                        "description": "Join url"
                    },
                    "email_reminder_sent": {
                        "type": "string",
                        "description": "Email reminder sent"
                    },
                    "status": {
                        "enum": [
                            "Planned"
                        ],
                        "type": "string",
                        "description": "{\n    \"Planned\": \"Planned\"\n}"
                    },
                    "repeat_until": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Repeat until",
                        "example": "2021-05-17"
                    },
                    "email_reminder_time": {
                        "type": "integer",
                        "description": "Email reminder time"
                    },
                    "outlook_id": {
                        "type": "string",
                        "description": "Outlook id"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Sequence"
                    },
                    "host_url": {
                        "type": "string",
                        "description": "Host url"
                    },
                    "duration_minutes": {
                        "type": "integer",
                        "description": "Duration minutes"
                    },
                    "creator": {
                        "type": "string",
                        "description": "Creator"
                    },
                    "displayed_url": {
                        "type": "string",
                        "description": "Displayed url"
                    },
                    "gsync_lastsync": {
                        "type": "integer",
                        "description": "Gsync lastsync"
                    },
                    "external_id": {
                        "type": "string",
                        "description": "External id"
                    },
                    "reminder_time": {
                        "type": "integer",
                        "description": "Reminder time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "repeat_dow": {
                        "type": "integer",
                        "description": "Repeat dow"
                    },
                    "duration_hours": {
                        "type": "integer",
                        "description": "Duration hours"
                    },
                    "repeat_count": {
                        "type": "integer",
                        "description": "Repeat count"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password"
                    },
                    "meeting_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "meeting_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "meeting_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerMeetingsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "date_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date end",
                        "example": "2021-05-17 00:00"
                    },
                    "type": {
                        "enum": [
                            "Sugar",
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Sugar\": \"Sugar\",\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "gsync_id": {
                        "type": "string",
                        "description": "Gsync id"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date start",
                        "example": "2021-05-17 00:00"
                    },
                    "join_url": {
                        "type": "string",
                        "description": "Join url"
                    },
                    "email_reminder_sent": {
                        "type": "string",
                        "description": "Email reminder sent"
                    },
                    "status": {
                        "enum": [
                            "Planned"
                        ],
                        "type": "string",
                        "description": "{\n    \"Planned\": \"Planned\"\n}"
                    },
                    "repeat_until": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Repeat until",
                        "example": "2021-05-17"
                    },
                    "email_reminder_time": {
                        "type": "integer",
                        "description": "Email reminder time"
                    },
                    "outlook_id": {
                        "type": "string",
                        "description": "Outlook id"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Sequence"
                    },
                    "host_url": {
                        "type": "string",
                        "description": "Host url"
                    },
                    "duration_minutes": {
                        "type": "integer",
                        "description": "Duration minutes"
                    },
                    "creator": {
                        "type": "string",
                        "description": "Creator"
                    },
                    "displayed_url": {
                        "type": "string",
                        "description": "Displayed url"
                    },
                    "gsync_lastsync": {
                        "type": "integer",
                        "description": "Gsync lastsync"
                    },
                    "external_id": {
                        "type": "string",
                        "description": "External id"
                    },
                    "reminder_time": {
                        "type": "integer",
                        "description": "Reminder time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "repeat_dow": {
                        "type": "integer",
                        "description": "Repeat dow"
                    },
                    "duration_hours": {
                        "type": "integer",
                        "description": "Duration hours"
                    },
                    "repeat_count": {
                        "type": "integer",
                        "description": "Repeat count"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password"
                    },
                    "meeting_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "meeting_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "meeting_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosProductsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price"
                    },
                    "aos_product_belongsto_aos_product_category_relationship": {
                        "type": "integer",
                        "description": "Aos product category"
                    },
                    "cost_usdollar": {
                        "type": "integer",
                        "description": "Cost usdollar"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "aos_product_category_id": {
                        "type": "string",
                        "description": "Aos product category id"
                    },
                    "price_usdollar": {
                        "type": "integer",
                        "description": "Price usdollar"
                    },
                    "aos_product_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Cost"
                    },
                    "url": {
                        "type": "string",
                        "description": "Url"
                    },
                    "aos_product_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "product_image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "part_number": {
                        "type": "string",
                        "description": "Part number"
                    },
                    "maincode": {
                        "type": "string",
                        "description": "Maincode"
                    },
                    "aos_product_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_product_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_product_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosProductsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price"
                    },
                    "aos_product_belongsto_aos_product_category_relationship": {
                        "type": "integer",
                        "description": "Aos product category"
                    },
                    "cost_usdollar": {
                        "type": "integer",
                        "description": "Cost usdollar"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "aos_product_category_id": {
                        "type": "string",
                        "description": "Aos product category id"
                    },
                    "price_usdollar": {
                        "type": "integer",
                        "description": "Price usdollar"
                    },
                    "aos_product_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "cost": {
                        "type": "integer",
                        "description": "Cost"
                    },
                    "url": {
                        "type": "string",
                        "description": "Url"
                    },
                    "aos_product_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "product_image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "part_number": {
                        "type": "string",
                        "description": "Part number"
                    },
                    "maincode": {
                        "type": "string",
                        "description": "Maincode"
                    },
                    "aos_product_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_product_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_product_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerUsersBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "role_id": {
                        "type": "string",
                        "description": "Role"
                    },
                    "user_belongsto_reports_to_relationship": {
                        "type": "integer",
                        "description": "Reports to"
                    },
                    "user_belongsto_role_relationship": {
                        "type": "integer",
                        "description": "Role"
                    },
                    "user_belongstomany_role_relationship": {
                        "type": "integer",
                        "description": "Roles"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "system_generated_password": {
                        "type": "string",
                        "description": "System generated password"
                    },
                    "pwd_last_changed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Pwd last changed",
                        "example": "2021-05-17 00:00"
                    },
                    "sugar_login": {
                        "type": "string",
                        "description": "Sugar login"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name"
                    },
                    "is_admin": {
                        "type": "string",
                        "description": "Is admin"
                    },
                    "external_auth_only": {
                        "type": "string",
                        "description": "External auth only"
                    },
                    "receive_notifications": {
                        "type": "string",
                        "description": "Receive notifications"
                    },
                    "user_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    },
                    "user_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "photo": {
                        "type": "string",
                        "description": "Photo"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department"
                    },
                    "phone_home": {
                        "type": "string",
                        "description": "Phone home"
                    },
                    "phone_mobile": {
                        "type": "string",
                        "description": "Phone mobile"
                    },
                    "phone_work": {
                        "type": "string",
                        "description": "Phone work"
                    },
                    "phone_other": {
                        "type": "string",
                        "description": "Phone other"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "address_street": {
                        "type": "string",
                        "description": "Address street"
                    },
                    "address_city": {
                        "type": "string",
                        "description": "Address city"
                    },
                    "address_state": {
                        "type": "string",
                        "description": "Address state"
                    },
                    "address_country": {
                        "type": "string",
                        "description": "Address country"
                    },
                    "address_postalcode": {
                        "type": "string",
                        "description": "Address postalcode"
                    },
                    "portal_only": {
                        "type": "string",
                        "description": "Portal only"
                    },
                    "show_on_employees": {
                        "type": "string",
                        "description": "Show on employees"
                    },
                    "employee_status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "reports_to_id": {
                        "type": "string",
                        "description": "Reports to"
                    },
                    "is_group": {
                        "type": "string",
                        "description": "Is group"
                    },
                    "factor_auth": {
                        "type": "string",
                        "description": "Factor auth"
                    },
                    "factor_auth_interface": {
                        "type": "string",
                        "description": "Factor auth interface"
                    }
                }
            },
            "VoyagerUsersReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "role_id": {
                        "type": "string",
                        "description": "Role"
                    },
                    "user_belongsto_reports_to_relationship": {
                        "type": "integer",
                        "description": "Reports to"
                    },
                    "user_belongsto_role_relationship": {
                        "type": "integer",
                        "description": "Role"
                    },
                    "user_belongstomany_role_relationship": {
                        "type": "integer",
                        "description": "Roles"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "system_generated_password": {
                        "type": "string",
                        "description": "System generated password"
                    },
                    "pwd_last_changed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Pwd last changed",
                        "example": "2021-05-17 00:00"
                    },
                    "sugar_login": {
                        "type": "string",
                        "description": "Sugar login"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name"
                    },
                    "is_admin": {
                        "type": "string",
                        "description": "Is admin"
                    },
                    "external_auth_only": {
                        "type": "string",
                        "description": "External auth only"
                    },
                    "receive_notifications": {
                        "type": "string",
                        "description": "Receive notifications"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    },
                    "user_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "photo": {
                        "type": "string",
                        "description": "Photo"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department"
                    },
                    "phone_home": {
                        "type": "string",
                        "description": "Phone home"
                    },
                    "phone_mobile": {
                        "type": "string",
                        "description": "Phone mobile"
                    },
                    "phone_work": {
                        "type": "string",
                        "description": "Phone work"
                    },
                    "phone_other": {
                        "type": "string",
                        "description": "Phone other"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "address_street": {
                        "type": "string",
                        "description": "Address street"
                    },
                    "address_city": {
                        "type": "string",
                        "description": "Address city"
                    },
                    "address_state": {
                        "type": "string",
                        "description": "Address state"
                    },
                    "address_country": {
                        "type": "string",
                        "description": "Address country"
                    },
                    "address_postalcode": {
                        "type": "string",
                        "description": "Address postalcode"
                    },
                    "portal_only": {
                        "type": "string",
                        "description": "Portal only"
                    },
                    "show_on_employees": {
                        "type": "string",
                        "description": "Show on employees"
                    },
                    "employee_status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "reports_to_id": {
                        "type": "string",
                        "description": "Reports to"
                    },
                    "is_group": {
                        "type": "string",
                        "description": "Is group"
                    },
                    "factor_auth": {
                        "type": "string",
                        "description": "Factor auth"
                    },
                    "factor_auth_interface": {
                        "type": "string",
                        "description": "Factor auth interface"
                    }
                }
            },
            "VoyagerAowConditionsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "operator": {
                        "type": "string",
                        "description": "Operator"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "value_type": {
                        "enum": [
                            "value",
                            "field"
                        ],
                        "type": "string",
                        "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                    },
                    "field": {
                        "type": "string",
                        "description": "Field"
                    },
                    "condition_order": {
                        "type": "integer",
                        "description": "Condition order"
                    },
                    "aow_condition_belongsto_aow_workflow_relationship": {
                        "type": "integer",
                        "description": "Aow workflow"
                    },
                    "aow_workflow_id": {
                        "type": "string",
                        "description": "Aow workflow id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_condition_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_condition_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAowConditionsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "operator": {
                        "type": "string",
                        "description": "Operator"
                    },
                    "module_path": {
                        "type": "string",
                        "description": "Module path"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "value_type": {
                        "enum": [
                            "value",
                            "field"
                        ],
                        "type": "string",
                        "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                    },
                    "field": {
                        "type": "string",
                        "description": "Field"
                    },
                    "condition_order": {
                        "type": "integer",
                        "description": "Condition order"
                    },
                    "aow_condition_belongsto_aow_workflow_relationship": {
                        "type": "integer",
                        "description": "Aow workflow"
                    },
                    "aow_workflow_id": {
                        "type": "string",
                        "description": "Aow workflow id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_condition_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_condition_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerContactsBrowseResource": {
                "type": "object",
                "properties": {
                    "alt_address_country": {
                        "type": "string",
                        "description": "Alt address country"
                    },
                    "birthdate": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Birthdate",
                        "example": "2021-05-17"
                    },
                    "phone_work": {
                        "type": "string",
                        "description": "Phone work"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "salutation": {
                        "type": "string",
                        "description": "Salutation"
                    },
                    "do_not_call": {
                        "type": "string",
                        "description": "Do not call"
                    },
                    "joomla_account_id": {
                        "type": "string",
                        "description": "Joomla account id"
                    },
                    "date_reviewed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date reviewed",
                        "example": "2021-05-17"
                    },
                    "primary_address_postalcode": {
                        "type": "string",
                        "description": "Primary address postalcode"
                    },
                    "primary_address_state": {
                        "type": "string",
                        "description": "Primary address state"
                    },
                    "portal_user_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name"
                    },
                    "portal_account_disabled": {
                        "type": "string",
                        "description": "Portal account disabled"
                    },
                    "lawful_basis_source": {
                        "type": "string",
                        "description": "Lawful basis source"
                    },
                    "phone_other": {
                        "type": "string",
                        "description": "Phone other"
                    },
                    "primary_address_country": {
                        "type": "string",
                        "description": "Primary address country"
                    },
                    "primary_address_street": {
                        "type": "string",
                        "description": "Primary address street"
                    },
                    "primary_address_city": {
                        "type": "string",
                        "description": "Primary address city"
                    },
                    "photo": {
                        "type": "string",
                        "description": "Photo"
                    },
                    "lead_source": {
                        "type": "string",
                        "description": "Lead source"
                    },
                    "contact_belongstomany_users_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.users"
                    },
                    "alt_address_city": {
                        "type": "string",
                        "description": "Alt address city"
                    },
                    "reports_to_id": {
                        "type": "string",
                        "description": "Reports to id"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name"
                    },
                    "alt_address_postalcode": {
                        "type": "string",
                        "description": "Alt address postalcode"
                    },
                    "contact_belongsto_reports_to_relationship": {
                        "type": "integer",
                        "description": "Reports to"
                    },
                    "phone_mobile": {
                        "type": "string",
                        "description": "Phone mobile"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "alt_address_state": {
                        "type": "string",
                        "description": "Alt address state"
                    },
                    "assistant": {
                        "type": "string",
                        "description": "Assistant"
                    },
                    "alt_address_street": {
                        "type": "string",
                        "description": "Alt address street"
                    },
                    "assistant_phone": {
                        "type": "string",
                        "description": "Assistant phone"
                    },
                    "phone_home": {
                        "type": "string",
                        "description": "Phone home"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "contact_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "contact_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "contact_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "contact_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerContactsReadResource": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "alt_address_country": {
                        "type": "string",
                        "description": "Alt address country"
                    },
                    "phone_work": {
                        "type": "string",
                        "description": "Phone work"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "salutation": {
                        "type": "string",
                        "description": "Salutation"
                    },
                    "do_not_call": {
                        "type": "string",
                        "description": "Do not call"
                    },
                    "lawful_basis": {
                        "type": "string",
                        "description": "Lawful basis"
                    },
                    "joomla_account_id": {
                        "type": "string",
                        "description": "Joomla account id"
                    },
                    "date_reviewed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date reviewed",
                        "example": "2021-05-17"
                    },
                    "primary_address_postalcode": {
                        "type": "string",
                        "description": "Primary address postalcode"
                    },
                    "primary_address_state": {
                        "type": "string",
                        "description": "Primary address state"
                    },
                    "portal_user_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name"
                    },
                    "portal_account_disabled": {
                        "type": "string",
                        "description": "Portal account disabled"
                    },
                    "lawful_basis_source": {
                        "type": "string",
                        "description": "Lawful basis source"
                    },
                    "phone_other": {
                        "type": "string",
                        "description": "Phone other"
                    },
                    "primary_address_country": {
                        "type": "string",
                        "description": "Primary address country"
                    },
                    "primary_address_street": {
                        "type": "string",
                        "description": "Primary address street"
                    },
                    "primary_address_city": {
                        "type": "string",
                        "description": "Primary address city"
                    },
                    "photo": {
                        "type": "string",
                        "description": "Photo"
                    },
                    "lead_source": {
                        "type": "string",
                        "description": "Lead source"
                    },
                    "contact_belongsto_reports_to_relationship": {
                        "type": "integer",
                        "description": "Reports to"
                    },
                    "phone_home": {
                        "type": "string",
                        "description": "Phone home"
                    },
                    "assistant_phone": {
                        "type": "string",
                        "description": "Assistant phone"
                    },
                    "alt_address_street": {
                        "type": "string",
                        "description": "Alt address street"
                    },
                    "assistant": {
                        "type": "string",
                        "description": "Assistant"
                    },
                    "alt_address_state": {
                        "type": "string",
                        "description": "Alt address state"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "phone_mobile": {
                        "type": "string",
                        "description": "Phone mobile"
                    },
                    "alt_address_postalcode": {
                        "type": "string",
                        "description": "Alt address postalcode"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name"
                    },
                    "reports_to_id": {
                        "type": "string",
                        "description": "Reports to id"
                    },
                    "alt_address_city": {
                        "type": "string",
                        "description": "Alt address city"
                    },
                    "contact_belongstomany_users_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.users"
                    },
                    "birthdate": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Birthdate",
                        "example": "2021-05-17"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "contact_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "contact_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "contact_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "contact_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCallsUsersBrowseResource": {
                "type": "object",
                "properties": {
                    "calls_user_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "calls_user_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "User"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "accept_status": {
                        "enum": [
                            "none",
                            "Accept1",
                            "Accept2"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCallsUsersReadResource": {
                "type": "object",
                "properties": {
                    "calls_user_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "calls_user_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "User"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "accept_status": {
                        "enum": [
                            "none",
                            "Accept1",
                            "Accept2"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerAobhBusinesshoursBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "day": {
                        "enum": [
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday"
                        ],
                        "type": "string",
                        "description": "{\n    \"sunday\": \"Sunday\",\n    \"monday\": \"Monday\",\n    \"tuesday\": \"Tuesday\",\n    \"wednesday\": \"Wednesday\",\n    \"thursday\": \"Thursday\",\n    \"friday\": \"Friday\",\n    \"saturday\": \"Saturday\"\n}"
                    },
                    "closing_hours": {
                        "type": "string",
                        "description": "Closing hours"
                    },
                    "open_status": {
                        "type": "string",
                        "description": "Open status"
                    },
                    "opening_hours": {
                        "type": "string",
                        "description": "Opening hours"
                    },
                    "aobh_businesshour_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aobh_businesshour_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aobh_businesshour_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAobhBusinesshoursReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "day": {
                        "enum": [
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday"
                        ],
                        "type": "string",
                        "description": "{\n    \"sunday\": \"Sunday\",\n    \"monday\": \"Monday\",\n    \"tuesday\": \"Tuesday\",\n    \"wednesday\": \"Wednesday\",\n    \"thursday\": \"Thursday\",\n    \"friday\": \"Friday\",\n    \"saturday\": \"Saturday\"\n}"
                    },
                    "closing_hours": {
                        "type": "string",
                        "description": "Closing hours"
                    },
                    "open_status": {
                        "type": "string",
                        "description": "Open status"
                    },
                    "opening_hours": {
                        "type": "string",
                        "description": "Opening hours"
                    },
                    "aobh_businesshour_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aobh_businesshour_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aobh_businesshour_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCategoriesBrowseResource": {
                "type": "object",
                "properties": {
                    "order": {
                        "type": "string",
                        "description": "Order"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    }
                }
            },
            "VoyagerCategoriesReadResource": {
                "type": "object",
                "properties": {
                    "parent_id": {
                        "enum": [
                            ""
                        ],
                        "type": "string",
                        "description": "{\n    \"\": \"-- None --\"\n}"
                    },
                    "order": {
                        "type": "string",
                        "description": "Order"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerLinkedDocumentsBrowseResource": {
                "type": "object",
                "properties": {
                    "linked_document_belongsto_document_revision_relationship": {
                        "type": "integer",
                        "description": "Document revision"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "document_revision_id": {
                        "type": "string",
                        "description": "Document revision id"
                    },
                    "linked_document_belongsto_document_relationship": {
                        "type": "integer",
                        "description": "Document"
                    },
                    "document_id": {
                        "type": "string",
                        "description": "Document id"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerLinkedDocumentsReadResource": {
                "type": "object",
                "properties": {
                    "linked_document_belongsto_document_revision_relationship": {
                        "type": "integer",
                        "description": "Document revision"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "document_revision_id": {
                        "type": "string",
                        "description": "Document revision id"
                    },
                    "linked_document_belongsto_document_relationship": {
                        "type": "integer",
                        "description": "Document"
                    },
                    "document_id": {
                        "type": "string",
                        "description": "Document id"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerFavoritesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "favorite_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "favorite_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "favorite_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerFavoritesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "favorite_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "favorite_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "favorite_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSecuritygroupsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "noninheritable": {
                        "type": "string",
                        "description": "Noninheritable"
                    },
                    "securitygroup_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "securitygroup_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "securitygroup_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSecuritygroupsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "noninheritable": {
                        "type": "string",
                        "description": "Noninheritable"
                    },
                    "securitygroup_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "securitygroup_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "securitygroup_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAopCaseEventsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "aop_case_event_belongsto_case_relationship": {
                        "type": "integer",
                        "description": "Case"
                    },
                    "case_id": {
                        "type": "string",
                        "description": "Case id"
                    },
                    "aop_case_event_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aop_case_event_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aop_case_event_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAopCaseEventsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "aop_case_event_belongsto_case_relationship": {
                        "type": "integer",
                        "description": "Case"
                    },
                    "case_id": {
                        "type": "string",
                        "description": "Case id"
                    },
                    "aop_case_event_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aop_case_event_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aop_case_event_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosLineItemGroupsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Number"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "subtotal_tax_amount": {
                        "type": "integer",
                        "description": "Subtotal tax amount"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "aos_line_item_group_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "subtotal_tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal tax amount usdollar"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "aos_line_item_group_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_line_item_group_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_line_item_group_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosLineItemGroupsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Number"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "subtotal_tax_amount": {
                        "type": "integer",
                        "description": "Subtotal tax amount"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "aos_line_item_group_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "subtotal_tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal tax amount usdollar"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "aos_line_item_group_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_line_item_group_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_line_item_group_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerNotesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "file_mime_type": {
                        "type": "string",
                        "description": "File mime type"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "portal_flag": {
                        "type": "string",
                        "description": "Portal flag"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "note_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Filename"
                    },
                    "note_belongsto_parent_relationship": {
                        "type": "integer",
                        "description": "Parent"
                    },
                    "embed_flag": {
                        "type": "string",
                        "description": "Embed flag"
                    },
                    "note_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "note_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "note_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerNotesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Filename"
                    },
                    "file_mime_type": {
                        "type": "string",
                        "description": "File mime type"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "embed_flag": {
                        "type": "string",
                        "description": "Embed flag"
                    },
                    "note_belongsto_parent_relationship": {
                        "type": "integer",
                        "description": "Parent"
                    },
                    "note_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "portal_flag": {
                        "type": "string",
                        "description": "Portal flag"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "note_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "note_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "note_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAccountsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "account_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "industry": {
                        "type": "string",
                        "description": "Industry"
                    },
                    "annual_revenue": {
                        "type": "string",
                        "description": "Annual revenue"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "billing_address_street": {
                        "type": "string",
                        "description": "Billing address street"
                    },
                    "billing_address_city": {
                        "type": "string",
                        "description": "Billing address city"
                    },
                    "account_belongstomany_opportunities_relationship": {
                        "type": "integer",
                        "description": "Opportunities"
                    },
                    "account_belongstomany_bugs_relationship": {
                        "type": "integer",
                        "description": "Bugs"
                    },
                    "account_belongstomany_contacts_relationship": {
                        "type": "integer",
                        "description": "Contacts"
                    },
                    "billing_address_state": {
                        "type": "string",
                        "description": "Billing address state"
                    },
                    "billing_address_postalcode": {
                        "type": "string",
                        "description": "Billing address postalcode"
                    },
                    "billing_address_country": {
                        "type": "string",
                        "description": "Billing address country"
                    },
                    "rating": {
                        "type": "string",
                        "description": "Rating"
                    },
                    "phone_office": {
                        "type": "string",
                        "description": "Phone office"
                    },
                    "phone_alternate": {
                        "type": "string",
                        "description": "Phone alternate"
                    },
                    "website": {
                        "type": "string",
                        "description": "Website"
                    },
                    "ownership": {
                        "type": "string",
                        "description": "Ownership"
                    },
                    "employees": {
                        "type": "string",
                        "description": "Employees"
                    },
                    "ticker_symbol": {
                        "type": "string",
                        "description": "Ticker symbol"
                    },
                    "shipping_address_street": {
                        "type": "string",
                        "description": "Shipping address street"
                    },
                    "shipping_address_city": {
                        "type": "string",
                        "description": "Shipping address city"
                    },
                    "shipping_address_state": {
                        "type": "string",
                        "description": "Shipping address state"
                    },
                    "shipping_address_postalcode": {
                        "type": "string",
                        "description": "Shipping address postalcode"
                    },
                    "shipping_address_country": {
                        "type": "string",
                        "description": "Shipping address country"
                    },
                    "sic_code": {
                        "type": "string",
                        "description": "Sic code"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "account_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "account_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "account_belongsto_parent_relationship": {
                        "type": "integer",
                        "description": "Parent"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "account_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "account_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAccountsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "account_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "industry": {
                        "type": "string",
                        "description": "Industry"
                    },
                    "annual_revenue": {
                        "type": "string",
                        "description": "Annual revenue"
                    },
                    "phone_fax": {
                        "type": "string",
                        "description": "Phone fax"
                    },
                    "billing_address_street": {
                        "type": "string",
                        "description": "Billing address street"
                    },
                    "billing_address_city": {
                        "type": "string",
                        "description": "Billing address city"
                    },
                    "account_belongstomany_opportunities_relationship": {
                        "type": "integer",
                        "description": "Opportunities"
                    },
                    "account_belongstomany_bugs_relationship": {
                        "type": "integer",
                        "description": "Bugs"
                    },
                    "account_belongstomany_contacts_relationship": {
                        "type": "integer",
                        "description": "Contacts"
                    },
                    "billing_address_state": {
                        "type": "string",
                        "description": "Billing address state"
                    },
                    "billing_address_postalcode": {
                        "type": "string",
                        "description": "Billing address postalcode"
                    },
                    "billing_address_country": {
                        "type": "string",
                        "description": "Billing address country"
                    },
                    "rating": {
                        "type": "string",
                        "description": "Rating"
                    },
                    "phone_office": {
                        "type": "string",
                        "description": "Phone office"
                    },
                    "phone_alternate": {
                        "type": "string",
                        "description": "Phone alternate"
                    },
                    "website": {
                        "type": "string",
                        "description": "Website"
                    },
                    "ownership": {
                        "type": "string",
                        "description": "Ownership"
                    },
                    "employees": {
                        "type": "string",
                        "description": "Employees"
                    },
                    "ticker_symbol": {
                        "type": "string",
                        "description": "Ticker symbol"
                    },
                    "shipping_address_street": {
                        "type": "string",
                        "description": "Shipping address street"
                    },
                    "shipping_address_city": {
                        "type": "string",
                        "description": "Shipping address city"
                    },
                    "shipping_address_state": {
                        "type": "string",
                        "description": "Shipping address state"
                    },
                    "shipping_address_postalcode": {
                        "type": "string",
                        "description": "Shipping address postalcode"
                    },
                    "shipping_address_country": {
                        "type": "string",
                        "description": "Shipping address country"
                    },
                    "sic_code": {
                        "type": "string",
                        "description": "Sic code"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "account_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "account_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "account_belongsto_parent_relationship": {
                        "type": "integer",
                        "description": "Parent"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "account_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "account_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerInboundEmailBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "server_url": {
                        "type": "string",
                        "description": "Server url"
                    },
                    "email_user": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port"
                    },
                    "service": {
                        "type": "string",
                        "description": "Service"
                    },
                    "delete_seen": {
                        "type": "string",
                        "description": "Delete seen"
                    },
                    "mailbox_type": {
                        "enum": [
                            "MailboxType1",
                            "MailboxType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"MailboxType1\": \"MailboxType1\",\n    \"MailboxType2\": \"MailboxType2\"\n}"
                    },
                    "template_id": {
                        "type": "string",
                        "description": "Template id"
                    },
                    "group_id": {
                        "type": "string",
                        "description": "Group id"
                    },
                    "is_personal": {
                        "type": "string",
                        "description": "Is personal"
                    },
                    "groupfolder_id": {
                        "type": "string",
                        "description": "Groupfolder id"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "inbound_email_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "inbound_email_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerInboundEmailReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "server_url": {
                        "type": "string",
                        "description": "Server url"
                    },
                    "email_user": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port"
                    },
                    "service": {
                        "type": "string",
                        "description": "Service"
                    },
                    "mailbox": {
                        "type": "string",
                        "description": "Mailbox"
                    },
                    "delete_seen": {
                        "type": "string",
                        "description": "Delete seen"
                    },
                    "mailbox_type": {
                        "enum": [
                            "MailboxType1",
                            "MailboxType2"
                        ],
                        "type": "string",
                        "description": "{\n    \"MailboxType1\": \"MailboxType1\",\n    \"MailboxType2\": \"MailboxType2\"\n}"
                    },
                    "template_id": {
                        "type": "string",
                        "description": "Template id"
                    },
                    "group_id": {
                        "type": "string",
                        "description": "Group id"
                    },
                    "is_personal": {
                        "type": "string",
                        "description": "Is personal"
                    },
                    "groupfolder_id": {
                        "type": "string",
                        "description": "Groupfolder id"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "inbound_email_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "inbound_email_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerFoldersBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "folder_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "folder_belongsto_parent_folder_relationship": {
                        "type": "integer",
                        "description": "Parent folder"
                    },
                    "parent_folder": {
                        "type": "string",
                        "description": "Parent folder"
                    },
                    "has_child": {
                        "type": "string",
                        "description": "Has child"
                    },
                    "is_group": {
                        "type": "string",
                        "description": "Is group"
                    },
                    "is_dynamic": {
                        "type": "string",
                        "description": "Is dynamic"
                    },
                    "folder_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "folder_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "folder_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerFoldersReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "folder_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "folder_belongsto_parent_folder_relationship": {
                        "type": "integer",
                        "description": "Parent folder"
                    },
                    "parent_folder": {
                        "type": "string",
                        "description": "Parent folder"
                    },
                    "has_child": {
                        "type": "string",
                        "description": "Has child"
                    },
                    "is_group": {
                        "type": "string",
                        "description": "Is group"
                    },
                    "is_dynamic": {
                        "type": "string",
                        "description": "Is dynamic"
                    },
                    "dynamic_query": {
                        "type": "string",
                        "description": "Dynamic query"
                    },
                    "folder_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "folder_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "folder_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "orphaned": {
                        "type": "string",
                        "description": "Orphaned"
                    },
                    "last_synced": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last synced",
                        "example": "2021-05-17 00:00"
                    },
                    "date_sent_received": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date sent received",
                        "example": "2021-05-17 00:00"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "flagged": {
                        "type": "string",
                        "description": "Flagged"
                    },
                    "reply_to_status": {
                        "type": "string",
                        "description": "Reply to status"
                    },
                    "intent": {
                        "type": "string",
                        "description": "Intent"
                    },
                    "mailbox_id": {
                        "type": "string",
                        "description": "Mailbox id"
                    },
                    "parent_type": {
                        "enum": [
                            "opportunities",
                            "cases",
                            "leads",
                            "project",
                            "prospects",
                            "bugs",
                            "project_task",
                            "accounts"
                        ],
                        "type": "string",
                        "description": "{\n    \"opportunities\": \"opportunities\",\n    \"cases\": \"cases\",\n    \"leads\": \"leads\",\n    \"project\": \"project\",\n    \"prospects\": \"prospects\",\n    \"bugs\": \"bugs\",\n    \"project_task\": \"project_task\",\n    \"accounts\": \"accounts\"\n}"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "uid": {
                        "type": "string",
                        "description": "Uid"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category id"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "email_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "orphaned": {
                        "type": "string",
                        "description": "Orphaned"
                    },
                    "last_synced": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Last synced",
                        "example": "2021-05-17 00:00"
                    },
                    "date_sent_received": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date sent received",
                        "example": "2021-05-17 00:00"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "flagged": {
                        "type": "string",
                        "description": "Flagged"
                    },
                    "reply_to_status": {
                        "type": "string",
                        "description": "Reply to status"
                    },
                    "intent": {
                        "type": "string",
                        "description": "Intent"
                    },
                    "mailbox_id": {
                        "type": "string",
                        "description": "Mailbox id"
                    },
                    "parent_type": {
                        "enum": [
                            "opportunities",
                            "cases",
                            "leads",
                            "project",
                            "prospects",
                            "bugs",
                            "project_task",
                            "accounts"
                        ],
                        "type": "string",
                        "description": "{\n    \"opportunities\": \"opportunities\",\n    \"cases\": \"cases\",\n    \"leads\": \"leads\",\n    \"project\": \"project\",\n    \"prospects\": \"prospects\",\n    \"bugs\": \"bugs\",\n    \"project_task\": \"project_task\",\n    \"accounts\": \"accounts\"\n}"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "uid": {
                        "type": "string",
                        "description": "Uid"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category id"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "email_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosProductCategoriesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "is_parent": {
                        "type": "string",
                        "description": "Is parent"
                    },
                    "parent_category_id": {
                        "type": "string",
                        "description": "Parent category id"
                    },
                    "aos_product_category_belongsto_parent_relationship": {
                        "type": "integer",
                        "description": "Parent"
                    },
                    "aos_product_category_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_product_category_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_product_category_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosProductCategoriesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "is_parent": {
                        "type": "string",
                        "description": "Is parent"
                    },
                    "parent_category_id": {
                        "type": "string",
                        "description": "Parent category id"
                    },
                    "aos_product_category_belongsto_parent_relationship": {
                        "type": "integer",
                        "description": "Parent"
                    },
                    "aos_product_category_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_product_category_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_product_category_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerPagesBrowseResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "status": {
                        "enum": [
                            "INACTIVE",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerPagesReadResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "excerpt": {
                        "type": "string",
                        "description": "Excerpt"
                    },
                    "body": {
                        "type": "string",
                        "description": "Body"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    },
                    "meta_description": {
                        "type": "string",
                        "description": "Meta Description"
                    },
                    "meta_keywords": {
                        "type": "string",
                        "description": "Meta Keywords"
                    },
                    "status": {
                        "enum": [
                            "INACTIVE",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerAosPdfTemplatesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "active": {
                        "type": "string",
                        "description": "Active"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "margin_left": {
                        "type": "integer",
                        "description": "Margin left"
                    },
                    "margin_right": {
                        "type": "integer",
                        "description": "Margin right"
                    },
                    "margin_top": {
                        "type": "integer",
                        "description": "Margin top"
                    },
                    "margin_bottom": {
                        "type": "integer",
                        "description": "Margin bottom"
                    },
                    "margin_header": {
                        "type": "integer",
                        "description": "Margin header"
                    },
                    "margin_footer": {
                        "type": "integer",
                        "description": "Margin footer"
                    },
                    "page_size": {
                        "type": "string",
                        "description": "Page size"
                    },
                    "orientation": {
                        "enum": [
                            "LANDSCAPE",
                            "PORTRAIT"
                        ],
                        "type": "string",
                        "description": "{\n    \"LANDSCAPE\": \"LANDSCAPE\",\n    \"PORTRAIT\": \"PORTRAIT\"\n}"
                    },
                    "aos_pdf_template_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_pdf_template_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_pdf_template_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosPdfTemplatesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "active": {
                        "type": "string",
                        "description": "Active"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "pdfheader": {
                        "type": "string",
                        "description": "Pdfheader"
                    },
                    "pdffooter": {
                        "type": "string",
                        "description": "Pdffooter"
                    },
                    "margin_left": {
                        "type": "integer",
                        "description": "Margin left"
                    },
                    "margin_right": {
                        "type": "integer",
                        "description": "Margin right"
                    },
                    "margin_top": {
                        "type": "integer",
                        "description": "Margin top"
                    },
                    "margin_bottom": {
                        "type": "integer",
                        "description": "Margin bottom"
                    },
                    "margin_header": {
                        "type": "integer",
                        "description": "Margin header"
                    },
                    "margin_footer": {
                        "type": "integer",
                        "description": "Margin footer"
                    },
                    "page_size": {
                        "type": "string",
                        "description": "Page size"
                    },
                    "orientation": {
                        "enum": [
                            "LANDSCAPE",
                            "PORTRAIT"
                        ],
                        "type": "string",
                        "description": "{\n    \"LANDSCAPE\": \"LANDSCAPE\",\n    \"PORTRAIT\": \"PORTRAIT\"\n}"
                    },
                    "aos_pdf_template_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_pdf_template_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_pdf_template_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerProjectTaskBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration"
                    },
                    "time_finish": {
                        "type": "string",
                        "description": "Time finish"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "actual_effort": {
                        "type": "integer",
                        "description": "Actual effort"
                    },
                    "order_number": {
                        "type": "integer",
                        "description": "Order number"
                    },
                    "actual_duration": {
                        "type": "integer",
                        "description": "Actual duration"
                    },
                    "task_number": {
                        "type": "integer",
                        "description": "Task number"
                    },
                    "utilization": {
                        "type": "integer",
                        "description": "Utilization"
                    },
                    "estimated_effort": {
                        "type": "integer",
                        "description": "Estimated effort"
                    },
                    "relationship_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "time_start": {
                        "type": "string",
                        "description": "Time start"
                    },
                    "time_due": {
                        "type": "string",
                        "description": "Time due"
                    },
                    "milestone_flag": {
                        "type": "string",
                        "description": "Milestone flag"
                    },
                    "duration_unit": {
                        "enum": [
                            "Seconds",
                            "Hours",
                            "Days",
                            "Weeks",
                            "Months"
                        ],
                        "type": "string",
                        "description": "{\n    \"Seconds\": \"Seconds\",\n    \"Hours\": \"Hours\",\n    \"Days\": \"Days\",\n    \"Weeks\": \"Weeks\",\n    \"Months\": \"Months\"\n}"
                    },
                    "date_finish": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date finish",
                        "example": "2021-05-17"
                    },
                    "date_due": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date due",
                        "example": "2021-05-17"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "description": "Percent complete"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date start",
                        "example": "2021-05-17"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active",
                            "Planned"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\",\n    \"Planned\": \"Planned\"\n}"
                    },
                    "project_task_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "project_task_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "project_task_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerProjectTaskReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "actual_duration": {
                        "type": "integer",
                        "description": "Actual duration"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date start",
                        "example": "2021-05-17"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "description": "Percent complete"
                    },
                    "predecessors": {
                        "type": "string",
                        "description": "Predecessors"
                    },
                    "time_due": {
                        "type": "string",
                        "description": "Time due"
                    },
                    "time_start": {
                        "type": "string",
                        "description": "Time start"
                    },
                    "time_finish": {
                        "type": "string",
                        "description": "Time finish"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "actual_effort": {
                        "type": "integer",
                        "description": "Actual effort"
                    },
                    "order_number": {
                        "type": "integer",
                        "description": "Order number"
                    },
                    "task_number": {
                        "type": "integer",
                        "description": "Task number"
                    },
                    "utilization": {
                        "type": "integer",
                        "description": "Utilization"
                    },
                    "estimated_effort": {
                        "type": "integer",
                        "description": "Estimated effort"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration"
                    },
                    "relationship_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "milestone_flag": {
                        "type": "string",
                        "description": "Milestone flag"
                    },
                    "duration_unit": {
                        "enum": [
                            "Seconds",
                            "Hours",
                            "Days",
                            "Weeks",
                            "Months"
                        ],
                        "type": "string",
                        "description": "{\n    \"Seconds\": \"Seconds\",\n    \"Hours\": \"Hours\",\n    \"Days\": \"Days\",\n    \"Weeks\": \"Weeks\",\n    \"Months\": \"Months\"\n}"
                    },
                    "date_finish": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date finish",
                        "example": "2021-05-17"
                    },
                    "date_due": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date due",
                        "example": "2021-05-17"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active",
                            "Planned"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\",\n    \"Planned\": \"Planned\"\n}"
                    },
                    "project_task_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "project_task_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "project_task_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJjwgAreasBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "city": {
                        "type": "string",
                        "description": "City"
                    },
                    "state": {
                        "type": "string",
                        "description": "State"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country"
                    },
                    "jjwg_area_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_area_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_area_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerJjwgAreasReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "city": {
                        "type": "string",
                        "description": "City"
                    },
                    "state": {
                        "type": "string",
                        "description": "State"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country"
                    },
                    "jjwg_area_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "jjwg_area_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "jjwg_area_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSurveyquestionoptionsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "survey_question_id": {
                        "type": "string",
                        "description": "Survey question id"
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "Sort order"
                    },
                    "surveyquestionoption_belongsto_survey_question_relationship": {
                        "type": "integer",
                        "description": "Survey question"
                    },
                    "surveyquestionoption_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "surveyquestionoption_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "surveyquestionoption_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSurveyquestionoptionsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "survey_question_id": {
                        "type": "string",
                        "description": "Survey question id"
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "Sort order"
                    },
                    "surveyquestionoption_belongsto_survey_question_relationship": {
                        "type": "integer",
                        "description": "Survey question"
                    },
                    "surveyquestionoption_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "surveyquestionoption_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "surveyquestionoption_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCallsRescheduleBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "calls_reschedule_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "calls_reschedule_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "calls_reschedule_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "calls_reschedule_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCallsRescheduleReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "calls_reschedule_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "calls_reschedule_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "calls_reschedule_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "calls_reschedule_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailTemplatesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "text_only": {
                        "type": "string",
                        "description": "Text only"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "published": {
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "type": "string",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                    },
                    "email_template_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_template_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_template_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailTemplatesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject"
                    },
                    "body": {
                        "type": "string",
                        "description": "Body"
                    },
                    "body_html": {
                        "type": "string",
                        "description": "Body html"
                    },
                    "text_only": {
                        "type": "string",
                        "description": "Text only"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "published": {
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "type": "string",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                    },
                    "email_template_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_template_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_template_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorChartsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "aor_chart_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "y_field": {
                        "type": "integer",
                        "description": "Y field"
                    },
                    "x_field": {
                        "type": "integer",
                        "description": "X field"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_chart_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_chart_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorChartsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "aor_chart_belongsto_aor_report_relationship": {
                        "type": "integer",
                        "description": "Aor report"
                    },
                    "aor_report_id": {
                        "type": "string",
                        "description": "Aor report id"
                    },
                    "y_field": {
                        "type": "integer",
                        "description": "Y field"
                    },
                    "x_field": {
                        "type": "integer",
                        "description": "X field"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_chart_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_chart_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCallsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "duration_hours": {
                        "type": "integer",
                        "description": "Duration hours"
                    },
                    "duration_minutes": {
                        "type": "integer",
                        "description": "Duration minutes"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date start",
                        "example": "2021-05-17 00:00"
                    },
                    "date_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date end",
                        "example": "2021-05-17 00:00"
                    },
                    "direction": {
                        "enum": [
                            "INCOMING",
                            "OUTGOING"
                        ],
                        "type": "string",
                        "description": "{\n    \"INCOMING\": \"INCOMING\",\n    \"OUTGOING\": \"OUTGOING\"\n}"
                    },
                    "reminder_time": {
                        "type": "integer",
                        "description": "Reminder time"
                    },
                    "email_reminder_time": {
                        "type": "integer",
                        "description": "Email reminder time"
                    },
                    "email_reminder_sent": {
                        "type": "string",
                        "description": "Email reminder sent"
                    },
                    "outlook_id": {
                        "type": "string",
                        "description": "Outlook id"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive",
                            "Planned"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\",\n    \"Planned\": \"Planned\"\n}"
                    },
                    "call_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "call_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "call_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCallsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "duration_hours": {
                        "type": "integer",
                        "description": "Duration hours"
                    },
                    "duration_minutes": {
                        "type": "integer",
                        "description": "Duration minutes"
                    },
                    "date_start": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date start",
                        "example": "2021-05-17 00:00"
                    },
                    "date_end": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Date end",
                        "example": "2021-05-17 00:00"
                    },
                    "direction": {
                        "enum": [
                            "INCOMING",
                            "OUTGOING"
                        ],
                        "type": "string",
                        "description": "{\n    \"INCOMING\": \"INCOMING\",\n    \"OUTGOING\": \"OUTGOING\"\n}"
                    },
                    "reminder_time": {
                        "type": "integer",
                        "description": "Reminder time"
                    },
                    "email_reminder_time": {
                        "type": "integer",
                        "description": "Email reminder time"
                    },
                    "email_reminder_sent": {
                        "type": "string",
                        "description": "Email reminder sent"
                    },
                    "outlook_id": {
                        "type": "string",
                        "description": "Outlook id"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive",
                            "Planned"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\",\n    \"Planned\": \"Planned\"\n}"
                    },
                    "call_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "call_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "call_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerMeetingsUsersBrowseResource": {
                "type": "object",
                "properties": {
                    "meetings_user_belongsto_meeting_relationship": {
                        "type": "integer",
                        "description": "Meeting"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting id"
                    },
                    "meetings_user_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "User"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "accept_status": {
                        "enum": [
                            "none",
                            "Accept1",
                            "Accept2"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerMeetingsUsersReadResource": {
                "type": "object",
                "properties": {
                    "meetings_user_belongsto_meeting_relationship": {
                        "type": "integer",
                        "description": "Meeting"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting id"
                    },
                    "meetings_user_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "User"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "accept_status": {
                        "enum": [
                            "none",
                            "Accept1",
                            "Accept2"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerAowProcessedBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "aow_workflow_id": {
                        "type": "string",
                        "description": "Aow workflow id"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "aow_processed_belongsto_aow_workflow_relationship": {
                        "type": "integer",
                        "description": "Aow workflow"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_processed_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_processed_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAowProcessedReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "aow_workflow_id": {
                        "type": "string",
                        "description": "Aow workflow id"
                    },
                    "parent_id": {
                        "type": "string",
                        "description": "Parent id"
                    },
                    "parent_type": {
                        "type": "string",
                        "description": "Parent type"
                    },
                    "aow_processed_belongsto_aow_workflow_relationship": {
                        "type": "integer",
                        "description": "Aow workflow"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_processed_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_processed_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerDocumentRevisionsBrowseResource": {
                "type": "object",
                "properties": {
                    "change_log": {
                        "type": "string",
                        "description": "Change log"
                    },
                    "doc_id": {
                        "type": "string",
                        "description": "Doc id"
                    },
                    "document_revision_belongsto_document_relationship": {
                        "type": "integer",
                        "description": "Document"
                    },
                    "doc_type": {
                        "type": "string",
                        "description": "Doc type"
                    },
                    "file_ext": {
                        "type": "string",
                        "description": "File ext"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Filename"
                    },
                    "file_mime_type": {
                        "type": "string",
                        "description": "File mime type"
                    },
                    "doc_url": {
                        "type": "string",
                        "description": "Doc url"
                    },
                    "revision": {
                        "type": "string",
                        "description": "Revision"
                    },
                    "document_id": {
                        "type": "string",
                        "description": "Document id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "document_revision_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "document_revision_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerDocumentRevisionsReadResource": {
                "type": "object",
                "properties": {
                    "change_log": {
                        "type": "string",
                        "description": "Change log"
                    },
                    "doc_id": {
                        "type": "string",
                        "description": "Doc id"
                    },
                    "document_revision_belongsto_document_relationship": {
                        "type": "integer",
                        "description": "Document"
                    },
                    "doc_type": {
                        "type": "string",
                        "description": "Doc type"
                    },
                    "file_ext": {
                        "type": "string",
                        "description": "File ext"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Filename"
                    },
                    "file_mime_type": {
                        "type": "string",
                        "description": "File mime type"
                    },
                    "doc_url": {
                        "type": "string",
                        "description": "Doc url"
                    },
                    "revision": {
                        "type": "string",
                        "description": "Revision"
                    },
                    "document_id": {
                        "type": "string",
                        "description": "Document id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "document_revision_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "document_revision_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerOpportunitiesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "date_closed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date closed",
                        "example": "2021-05-17"
                    },
                    "next_step": {
                        "type": "string",
                        "description": "Next step"
                    },
                    "amount_usdollar": {
                        "type": "integer",
                        "description": "Amount usdollar"
                    },
                    "opportunity_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Amount"
                    },
                    "lead_source": {
                        "type": "string",
                        "description": "Lead source"
                    },
                    "opportunity_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "opportunity_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "probability": {
                        "type": "integer",
                        "description": "Probability"
                    },
                    "sales_stage": {
                        "enum": [
                            "Stage1",
                            "Stage2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                    },
                    "opportunity_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "opportunity_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "opportunity_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerOpportunitiesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "opportunity_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "next_step": {
                        "type": "string",
                        "description": "Next step"
                    },
                    "amount_usdollar": {
                        "type": "integer",
                        "description": "Amount usdollar"
                    },
                    "opportunity_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Amount"
                    },
                    "date_closed": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Date closed",
                        "example": "2021-05-17"
                    },
                    "lead_source": {
                        "type": "string",
                        "description": "Lead source"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "opportunity_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "probability": {
                        "type": "integer",
                        "description": "Probability"
                    },
                    "sales_stage": {
                        "enum": [
                            "Stage1",
                            "Stage2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                    },
                    "opportunity_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "opportunity_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "opportunity_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailCacheBrowseResource": {
                "type": "object",
                "properties": {
                    "mbox": {
                        "type": "string",
                        "description": "Mbox"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject"
                    },
                    "msgno": {
                        "type": "integer",
                        "description": "Msgno"
                    },
                    "answered": {
                        "type": "string",
                        "description": "Answered"
                    },
                    "draft": {
                        "type": "string",
                        "description": "Draft"
                    },
                    "seen": {
                        "type": "string",
                        "description": "Seen"
                    },
                    "toaddr": {
                        "type": "string",
                        "description": "Toaddr"
                    },
                    "flagged": {
                        "type": "string",
                        "description": "Flagged"
                    },
                    "fromaddr": {
                        "type": "string",
                        "description": "Fromaddr"
                    },
                    "recent": {
                        "type": "string",
                        "description": "Recent"
                    },
                    "mailsize": {
                        "type": "integer",
                        "description": "Mailsize"
                    },
                    "senddate": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Senddate",
                        "example": "2021-05-17 00:00"
                    },
                    "message_id": {
                        "type": "string",
                        "description": "Message id"
                    },
                    "imap_uid": {
                        "type": "integer",
                        "description": "Imap uid"
                    },
                    "email_cache_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_cache_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_cache_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerEmailCacheReadResource": {
                "type": "object",
                "properties": {
                    "mbox": {
                        "type": "string",
                        "description": "Mbox"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject"
                    },
                    "msgno": {
                        "type": "integer",
                        "description": "Msgno"
                    },
                    "answered": {
                        "type": "string",
                        "description": "Answered"
                    },
                    "draft": {
                        "type": "string",
                        "description": "Draft"
                    },
                    "seen": {
                        "type": "string",
                        "description": "Seen"
                    },
                    "toaddr": {
                        "type": "string",
                        "description": "Toaddr"
                    },
                    "flagged": {
                        "type": "string",
                        "description": "Flagged"
                    },
                    "fromaddr": {
                        "type": "string",
                        "description": "Fromaddr"
                    },
                    "recent": {
                        "type": "string",
                        "description": "Recent"
                    },
                    "mailsize": {
                        "type": "integer",
                        "description": "Mailsize"
                    },
                    "senddate": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Senddate",
                        "example": "2021-05-17 00:00"
                    },
                    "message_id": {
                        "type": "string",
                        "description": "Message id"
                    },
                    "imap_uid": {
                        "type": "integer",
                        "description": "Imap uid"
                    },
                    "email_cache_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "email_cache_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "email_cache_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSpotsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "spot_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "spot_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "spot_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerSpotsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "config": {
                        "type": "string",
                        "description": "Config"
                    },
                    "spot_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "spot_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "spot_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAowWorkflowBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "flow_module": {
                        "enum": [
                            "accounts",
                            "contacts"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\"\n}"
                    },
                    "flow_run_on": {
                        "type": "string",
                        "description": "Flow run on"
                    },
                    "run_when": {
                        "type": "string",
                        "description": "Run when"
                    },
                    "multiple_runs": {
                        "type": "string",
                        "description": "Multiple runs"
                    },
                    "run_on_import": {
                        "type": "string",
                        "description": "Run on import"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "aow_workflow_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_workflow_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_workflow_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAowWorkflowReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "flow_module": {
                        "enum": [
                            "accounts",
                            "contacts"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\"\n}"
                    },
                    "flow_run_on": {
                        "type": "string",
                        "description": "Flow run on"
                    },
                    "run_when": {
                        "type": "string",
                        "description": "Run when"
                    },
                    "multiple_runs": {
                        "type": "string",
                        "description": "Multiple runs"
                    },
                    "run_on_import": {
                        "type": "string",
                        "description": "Run on import"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "aow_workflow_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aow_workflow_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aow_workflow_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerImportMapsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "module": {
                        "type": "string",
                        "description": "Module"
                    },
                    "enclosure": {
                        "enum": [
                            " ",
                            ",",
                            ";",
                            "|"
                        ],
                        "type": "string",
                        "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                    },
                    "is_published": {
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "type": "string",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                    },
                    "default_values": {
                        "type": "string",
                        "description": "Default values"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source"
                    },
                    "delimiter": {
                        "enum": [
                            " ",
                            ",",
                            ";",
                            "|"
                        ],
                        "type": "string",
                        "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content"
                    },
                    "has_header": {
                        "type": "string",
                        "description": "Has header"
                    },
                    "import_map_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "import_map_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "import_map_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerImportMapsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "module": {
                        "type": "string",
                        "description": "Module"
                    },
                    "enclosure": {
                        "enum": [
                            " ",
                            ",",
                            ";",
                            "|"
                        ],
                        "type": "string",
                        "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                    },
                    "is_published": {
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "type": "string",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                    },
                    "default_values": {
                        "type": "string",
                        "description": "Default values"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source"
                    },
                    "delimiter": {
                        "enum": [
                            " ",
                            ",",
                            ";",
                            "|"
                        ],
                        "type": "string",
                        "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content"
                    },
                    "has_header": {
                        "type": "string",
                        "description": "Has header"
                    },
                    "import_map_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "import_map_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "import_map_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAopCaseUpdatesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "internal": {
                        "type": "string",
                        "description": "Internal"
                    },
                    "aop_case_update_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "aop_case_update_belongsto_case_relationship": {
                        "type": "integer",
                        "description": "Case"
                    },
                    "aop_case_update_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "case_id": {
                        "type": "string",
                        "description": "Case id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aop_case_update_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aop_case_update_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAopCaseUpdatesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "internal": {
                        "type": "string",
                        "description": "Internal"
                    },
                    "aop_case_update_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "aop_case_update_belongsto_case_relationship": {
                        "type": "integer",
                        "description": "Case"
                    },
                    "aop_case_update_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "case_id": {
                        "type": "string",
                        "description": "Case id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aop_case_update_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aop_case_update_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAowProcessedAowActionsBrowseResource": {
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "Pending",
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Pending\": \"Pending\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "aow_processed_aow_action_belongsto_aow_action_relationship": {
                        "type": "integer",
                        "description": "Aow action"
                    },
                    "aow_action_id": {
                        "type": "string",
                        "description": "Aow action id"
                    },
                    "aow_processed_aow_action_belongsto_aow_processed_relationship": {
                        "type": "integer",
                        "description": "Aow processed"
                    },
                    "aow_processed_id": {
                        "type": "string",
                        "description": "Aow processed id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerAowProcessedAowActionsReadResource": {
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "Pending",
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Pending\": \"Pending\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "aow_processed_aow_action_belongsto_aow_action_relationship": {
                        "type": "integer",
                        "description": "Aow action"
                    },
                    "aow_action_id": {
                        "type": "string",
                        "description": "Aow action id"
                    },
                    "aow_processed_aow_action_belongsto_aow_processed_relationship": {
                        "type": "integer",
                        "description": "Aow processed"
                    },
                    "aow_processed_id": {
                        "type": "string",
                        "description": "Aow processed id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCampaignTrkrsBrowseResource": {
                "type": "object",
                "properties": {
                    "tracker_name": {
                        "type": "string",
                        "description": "Tracker name"
                    },
                    "tracker_url": {
                        "type": "string",
                        "description": "Tracker url"
                    },
                    "tracker_key": {
                        "type": "integer",
                        "description": "Tracker key"
                    },
                    "is_optout": {
                        "type": "string",
                        "description": "Is optout"
                    },
                    "campaign_trkr_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "campaign_trkr_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "campaign_trkr_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCampaignTrkrsReadResource": {
                "type": "object",
                "properties": {
                    "tracker_name": {
                        "type": "string",
                        "description": "Tracker name"
                    },
                    "tracker_url": {
                        "type": "string",
                        "description": "Tracker url"
                    },
                    "tracker_key": {
                        "type": "integer",
                        "description": "Tracker key"
                    },
                    "is_optout": {
                        "type": "string",
                        "description": "Is optout"
                    },
                    "campaign_trkr_belongsto_campaign_relationship": {
                        "type": "integer",
                        "description": "Campaign"
                    },
                    "campaign_id": {
                        "type": "string",
                        "description": "Campaign id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "campaign_trkr_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "campaign_trkr_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerProjectBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "project_belongstomany_contacts_relationship": {
                        "type": "integer",
                        "description": "Contacts"
                    },
                    "project_belongstomany_accounts_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.accounts"
                    },
                    "project_belongstomany_opportunities_relationship": {
                        "type": "integer",
                        "description": "Opportunities"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "override_business_hours": {
                        "type": "string",
                        "description": "Override business hours"
                    },
                    "estimated_start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Estimated start date",
                        "example": "2021-05-17"
                    },
                    "project_belongstomany_bugs_relationship": {
                        "type": "integer",
                        "description": "Bugs"
                    },
                    "estimated_end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Estimated end date",
                        "example": "2021-05-17"
                    },
                    "project_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "project_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "project_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerProjectReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "project_belongstomany_contacts_relationship": {
                        "type": "integer",
                        "description": "Contacts"
                    },
                    "project_belongstomany_accounts_relationship": {
                        "type": "integer",
                        "description": "joy-voyager-crm::seeders.data_rows.accounts"
                    },
                    "project_belongstomany_opportunities_relationship": {
                        "type": "integer",
                        "description": "Opportunities"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "override_business_hours": {
                        "type": "string",
                        "description": "Override business hours"
                    },
                    "estimated_start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Estimated start date",
                        "example": "2021-05-17"
                    },
                    "project_belongstomany_bugs_relationship": {
                        "type": "integer",
                        "description": "Bugs"
                    },
                    "estimated_end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Estimated end date",
                        "example": "2021-05-17"
                    },
                    "project_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "project_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "project_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerPostsBrowseResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "status": {
                        "enum": [
                            "PUBLISHED",
                            "DRAFT",
                            "PENDING"
                        ],
                        "type": "string",
                        "description": "{\n    \"PUBLISHED\": \"published\",\n    \"DRAFT\": \"draft\",\n    \"PENDING\": \"pending\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "seo_title": {
                        "type": "string",
                        "description": "SEO Title"
                    },
                    "featured": {
                        "type": "string",
                        "description": "Featured"
                    }
                }
            },
            "VoyagerPostsReadResource": {
                "type": "object",
                "properties": {
                    "author_id": {
                        "type": "string",
                        "description": "Author"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "excerpt": {
                        "type": "string",
                        "description": "Excerpt"
                    },
                    "body": {
                        "type": "string",
                        "description": "Body"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    },
                    "meta_description": {
                        "type": "string",
                        "description": "Meta Description"
                    },
                    "meta_keywords": {
                        "type": "string",
                        "description": "Meta Keywords"
                    },
                    "status": {
                        "enum": [
                            "PUBLISHED",
                            "DRAFT",
                            "PENDING"
                        ],
                        "type": "string",
                        "description": "{\n    \"PUBLISHED\": \"published\",\n    \"DRAFT\": \"draft\",\n    \"PENDING\": \"pending\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "seo_title": {
                        "type": "string",
                        "description": "SEO Title"
                    },
                    "featured": {
                        "type": "string",
                        "description": "Featured"
                    }
                }
            },
            "VoyagerRemindersInviteesBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "reminder_id": {
                        "type": "string",
                        "description": "Reminder id"
                    },
                    "related_invitee_module_id": {
                        "type": "string",
                        "description": "Related invitee module id"
                    },
                    "reminders_invitee_belongsto_reminder_relationship": {
                        "type": "integer",
                        "description": "Reminder"
                    },
                    "related_invitee_module": {
                        "enum": [
                            "Module1",
                            "Module2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                    },
                    "reminders_invitee_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "reminders_invitee_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "reminders_invitee_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerRemindersInviteesReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "reminder_id": {
                        "type": "string",
                        "description": "Reminder id"
                    },
                    "related_invitee_module_id": {
                        "type": "string",
                        "description": "Related invitee module id"
                    },
                    "reminders_invitee_belongsto_reminder_relationship": {
                        "type": "integer",
                        "description": "Reminder"
                    },
                    "related_invitee_module": {
                        "enum": [
                            "Module1",
                            "Module2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                    },
                    "reminders_invitee_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "reminders_invitee_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "reminders_invitee_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerBugsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "bug_number": {
                        "type": "integer",
                        "description": "Bug number"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "resolution": {
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "type": "string",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                    },
                    "work_log": {
                        "type": "string",
                        "description": "Work log"
                    },
                    "found_in_release": {
                        "type": "string",
                        "description": "Found in release"
                    },
                    "bug_belongsto_found_in_release_relationship": {
                        "type": "integer",
                        "description": "Found in release"
                    },
                    "fixed_in_release": {
                        "type": "string",
                        "description": "Fixed in release"
                    },
                    "bug_belongsto_fixed_in_release_relationship": {
                        "type": "integer",
                        "description": "Fixed in release"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source"
                    },
                    "product_category": {
                        "type": "string",
                        "description": "Product category"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "bug_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "bug_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "bug_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerBugsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "bug_number": {
                        "type": "integer",
                        "description": "Bug number"
                    },
                    "type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "priority": {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                    },
                    "resolution": {
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "type": "string",
                        "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                    },
                    "work_log": {
                        "type": "string",
                        "description": "Work log"
                    },
                    "found_in_release": {
                        "type": "string",
                        "description": "Found in release"
                    },
                    "bug_belongsto_found_in_release_relationship": {
                        "type": "integer",
                        "description": "Found in release"
                    },
                    "fixed_in_release": {
                        "type": "string",
                        "description": "Fixed in release"
                    },
                    "bug_belongsto_fixed_in_release_relationship": {
                        "type": "integer",
                        "description": "Fixed in release"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source"
                    },
                    "product_category": {
                        "type": "string",
                        "description": "Product category"
                    },
                    "status": {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                    },
                    "bug_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "bug_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "bug_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCallsContactsBrowseResource": {
                "type": "object",
                "properties": {
                    "accept_status": {
                        "enum": [
                            "none",
                            "Accepted",
                            "Rejected"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Accepted\": \"Accepted\",\n    \"Rejected\": \"Rejected\"\n}"
                    },
                    "calls_contact_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                    },
                    "calls_contact_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "calls_contact_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "calls_contact_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerCallsContactsReadResource": {
                "type": "object",
                "properties": {
                    "accept_status": {
                        "enum": [
                            "none",
                            "Accepted",
                            "Rejected"
                        ],
                        "type": "string",
                        "description": "{\n    \"none\": \"none\",\n    \"Accepted\": \"Accepted\",\n    \"Rejected\": \"Rejected\"\n}"
                    },
                    "calls_contact_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "required": {
                        "enum": [
                            1,
                            0
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                    },
                    "calls_contact_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "calls_contact_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "calls_contact_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosContractsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "shipping_tax": {
                        "type": "string",
                        "description": "Shipping tax"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "customer_signed_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Customer signed date",
                        "example": "2021-05-17"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Start date",
                        "example": "2021-05-17"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "aos_contract_belongsto_contract_account_relationship": {
                        "type": "integer",
                        "description": "Contract account"
                    },
                    "reference_code": {
                        "type": "string",
                        "description": "Reference code"
                    },
                    "total_contract_value": {
                        "type": "integer",
                        "description": "Total contract value"
                    },
                    "shipping_amount": {
                        "type": "integer",
                        "description": "Shipping amount"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "total_contract_value_usdollar": {
                        "type": "integer",
                        "description": "Total contract value usdollar"
                    },
                    "shipping_tax_amt": {
                        "type": "integer",
                        "description": "Shipping tax amt"
                    },
                    "company_signed_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Company signed date",
                        "example": "2021-05-17"
                    },
                    "contract_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "renewal_reminder_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Renewal reminder date",
                        "example": "2021-05-17 00:00"
                    },
                    "opportunity_id": {
                        "type": "string",
                        "description": "Opportunity id"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "shipping_amount_usdollar": {
                        "type": "integer",
                        "description": "Shipping amount usdollar"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "aos_contract_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "End date",
                        "example": "2021-05-17"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "contract_account_id": {
                        "type": "string",
                        "description": "Contract account id"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "aos_contract_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "aos_contract_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "aos_contract_belongsto_opportunity_relationship": {
                        "type": "integer",
                        "description": "Opportunity"
                    },
                    "shipping_tax_amt_usdollar": {
                        "type": "integer",
                        "description": "Shipping tax amt usdollar"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "aos_contract_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_contract_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_contract_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAosContractsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "discount_amount_usdollar": {
                        "type": "integer",
                        "description": "Discount amount usdollar"
                    },
                    "subtotal_amount_usdollar": {
                        "type": "integer",
                        "description": "Subtotal amount usdollar"
                    },
                    "customer_signed_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Customer signed date",
                        "example": "2021-05-17"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Start date",
                        "example": "2021-05-17"
                    },
                    "total_amt_usdollar": {
                        "type": "integer",
                        "description": "Total amt usdollar"
                    },
                    "call_id": {
                        "type": "string",
                        "description": "Call id"
                    },
                    "aos_contract_belongsto_contract_account_relationship": {
                        "type": "integer",
                        "description": "Contract account"
                    },
                    "reference_code": {
                        "type": "string",
                        "description": "Reference code"
                    },
                    "total_contract_value": {
                        "type": "integer",
                        "description": "Total contract value"
                    },
                    "shipping_amount": {
                        "type": "integer",
                        "description": "Shipping amount"
                    },
                    "shipping_tax": {
                        "type": "string",
                        "description": "Shipping tax"
                    },
                    "total_contract_value_usdollar": {
                        "type": "integer",
                        "description": "Total contract value usdollar"
                    },
                    "shipping_tax_amt": {
                        "type": "integer",
                        "description": "Shipping tax amt"
                    },
                    "company_signed_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "Company signed date",
                        "example": "2021-05-17"
                    },
                    "contract_type": {
                        "enum": [
                            "Type1",
                            "Type2"
                        ],
                        "type": "string",
                        "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                    },
                    "subtotal_amount": {
                        "type": "integer",
                        "description": "Subtotal amount"
                    },
                    "total_amount": {
                        "type": "integer",
                        "description": "Total amount"
                    },
                    "renewal_reminder_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Renewal reminder date",
                        "example": "2021-05-17 00:00"
                    },
                    "opportunity_id": {
                        "type": "string",
                        "description": "Opportunity id"
                    },
                    "tax_amount_usdollar": {
                        "type": "integer",
                        "description": "Tax amount usdollar"
                    },
                    "status": {
                        "enum": [
                            "Inactive",
                            "Active"
                        ],
                        "type": "string",
                        "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                    },
                    "shipping_amount_usdollar": {
                        "type": "integer",
                        "description": "Shipping amount usdollar"
                    },
                    "currency_id": {
                        "type": "string",
                        "description": "Currency id"
                    },
                    "aos_contract_belongsto_contact_relationship": {
                        "type": "integer",
                        "description": "Contact"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                        "type": "date",
                        "description": "End date",
                        "example": "2021-05-17"
                    },
                    "tax_amount": {
                        "type": "integer",
                        "description": "Tax amount"
                    },
                    "contract_account_id": {
                        "type": "string",
                        "description": "Contract account id"
                    },
                    "total_amount_usdollar": {
                        "type": "integer",
                        "description": "Total amount usdollar"
                    },
                    "aos_contract_belongsto_call_relationship": {
                        "type": "integer",
                        "description": "Call"
                    },
                    "total_amt": {
                        "type": "integer",
                        "description": "Total amt"
                    },
                    "contact_id": {
                        "type": "string",
                        "description": "Contact id"
                    },
                    "aos_contract_belongsto_currency_relationship": {
                        "type": "integer",
                        "description": "Currency"
                    },
                    "aos_contract_belongsto_opportunity_relationship": {
                        "type": "integer",
                        "description": "Opportunity"
                    },
                    "shipping_tax_amt_usdollar": {
                        "type": "integer",
                        "description": "Shipping tax amt usdollar"
                    },
                    "discount_amount": {
                        "type": "integer",
                        "description": "Discount amount"
                    },
                    "aos_contract_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aos_contract_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aos_contract_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorReportsBrowseResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "graphs_per_row": {
                        "type": "integer",
                        "description": "Graphs per row"
                    },
                    "report_module": {
                        "enum": [
                            "accounts",
                            "contacts",
                            "opportunities"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                    },
                    "aor_report_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_report_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_report_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            },
            "VoyagerAorReportsReadResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "graphs_per_row": {
                        "type": "integer",
                        "description": "Graphs per row"
                    },
                    "report_module": {
                        "enum": [
                            "accounts",
                            "contacts",
                            "opportunities"
                        ],
                        "type": "string",
                        "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                    },
                    "aor_report_belongsto_assigned_user_relationship": {
                        "type": "integer",
                        "description": "Assigned user"
                    },
                    "assigned_user_id": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created at",
                        "example": "2021-05-17 00:00"
                    },
                    "aor_report_belongsto_created_by_relationship": {
                        "type": "integer",
                        "description": "Created by"
                    },
                    "created_by_id": {
                        "type": "string",
                        "description": "Created by"
                    },
                    "aor_report_belongsto_modified_by_relationship": {
                        "type": "integer",
                        "description": "Modified by"
                    },
                    "modified_by_id": {
                        "type": "string",
                        "description": "Modified by"
                    }
                }
            }
        },
        "requestBodies": {
            "VoyagerDocumentsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "document_name": {
                                    "type": "string",
                                    "description": "Document name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "template_type": {
                                    "enum": [
                                        "TemplateType1",
                                        "TemplateType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"TemplateType1\": \"TemplateType1\",\n    \"TemplateType2\": \"TemplateType2\"\n}"
                                },
                                "doc_url": {
                                    "type": "string",
                                    "description": "Doc url"
                                },
                                "doc_id": {
                                    "type": "string",
                                    "description": "Doc id"
                                },
                                "document_belongstomany_accounts_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.accounts"
                                },
                                "exp_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Exp date",
                                    "example": "2021-05-17"
                                },
                                "is_template": {
                                    "type": "string",
                                    "description": "Is template"
                                },
                                "document_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category id"
                                },
                                "document_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "doc_type": {
                                    "enum": [
                                        "DocType1",
                                        "DocType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"DocType1\": \"DocType1\",\n    \"DocType2\": \"DocType2\"\n}"
                                },
                                "status_id": {
                                    "type": "string",
                                    "description": "Status id"
                                },
                                "active_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Active date",
                                    "example": "2021-05-17"
                                },
                                "subcategory_id": {
                                    "type": "string",
                                    "description": "Subcategory id"
                                },
                                "document_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "document_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "document_belongsto_document_revision_relationship": {
                                    "type": "integer",
                                    "description": "Document revision"
                                },
                                "document_belongsto_related_doc_rev_relationship": {
                                    "type": "integer",
                                    "description": "Related doc rev"
                                },
                                "document_belongsto_related_doc_relationship": {
                                    "type": "integer",
                                    "description": "Related doc"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "document_revision_id": {
                                    "type": "string",
                                    "description": "Document revision id"
                                },
                                "related_doc_rev_id": {
                                    "type": "string",
                                    "description": "Related doc rev id"
                                },
                                "related_doc_id": {
                                    "type": "string",
                                    "description": "Related doc id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerDocumentsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "document_name": {
                                    "type": "string",
                                    "description": "Document name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "template_type": {
                                    "enum": [
                                        "TemplateType1",
                                        "TemplateType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"TemplateType1\": \"TemplateType1\",\n    \"TemplateType2\": \"TemplateType2\"\n}"
                                },
                                "doc_url": {
                                    "type": "string",
                                    "description": "Doc url"
                                },
                                "doc_id": {
                                    "type": "string",
                                    "description": "Doc id"
                                },
                                "document_belongstomany_accounts_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.accounts"
                                },
                                "exp_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Exp date",
                                    "example": "2021-05-17"
                                },
                                "is_template": {
                                    "type": "string",
                                    "description": "Is template"
                                },
                                "document_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category id"
                                },
                                "document_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "doc_type": {
                                    "enum": [
                                        "DocType1",
                                        "DocType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"DocType1\": \"DocType1\",\n    \"DocType2\": \"DocType2\"\n}"
                                },
                                "status_id": {
                                    "type": "string",
                                    "description": "Status id"
                                },
                                "active_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Active date",
                                    "example": "2021-05-17"
                                },
                                "subcategory_id": {
                                    "type": "string",
                                    "description": "Subcategory id"
                                },
                                "document_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "document_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "document_belongsto_document_revision_relationship": {
                                    "type": "integer",
                                    "description": "Document revision"
                                },
                                "document_belongsto_related_doc_rev_relationship": {
                                    "type": "integer",
                                    "description": "Related doc rev"
                                },
                                "document_belongsto_related_doc_relationship": {
                                    "type": "integer",
                                    "description": "Related doc"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "document_revision_id": {
                                    "type": "string",
                                    "description": "Document revision id"
                                },
                                "related_doc_rev_id": {
                                    "type": "string",
                                    "description": "Related doc rev id"
                                },
                                "related_doc_id": {
                                    "type": "string",
                                    "description": "Related doc id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerDocumentsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "document_name": {
                                    "type": "string",
                                    "description": "Document name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "template_type": {
                                    "enum": [
                                        "TemplateType1",
                                        "TemplateType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"TemplateType1\": \"TemplateType1\",\n    \"TemplateType2\": \"TemplateType2\"\n}"
                                },
                                "doc_url": {
                                    "type": "string",
                                    "description": "Doc url"
                                },
                                "doc_id": {
                                    "type": "string",
                                    "description": "Doc id"
                                },
                                "document_belongstomany_accounts_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.accounts"
                                },
                                "exp_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Exp date",
                                    "example": "2021-05-17"
                                },
                                "is_template": {
                                    "type": "string",
                                    "description": "Is template"
                                },
                                "document_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category id"
                                },
                                "document_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "doc_type": {
                                    "enum": [
                                        "DocType1",
                                        "DocType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"DocType1\": \"DocType1\",\n    \"DocType2\": \"DocType2\"\n}"
                                },
                                "status_id": {
                                    "type": "string",
                                    "description": "Status id"
                                },
                                "active_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Active date",
                                    "example": "2021-05-17"
                                },
                                "subcategory_id": {
                                    "type": "string",
                                    "description": "Subcategory id"
                                },
                                "document_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "document_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "document_belongsto_document_revision_relationship": {
                                    "type": "integer",
                                    "description": "Document revision"
                                },
                                "document_belongsto_related_doc_rev_relationship": {
                                    "type": "integer",
                                    "description": "Related doc rev"
                                },
                                "document_belongsto_related_doc_relationship": {
                                    "type": "integer",
                                    "description": "Related doc"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "document_revision_id": {
                                    "type": "string",
                                    "description": "Document revision id"
                                },
                                "related_doc_rev_id": {
                                    "type": "string",
                                    "description": "Related doc rev id"
                                },
                                "related_doc_id": {
                                    "type": "string",
                                    "description": "Related doc id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReleasesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "list_order": {
                                    "type": "integer",
                                    "description": "List order"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReleasesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "list_order": {
                                    "type": "integer",
                                    "description": "List order"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReleasesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "list_order": {
                                    "type": "integer",
                                    "description": "List order"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailMarketingStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email_marketing_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "reply_to_addr": {
                                    "type": "string",
                                    "description": "Reply to addr"
                                },
                                "inbound_email_id": {
                                    "type": "string",
                                    "description": "Inbound email id"
                                },
                                "all_prospect_lists": {
                                    "type": "string",
                                    "description": "All prospect lists"
                                },
                                "email_marketing_belongsto_outbound_email_relationship": {
                                    "type": "integer",
                                    "description": "Outbound email"
                                },
                                "email_marketing_belongsto_email_template_relationship": {
                                    "type": "integer",
                                    "description": "Email template"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "from_addr": {
                                    "type": "string",
                                    "description": "From addr"
                                },
                                "email_marketing_belongstomany_prospect_lists_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.prospect_lists"
                                },
                                "template_id": {
                                    "type": "string",
                                    "description": "Template id"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "from_name": {
                                    "type": "string",
                                    "description": "From name"
                                },
                                "outbound_email_id": {
                                    "type": "string",
                                    "description": "Outbound email id"
                                },
                                "email_marketing_belongsto_inbound_email_relationship": {
                                    "type": "integer",
                                    "description": "Inbound email"
                                },
                                "reply_to_name": {
                                    "type": "string",
                                    "description": "Reply to name"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailMarketingUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email_marketing_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "reply_to_addr": {
                                    "type": "string",
                                    "description": "Reply to addr"
                                },
                                "inbound_email_id": {
                                    "type": "string",
                                    "description": "Inbound email id"
                                },
                                "all_prospect_lists": {
                                    "type": "string",
                                    "description": "All prospect lists"
                                },
                                "email_marketing_belongsto_outbound_email_relationship": {
                                    "type": "integer",
                                    "description": "Outbound email"
                                },
                                "email_marketing_belongsto_email_template_relationship": {
                                    "type": "integer",
                                    "description": "Email template"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "from_addr": {
                                    "type": "string",
                                    "description": "From addr"
                                },
                                "email_marketing_belongstomany_prospect_lists_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.prospect_lists"
                                },
                                "template_id": {
                                    "type": "string",
                                    "description": "Template id"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "from_name": {
                                    "type": "string",
                                    "description": "From name"
                                },
                                "outbound_email_id": {
                                    "type": "string",
                                    "description": "Outbound email id"
                                },
                                "email_marketing_belongsto_inbound_email_relationship": {
                                    "type": "integer",
                                    "description": "Inbound email"
                                },
                                "reply_to_name": {
                                    "type": "string",
                                    "description": "Reply to name"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailMarketingSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email_marketing_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "reply_to_addr": {
                                    "type": "string",
                                    "description": "Reply to addr"
                                },
                                "inbound_email_id": {
                                    "type": "string",
                                    "description": "Inbound email id"
                                },
                                "all_prospect_lists": {
                                    "type": "string",
                                    "description": "All prospect lists"
                                },
                                "email_marketing_belongsto_outbound_email_relationship": {
                                    "type": "integer",
                                    "description": "Outbound email"
                                },
                                "email_marketing_belongsto_email_template_relationship": {
                                    "type": "integer",
                                    "description": "Email template"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "from_addr": {
                                    "type": "string",
                                    "description": "From addr"
                                },
                                "email_marketing_belongstomany_prospect_lists_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.prospect_lists"
                                },
                                "template_id": {
                                    "type": "string",
                                    "description": "Template id"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "from_name": {
                                    "type": "string",
                                    "description": "From name"
                                },
                                "outbound_email_id": {
                                    "type": "string",
                                    "description": "Outbound email id"
                                },
                                "email_marketing_belongsto_inbound_email_relationship": {
                                    "type": "integer",
                                    "description": "Inbound email"
                                },
                                "reply_to_name": {
                                    "type": "string",
                                    "description": "Reply to name"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosInvoicesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aos_invoice_belongsto_billing_contact_relationship": {
                                    "type": "integer",
                                    "description": "Billing contact"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "billing_contact_id": {
                                    "type": "string",
                                    "description": "Billing contact id"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "due_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Due date",
                                    "example": "2021-05-17"
                                },
                                "template_ddown_c": {
                                    "type": "string",
                                    "description": "Template ddown"
                                },
                                "quote_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Quote date",
                                    "example": "2021-05-17"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "aos_invoice_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "billing_account_id": {
                                    "type": "string",
                                    "description": "Billing account id"
                                },
                                "invoice_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Invoice date",
                                    "example": "2021-05-17"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "aos_invoice_belongsto_billing_account_relationship": {
                                    "type": "integer",
                                    "description": "Billing account"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "quote_number": {
                                    "type": "integer",
                                    "description": "Quote number"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aos_invoice_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosInvoicesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aos_invoice_belongsto_billing_contact_relationship": {
                                    "type": "integer",
                                    "description": "Billing contact"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "billing_contact_id": {
                                    "type": "string",
                                    "description": "Billing contact id"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "due_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Due date",
                                    "example": "2021-05-17"
                                },
                                "template_ddown_c": {
                                    "type": "string",
                                    "description": "Template ddown"
                                },
                                "quote_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Quote date",
                                    "example": "2021-05-17"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "aos_invoice_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "billing_account_id": {
                                    "type": "string",
                                    "description": "Billing account id"
                                },
                                "invoice_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Invoice date",
                                    "example": "2021-05-17"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "aos_invoice_belongsto_billing_account_relationship": {
                                    "type": "integer",
                                    "description": "Billing account"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "quote_number": {
                                    "type": "integer",
                                    "description": "Quote number"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aos_invoice_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosInvoicesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aos_invoice_belongsto_billing_contact_relationship": {
                                    "type": "integer",
                                    "description": "Billing contact"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "billing_contact_id": {
                                    "type": "string",
                                    "description": "Billing contact id"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "due_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Due date",
                                    "example": "2021-05-17"
                                },
                                "template_ddown_c": {
                                    "type": "string",
                                    "description": "Template ddown"
                                },
                                "quote_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Quote date",
                                    "example": "2021-05-17"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "aos_invoice_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "billing_account_id": {
                                    "type": "string",
                                    "description": "Billing account id"
                                },
                                "invoice_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Invoice date",
                                    "example": "2021-05-17"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "aos_invoice_belongsto_billing_account_relationship": {
                                    "type": "integer",
                                    "description": "Billing account"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "quote_number": {
                                    "type": "integer",
                                    "description": "Quote number"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aos_invoice_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEapmStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "consumer_key": {
                                    "type": "string",
                                    "description": "Consumer key"
                                },
                                "api_data": {
                                    "type": "string",
                                    "description": "Api data"
                                },
                                "validated": {
                                    "type": "string",
                                    "description": "Validated"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Password"
                                },
                                "oauth_secret": {
                                    "type": "string",
                                    "description": "Oauth secret"
                                },
                                "consumer_secret": {
                                    "type": "string",
                                    "description": "Consumer secret"
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Application"
                                },
                                "oauth_token": {
                                    "type": "string",
                                    "description": "Oauth token"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Url"
                                },
                                "eapm_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEapmUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "consumer_key": {
                                    "type": "string",
                                    "description": "Consumer key"
                                },
                                "api_data": {
                                    "type": "string",
                                    "description": "Api data"
                                },
                                "validated": {
                                    "type": "string",
                                    "description": "Validated"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Password"
                                },
                                "oauth_secret": {
                                    "type": "string",
                                    "description": "Oauth secret"
                                },
                                "consumer_secret": {
                                    "type": "string",
                                    "description": "Consumer secret"
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Application"
                                },
                                "oauth_token": {
                                    "type": "string",
                                    "description": "Oauth token"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Url"
                                },
                                "eapm_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEapmSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "consumer_key": {
                                    "type": "string",
                                    "description": "Consumer key"
                                },
                                "api_data": {
                                    "type": "string",
                                    "description": "Api data"
                                },
                                "validated": {
                                    "type": "string",
                                    "description": "Validated"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Password"
                                },
                                "oauth_secret": {
                                    "type": "string",
                                    "description": "Oauth secret"
                                },
                                "consumer_secret": {
                                    "type": "string",
                                    "description": "Consumer secret"
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Application"
                                },
                                "oauth_token": {
                                    "type": "string",
                                    "description": "Oauth token"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Url"
                                },
                                "eapm_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFpEventLocationsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "address_country": {
                                    "type": "string",
                                    "description": "Address country"
                                },
                                "capacity": {
                                    "type": "string",
                                    "description": "Capacity"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "Address"
                                },
                                "address_state": {
                                    "type": "string",
                                    "description": "Address state"
                                },
                                "address_city": {
                                    "type": "string",
                                    "description": "Address city"
                                },
                                "address_postalcode": {
                                    "type": "string",
                                    "description": "Address postalcode"
                                },
                                "fp_event_location_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFpEventLocationsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "address_country": {
                                    "type": "string",
                                    "description": "Address country"
                                },
                                "capacity": {
                                    "type": "string",
                                    "description": "Capacity"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "Address"
                                },
                                "address_state": {
                                    "type": "string",
                                    "description": "Address state"
                                },
                                "address_city": {
                                    "type": "string",
                                    "description": "Address city"
                                },
                                "address_postalcode": {
                                    "type": "string",
                                    "description": "Address postalcode"
                                },
                                "fp_event_location_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFpEventLocationsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "address_country": {
                                    "type": "string",
                                    "description": "Address country"
                                },
                                "capacity": {
                                    "type": "string",
                                    "description": "Capacity"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "Address"
                                },
                                "address_state": {
                                    "type": "string",
                                    "description": "Address state"
                                },
                                "address_city": {
                                    "type": "string",
                                    "description": "Address city"
                                },
                                "address_postalcode": {
                                    "type": "string",
                                    "description": "Address postalcode"
                                },
                                "fp_event_location_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCurrenciesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "symbol": {
                                    "type": "string",
                                    "description": "Symbol"
                                },
                                "iso4217": {
                                    "type": "string",
                                    "description": "Iso4217"
                                },
                                "decimal": {
                                    "type": "integer",
                                    "description": "Decimal"
                                },
                                "rounding": {
                                    "type": "integer",
                                    "description": "Rounding"
                                },
                                "conversion_rate": {
                                    "type": "integer",
                                    "description": "Conversion rate"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCurrenciesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "symbol": {
                                    "type": "string",
                                    "description": "Symbol"
                                },
                                "iso4217": {
                                    "type": "string",
                                    "description": "Iso4217"
                                },
                                "decimal": {
                                    "type": "integer",
                                    "description": "Decimal"
                                },
                                "rounding": {
                                    "type": "integer",
                                    "description": "Rounding"
                                },
                                "conversion_rate": {
                                    "type": "integer",
                                    "description": "Conversion rate"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCurrenciesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "symbol": {
                                    "type": "string",
                                    "description": "Symbol"
                                },
                                "iso4217": {
                                    "type": "string",
                                    "description": "Iso4217"
                                },
                                "decimal": {
                                    "type": "integer",
                                    "description": "Decimal"
                                },
                                "rounding": {
                                    "type": "integer",
                                    "description": "Rounding"
                                },
                                "conversion_rate": {
                                    "type": "integer",
                                    "description": "Conversion rate"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAlertsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "alert_belongsto_reminder_relationship": {
                                    "type": "integer",
                                    "description": "Reminder"
                                },
                                "reminder_id": {
                                    "type": "string",
                                    "description": "Reminder"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is read"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "target_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities",
                                        "leads"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"Accounts\",\n    \"contacts\": \"Contacts\",\n    \"opportunities\": \"Opportunities\",\n    \"leads\": \"Leads\"\n}"
                                },
                                "url_redirect": {
                                    "type": "string",
                                    "description": "Url redirect"
                                },
                                "alert_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAlertsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "alert_belongsto_reminder_relationship": {
                                    "type": "integer",
                                    "description": "Reminder"
                                },
                                "reminder_id": {
                                    "type": "string",
                                    "description": "Reminder"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is read"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "target_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities",
                                        "leads"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"Accounts\",\n    \"contacts\": \"Contacts\",\n    \"opportunities\": \"Opportunities\",\n    \"leads\": \"Leads\"\n}"
                                },
                                "url_redirect": {
                                    "type": "string",
                                    "description": "Url redirect"
                                },
                                "alert_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAlertsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "alert_belongsto_reminder_relationship": {
                                    "type": "integer",
                                    "description": "Reminder"
                                },
                                "reminder_id": {
                                    "type": "string",
                                    "description": "Reminder"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is read"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "target_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities",
                                        "leads"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"Accounts\",\n    \"contacts\": \"Contacts\",\n    \"opportunities\": \"Opportunities\",\n    \"leads\": \"Leads\"\n}"
                                },
                                "url_redirect": {
                                    "type": "string",
                                    "description": "Url redirect"
                                },
                                "alert_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAodIndexesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "last_optimised": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last optimised",
                                    "example": "2021-05-17 00:00"
                                },
                                "aod_index_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAodIndexesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "last_optimised": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last optimised",
                                    "example": "2021-05-17 00:00"
                                },
                                "aod_index_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAodIndexesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "last_optimised": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last optimised",
                                    "example": "2021-05-17 00:00"
                                },
                                "aod_index_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSecuritygroupsUsersStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "primary_group": {
                                    "type": "string",
                                    "description": "Primary group"
                                },
                                "noninheritable": {
                                    "type": "string",
                                    "description": "Noninheritable"
                                },
                                "securitygroups_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "securitygroups_user_belongsto_securitygroup_relationship": {
                                    "type": "integer",
                                    "description": "Securitygroup"
                                },
                                "securitygroup_id": {
                                    "type": "string",
                                    "description": "Securitygroup id"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSecuritygroupsUsersUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "primary_group": {
                                    "type": "string",
                                    "description": "Primary group"
                                },
                                "noninheritable": {
                                    "type": "string",
                                    "description": "Noninheritable"
                                },
                                "securitygroups_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "securitygroups_user_belongsto_securitygroup_relationship": {
                                    "type": "integer",
                                    "description": "Securitygroup"
                                },
                                "securitygroup_id": {
                                    "type": "string",
                                    "description": "Securitygroup id"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSecuritygroupsUsersSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "primary_group": {
                                    "type": "string",
                                    "description": "Primary group"
                                },
                                "noninheritable": {
                                    "type": "string",
                                    "description": "Noninheritable"
                                },
                                "securitygroups_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "securitygroups_user_belongsto_securitygroup_relationship": {
                                    "type": "integer",
                                    "description": "Securitygroup"
                                },
                                "securitygroup_id": {
                                    "type": "string",
                                    "description": "Securitygroup id"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorScheduledReportsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "last_run": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last run",
                                    "example": "2021-05-17 00:00"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "aor_scheduled_report_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "schedule": {
                                    "type": "string",
                                    "description": "Schedule"
                                },
                                "email_recipients": {
                                    "type": "string",
                                    "description": "Email recipients"
                                },
                                "aor_scheduled_report_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorScheduledReportsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "last_run": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last run",
                                    "example": "2021-05-17 00:00"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "aor_scheduled_report_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "schedule": {
                                    "type": "string",
                                    "description": "Schedule"
                                },
                                "email_recipients": {
                                    "type": "string",
                                    "description": "Email recipients"
                                },
                                "aor_scheduled_report_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorScheduledReportsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "last_run": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last run",
                                    "example": "2021-05-17 00:00"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "aor_scheduled_report_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "schedule": {
                                    "type": "string",
                                    "description": "Schedule"
                                },
                                "email_recipients": {
                                    "type": "string",
                                    "description": "Email recipients"
                                },
                                "aor_scheduled_report_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosQuotesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "terms_c": {
                                    "type": "string",
                                    "description": "Terms"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "billing_account_id": {
                                    "type": "string",
                                    "description": "Billing account id"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "stage": {
                                    "enum": [
                                        "Stage1",
                                        "Stage2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "approval_issue": {
                                    "type": "string",
                                    "description": "Approval issue"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "template_ddown_c": {
                                    "type": "string",
                                    "description": "Template ddown"
                                },
                                "aos_quote_belongsto_billing_contact_relationship": {
                                    "type": "integer",
                                    "description": "Billing contact"
                                },
                                "term": {
                                    "type": "string",
                                    "description": "Term"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "aos_quote_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Expiration",
                                    "example": "2021-05-17"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "billing_contact_id": {
                                    "type": "string",
                                    "description": "Billing contact id"
                                },
                                "aos_quote_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "approval_status": {
                                    "enum": [
                                        "Approval1",
                                        "Approval2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Approval1\": \"Approval1\",\n    \"Approval2\": \"Approval2\"\n}"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "invoice_status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_quote_belongsto_billing_account_relationship": {
                                    "type": "integer",
                                    "description": "Billing account"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "aos_quote_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosQuotesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "terms_c": {
                                    "type": "string",
                                    "description": "Terms"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "billing_account_id": {
                                    "type": "string",
                                    "description": "Billing account id"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "stage": {
                                    "enum": [
                                        "Stage1",
                                        "Stage2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "approval_issue": {
                                    "type": "string",
                                    "description": "Approval issue"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "template_ddown_c": {
                                    "type": "string",
                                    "description": "Template ddown"
                                },
                                "aos_quote_belongsto_billing_contact_relationship": {
                                    "type": "integer",
                                    "description": "Billing contact"
                                },
                                "term": {
                                    "type": "string",
                                    "description": "Term"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "aos_quote_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Expiration",
                                    "example": "2021-05-17"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "billing_contact_id": {
                                    "type": "string",
                                    "description": "Billing contact id"
                                },
                                "aos_quote_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "approval_status": {
                                    "enum": [
                                        "Approval1",
                                        "Approval2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Approval1\": \"Approval1\",\n    \"Approval2\": \"Approval2\"\n}"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "invoice_status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_quote_belongsto_billing_account_relationship": {
                                    "type": "integer",
                                    "description": "Billing account"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "aos_quote_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosQuotesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "terms_c": {
                                    "type": "string",
                                    "description": "Terms"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "billing_account_id": {
                                    "type": "string",
                                    "description": "Billing account id"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "stage": {
                                    "enum": [
                                        "Stage1",
                                        "Stage2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "approval_issue": {
                                    "type": "string",
                                    "description": "Approval issue"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "template_ddown_c": {
                                    "type": "string",
                                    "description": "Template ddown"
                                },
                                "aos_quote_belongsto_billing_contact_relationship": {
                                    "type": "integer",
                                    "description": "Billing contact"
                                },
                                "term": {
                                    "type": "string",
                                    "description": "Term"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "aos_quote_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Expiration",
                                    "example": "2021-05-17"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "billing_contact_id": {
                                    "type": "string",
                                    "description": "Billing contact id"
                                },
                                "aos_quote_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "approval_status": {
                                    "enum": [
                                        "Approval1",
                                        "Approval2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Approval1\": \"Approval1\",\n    \"Approval2\": \"Approval2\"\n}"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "invoice_status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_quote_belongsto_billing_account_relationship": {
                                    "type": "integer",
                                    "description": "Billing account"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "aos_quote_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAokKnowledgebaseBaseCategoriesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aok_knowledgebase_base_category_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAokKnowledgebaseBaseCategoriesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aok_knowledgebase_base_category_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAokKnowledgebaseBaseCategoriesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aok_knowledgebase_base_category_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsContactsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "meetings_contact_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "meetings_contact_belongsto_meeting_relationship": {
                                    "type": "integer",
                                    "description": "Meeting"
                                },
                                "meeting_id": {
                                    "type": "string",
                                    "description": "Meeting id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsContactsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "meetings_contact_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "meetings_contact_belongsto_meeting_relationship": {
                                    "type": "integer",
                                    "description": "Meeting"
                                },
                                "meeting_id": {
                                    "type": "string",
                                    "description": "Meeting id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsContactsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "meetings_contact_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "meetings_contact_belongsto_meeting_relationship": {
                                    "type": "integer",
                                    "description": "Meeting"
                                },
                                "meeting_id": {
                                    "type": "string",
                                    "description": "Meeting id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFpEventsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "decline_redirect": {
                                    "type": "string",
                                    "description": "Decline redirect"
                                },
                                "fp_events_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "invite_templates": {
                                    "type": "string",
                                    "description": "Invite templates"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Budget"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date end",
                                    "example": "2021-05-17"
                                },
                                "accept_redirect": {
                                    "type": "string",
                                    "description": "Accept redirect"
                                },
                                "activity_status_type": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "fp_event_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFpEventsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "decline_redirect": {
                                    "type": "string",
                                    "description": "Decline redirect"
                                },
                                "fp_events_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "invite_templates": {
                                    "type": "string",
                                    "description": "Invite templates"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Budget"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date end",
                                    "example": "2021-05-17"
                                },
                                "accept_redirect": {
                                    "type": "string",
                                    "description": "Accept redirect"
                                },
                                "activity_status_type": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "fp_event_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFpEventsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "decline_redirect": {
                                    "type": "string",
                                    "description": "Decline redirect"
                                },
                                "fp_events_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "invite_templates": {
                                    "type": "string",
                                    "description": "Invite templates"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Budget"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date end",
                                    "example": "2021-05-17"
                                },
                                "accept_redirect": {
                                    "type": "string",
                                    "description": "Accept redirect"
                                },
                                "activity_status_type": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "fp_event_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAmProjecttemplatesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "override_business_hours": {
                                    "type": "string",
                                    "description": "Override business hours"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Draft",
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Draft\": \"Draft\",\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "am_projecttemplate_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAmProjecttemplatesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "override_business_hours": {
                                    "type": "string",
                                    "description": "Override business hours"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Draft",
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Draft\": \"Draft\",\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "am_projecttemplate_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAmProjecttemplatesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "override_business_hours": {
                                    "type": "string",
                                    "description": "Override business hours"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Draft",
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Draft\": \"Draft\",\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "am_projecttemplate_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTemplatesectionlineStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "ord": {
                                    "type": "integer",
                                    "description": "Ord"
                                },
                                "grp": {
                                    "type": "string",
                                    "description": "Grp"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTemplatesectionlineUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "ord": {
                                    "type": "integer",
                                    "description": "Ord"
                                },
                                "grp": {
                                    "type": "string",
                                    "description": "Grp"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTemplatesectionlineSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "ord": {
                                    "type": "integer",
                                    "description": "Ord"
                                },
                                "grp": {
                                    "type": "string",
                                    "description": "Grp"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveysStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "submit_text": {
                                    "type": "string",
                                    "description": "Submit text"
                                },
                                "satisfied_text": {
                                    "type": "string",
                                    "description": "Satisfied text"
                                },
                                "neither_text": {
                                    "type": "string",
                                    "description": "Neither text"
                                },
                                "dissatisfied_text": {
                                    "type": "string",
                                    "description": "Dissatisfied text"
                                },
                                "status": {
                                    "enum": [
                                        "Published",
                                        "Draft"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Published\": \"Published\",\n    \"Draft\": \"Draft\"\n}"
                                },
                                "survey_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveysUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "submit_text": {
                                    "type": "string",
                                    "description": "Submit text"
                                },
                                "satisfied_text": {
                                    "type": "string",
                                    "description": "Satisfied text"
                                },
                                "neither_text": {
                                    "type": "string",
                                    "description": "Neither text"
                                },
                                "dissatisfied_text": {
                                    "type": "string",
                                    "description": "Dissatisfied text"
                                },
                                "status": {
                                    "enum": [
                                        "Published",
                                        "Draft"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Published\": \"Published\",\n    \"Draft\": \"Draft\"\n}"
                                },
                                "survey_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveysSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "submit_text": {
                                    "type": "string",
                                    "description": "Submit text"
                                },
                                "satisfied_text": {
                                    "type": "string",
                                    "description": "Satisfied text"
                                },
                                "neither_text": {
                                    "type": "string",
                                    "description": "Neither text"
                                },
                                "dissatisfied_text": {
                                    "type": "string",
                                    "description": "Dissatisfied text"
                                },
                                "status": {
                                    "enum": [
                                        "Published",
                                        "Draft"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Published\": \"Published\",\n    \"Draft\": \"Draft\"\n}"
                                },
                                "survey_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSchedulersStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "time_to": {
                                    "type": "string",
                                    "description": "Time to"
                                },
                                "date_time_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date time end",
                                    "example": "2021-05-17 00:00"
                                },
                                "job": {
                                    "type": "string",
                                    "description": "Job"
                                },
                                "time_from": {
                                    "type": "string",
                                    "description": "Time from"
                                },
                                "date_time_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date time start",
                                    "example": "2021-05-17 00:00"
                                },
                                "job_interval": {
                                    "type": "string",
                                    "description": "Job interval"
                                },
                                "catch_up": {
                                    "type": "string",
                                    "description": "Catch up"
                                },
                                "scheduler_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSchedulersUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "time_to": {
                                    "type": "string",
                                    "description": "Time to"
                                },
                                "date_time_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date time end",
                                    "example": "2021-05-17 00:00"
                                },
                                "job": {
                                    "type": "string",
                                    "description": "Job"
                                },
                                "time_from": {
                                    "type": "string",
                                    "description": "Time from"
                                },
                                "date_time_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date time start",
                                    "example": "2021-05-17 00:00"
                                },
                                "job_interval": {
                                    "type": "string",
                                    "description": "Job interval"
                                },
                                "catch_up": {
                                    "type": "string",
                                    "description": "Catch up"
                                },
                                "scheduler_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSchedulersSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "time_to": {
                                    "type": "string",
                                    "description": "Time to"
                                },
                                "date_time_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date time end",
                                    "example": "2021-05-17 00:00"
                                },
                                "job": {
                                    "type": "string",
                                    "description": "Job"
                                },
                                "time_from": {
                                    "type": "string",
                                    "description": "Time from"
                                },
                                "date_time_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date time start",
                                    "example": "2021-05-17 00:00"
                                },
                                "job_interval": {
                                    "type": "string",
                                    "description": "Job interval"
                                },
                                "catch_up": {
                                    "type": "string",
                                    "description": "Catch up"
                                },
                                "scheduler_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSavedSearchStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "search_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                                },
                                "contents": {
                                    "type": "string",
                                    "description": "Contents"
                                },
                                "saved_search_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSavedSearchUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "search_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                                },
                                "contents": {
                                    "type": "string",
                                    "description": "Contents"
                                },
                                "saved_search_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSavedSearchSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "search_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                                },
                                "contents": {
                                    "type": "string",
                                    "description": "Contents"
                                },
                                "saved_search_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProspectListsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "list_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "domain_name": {
                                    "type": "string",
                                    "description": "Domain name"
                                },
                                "prospect_list_belongstomany_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "prospect_list_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProspectListsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "list_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "domain_name": {
                                    "type": "string",
                                    "description": "Domain name"
                                },
                                "prospect_list_belongstomany_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "prospect_list_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProspectListsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "list_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "domain_name": {
                                    "type": "string",
                                    "description": "Domain name"
                                },
                                "prospect_list_belongstomany_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "prospect_list_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJobQueueStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "client": {
                                    "type": "string",
                                    "description": "Client"
                                },
                                "requeue": {
                                    "type": "string",
                                    "description": "Requeue"
                                },
                                "target": {
                                    "type": "string",
                                    "description": "Target"
                                },
                                "retry_count": {
                                    "type": "integer",
                                    "description": "Retry count"
                                },
                                "execute_time": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Execute time",
                                    "example": "2021-05-17 00:00"
                                },
                                "failure_count": {
                                    "type": "integer",
                                    "description": "Failure count"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "data": {
                                    "type": "string",
                                    "description": "Data"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Message"
                                },
                                "job_delay": {
                                    "type": "integer",
                                    "description": "Job delay"
                                },
                                "resolution": {
                                    "enum": [
                                        "Resolution1",
                                        "Resolution2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Pending",
                                        "Finished"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Pending\": \"Pending\",\n    \"Finished\": \"Finished\"\n}"
                                },
                                "job_queue_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "job_queue_belongsto_scheduler_relationship": {
                                    "type": "integer",
                                    "description": "Scheduler"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "scheduler_id": {
                                    "type": "string",
                                    "description": "Scheduler id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJobQueueUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "client": {
                                    "type": "string",
                                    "description": "Client"
                                },
                                "requeue": {
                                    "type": "string",
                                    "description": "Requeue"
                                },
                                "target": {
                                    "type": "string",
                                    "description": "Target"
                                },
                                "retry_count": {
                                    "type": "integer",
                                    "description": "Retry count"
                                },
                                "execute_time": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Execute time",
                                    "example": "2021-05-17 00:00"
                                },
                                "failure_count": {
                                    "type": "integer",
                                    "description": "Failure count"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "data": {
                                    "type": "string",
                                    "description": "Data"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Message"
                                },
                                "job_delay": {
                                    "type": "integer",
                                    "description": "Job delay"
                                },
                                "resolution": {
                                    "enum": [
                                        "Resolution1",
                                        "Resolution2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Pending",
                                        "Finished"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Pending\": \"Pending\",\n    \"Finished\": \"Finished\"\n}"
                                },
                                "job_queue_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "job_queue_belongsto_scheduler_relationship": {
                                    "type": "integer",
                                    "description": "Scheduler"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "scheduler_id": {
                                    "type": "string",
                                    "description": "Scheduler id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJobQueueSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "client": {
                                    "type": "string",
                                    "description": "Client"
                                },
                                "requeue": {
                                    "type": "string",
                                    "description": "Requeue"
                                },
                                "target": {
                                    "type": "string",
                                    "description": "Target"
                                },
                                "retry_count": {
                                    "type": "integer",
                                    "description": "Retry count"
                                },
                                "execute_time": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Execute time",
                                    "example": "2021-05-17 00:00"
                                },
                                "failure_count": {
                                    "type": "integer",
                                    "description": "Failure count"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "data": {
                                    "type": "string",
                                    "description": "Data"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Message"
                                },
                                "job_delay": {
                                    "type": "integer",
                                    "description": "Job delay"
                                },
                                "resolution": {
                                    "enum": [
                                        "Resolution1",
                                        "Resolution2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Pending",
                                        "Finished"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Pending\": \"Pending\",\n    \"Finished\": \"Finished\"\n}"
                                },
                                "job_queue_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "job_queue_belongsto_scheduler_relationship": {
                                    "type": "integer",
                                    "description": "Scheduler"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "scheduler_id": {
                                    "type": "string",
                                    "description": "Scheduler id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerOutboundEmailStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "smtp_from_name": {
                                    "type": "string",
                                    "description": "Smtp from name"
                                },
                                "smtp_from_addr": {
                                    "type": "string",
                                    "description": "Smtp from addr"
                                },
                                "mail_sendtype": {
                                    "type": "string",
                                    "description": "Mail sendtype"
                                },
                                "mail_smtptype": {
                                    "type": "string",
                                    "description": "Mail smtptype"
                                },
                                "mail_smtpserver": {
                                    "type": "string",
                                    "description": "Mail smtpserver"
                                },
                                "mail_smtpport": {
                                    "type": "string",
                                    "description": "Mail smtpport"
                                },
                                "mail_smtpuser": {
                                    "type": "string",
                                    "description": "Mail smtpuser"
                                },
                                "mail_smtppass": {
                                    "type": "string",
                                    "description": "Mail smtppass"
                                },
                                "mail_smtpauth_req": {
                                    "type": "string",
                                    "description": "Mail smtpauth req"
                                },
                                "mail_smtpssl": {
                                    "type": "string",
                                    "description": "Mail smtpssl"
                                },
                                "outbound_email_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerOutboundEmailUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "smtp_from_name": {
                                    "type": "string",
                                    "description": "Smtp from name"
                                },
                                "smtp_from_addr": {
                                    "type": "string",
                                    "description": "Smtp from addr"
                                },
                                "mail_sendtype": {
                                    "type": "string",
                                    "description": "Mail sendtype"
                                },
                                "mail_smtptype": {
                                    "type": "string",
                                    "description": "Mail smtptype"
                                },
                                "mail_smtpserver": {
                                    "type": "string",
                                    "description": "Mail smtpserver"
                                },
                                "mail_smtpport": {
                                    "type": "string",
                                    "description": "Mail smtpport"
                                },
                                "mail_smtpuser": {
                                    "type": "string",
                                    "description": "Mail smtpuser"
                                },
                                "mail_smtppass": {
                                    "type": "string",
                                    "description": "Mail smtppass"
                                },
                                "mail_smtpauth_req": {
                                    "type": "string",
                                    "description": "Mail smtpauth req"
                                },
                                "mail_smtpssl": {
                                    "type": "string",
                                    "description": "Mail smtpssl"
                                },
                                "outbound_email_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerOutboundEmailSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "smtp_from_name": {
                                    "type": "string",
                                    "description": "Smtp from name"
                                },
                                "smtp_from_addr": {
                                    "type": "string",
                                    "description": "Smtp from addr"
                                },
                                "mail_sendtype": {
                                    "type": "string",
                                    "description": "Mail sendtype"
                                },
                                "mail_smtptype": {
                                    "type": "string",
                                    "description": "Mail smtptype"
                                },
                                "mail_smtpserver": {
                                    "type": "string",
                                    "description": "Mail smtpserver"
                                },
                                "mail_smtpport": {
                                    "type": "string",
                                    "description": "Mail smtpport"
                                },
                                "mail_smtpuser": {
                                    "type": "string",
                                    "description": "Mail smtpuser"
                                },
                                "mail_smtppass": {
                                    "type": "string",
                                    "description": "Mail smtppass"
                                },
                                "mail_smtpauth_req": {
                                    "type": "string",
                                    "description": "Mail smtpauth req"
                                },
                                "mail_smtpssl": {
                                    "type": "string",
                                    "description": "Mail smtpssl"
                                },
                                "outbound_email_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCasesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "state": {
                                    "enum": [
                                        "Open",
                                        "Closed"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Open\": \"Open\",\n    \"Closed\": \"Closed\"\n}"
                                },
                                "case_number": {
                                    "type": "integer",
                                    "description": "Case number"
                                },
                                "work_log": {
                                    "type": "string",
                                    "description": "Work log"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "case_belongsto_account_relationship": {
                                    "type": "integer",
                                    "description": "Account"
                                },
                                "resolution": {
                                    "enum": [
                                        "Resolution1",
                                        "Resolution2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                                },
                                "contact_created_by_id": {
                                    "type": "string",
                                    "description": "Contact created by id"
                                },
                                "case_belongsto_contact_created_by_relationship": {
                                    "type": "integer",
                                    "description": "Contact created by"
                                },
                                "account_id": {
                                    "type": "string",
                                    "description": "Account id"
                                },
                                "priority": {
                                    "enum": [
                                        "Priority1",
                                        "Priority2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Priority1\": \"Priority1\",\n    \"Priority2\": \"Priority2\"\n}"
                                },
                                "case_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCasesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "state": {
                                    "enum": [
                                        "Open",
                                        "Closed"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Open\": \"Open\",\n    \"Closed\": \"Closed\"\n}"
                                },
                                "case_number": {
                                    "type": "integer",
                                    "description": "Case number"
                                },
                                "work_log": {
                                    "type": "string",
                                    "description": "Work log"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "case_belongsto_account_relationship": {
                                    "type": "integer",
                                    "description": "Account"
                                },
                                "resolution": {
                                    "enum": [
                                        "Resolution1",
                                        "Resolution2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                                },
                                "contact_created_by_id": {
                                    "type": "string",
                                    "description": "Contact created by id"
                                },
                                "case_belongsto_contact_created_by_relationship": {
                                    "type": "integer",
                                    "description": "Contact created by"
                                },
                                "account_id": {
                                    "type": "string",
                                    "description": "Account id"
                                },
                                "priority": {
                                    "enum": [
                                        "Priority1",
                                        "Priority2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Priority1\": \"Priority1\",\n    \"Priority2\": \"Priority2\"\n}"
                                },
                                "case_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCasesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "state": {
                                    "enum": [
                                        "Open",
                                        "Closed"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Open\": \"Open\",\n    \"Closed\": \"Closed\"\n}"
                                },
                                "case_number": {
                                    "type": "integer",
                                    "description": "Case number"
                                },
                                "work_log": {
                                    "type": "string",
                                    "description": "Work log"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "case_belongsto_account_relationship": {
                                    "type": "integer",
                                    "description": "Account"
                                },
                                "resolution": {
                                    "enum": [
                                        "Resolution1",
                                        "Resolution2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Resolution1\": \"Resolution1\",\n    \"Resolution2\": \"Resolution2\"\n}"
                                },
                                "contact_created_by_id": {
                                    "type": "string",
                                    "description": "Contact created by id"
                                },
                                "case_belongsto_contact_created_by_relationship": {
                                    "type": "integer",
                                    "description": "Contact created by"
                                },
                                "account_id": {
                                    "type": "string",
                                    "description": "Account id"
                                },
                                "priority": {
                                    "enum": [
                                        "Priority1",
                                        "Priority2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Priority1\": \"Priority1\",\n    \"Priority2\": \"Priority2\"\n}"
                                },
                                "case_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveyquestionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "description": "Sort order"
                                },
                                "happiness_question": {
                                    "type": "string",
                                    "description": "Happiness question"
                                },
                                "surveyquestion_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "surveyquestion_belongsto_survey_relationship": {
                                    "type": "integer",
                                    "description": "Survey"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "survey_id": {
                                    "type": "string",
                                    "description": "Survey id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveyquestionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "description": "Sort order"
                                },
                                "happiness_question": {
                                    "type": "string",
                                    "description": "Happiness question"
                                },
                                "surveyquestion_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "surveyquestion_belongsto_survey_relationship": {
                                    "type": "integer",
                                    "description": "Survey"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "survey_id": {
                                    "type": "string",
                                    "description": "Survey id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveyquestionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "description": "Sort order"
                                },
                                "happiness_question": {
                                    "type": "string",
                                    "description": "Happiness question"
                                },
                                "surveyquestion_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "surveyquestion_belongsto_survey_relationship": {
                                    "type": "integer",
                                    "description": "Survey"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "survey_id": {
                                    "type": "string",
                                    "description": "Survey id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAokKnowledgebaseStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship": {
                                    "type": "integer",
                                    "description": "Categories"
                                },
                                "revision": {
                                    "type": "string",
                                    "description": "Revision"
                                },
                                "additional_info": {
                                    "type": "string",
                                    "description": "Additional info"
                                },
                                "aok_knowledgebase_belongsto_user_id_c_relationship": {
                                    "type": "integer",
                                    "description": "User id"
                                },
                                "aok_knowledgebase_belongsto_user_id1_c_relationship": {
                                    "type": "integer",
                                    "description": "User id1"
                                },
                                "aok_knowledgebase_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "user_id1_c": {
                                    "type": "string",
                                    "description": "User id1"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "user_id_c": {
                                    "type": "string",
                                    "description": "User id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAokKnowledgebaseUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship": {
                                    "type": "integer",
                                    "description": "Categories"
                                },
                                "revision": {
                                    "type": "string",
                                    "description": "Revision"
                                },
                                "additional_info": {
                                    "type": "string",
                                    "description": "Additional info"
                                },
                                "aok_knowledgebase_belongsto_user_id_c_relationship": {
                                    "type": "integer",
                                    "description": "User id"
                                },
                                "aok_knowledgebase_belongsto_user_id1_c_relationship": {
                                    "type": "integer",
                                    "description": "User id1"
                                },
                                "aok_knowledgebase_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "user_id1_c": {
                                    "type": "string",
                                    "description": "User id1"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "user_id_c": {
                                    "type": "string",
                                    "description": "User id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAokKnowledgebaseSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aok_knowledgebase_belongstomany_aok_knowledgebase_base_category_relationship": {
                                    "type": "integer",
                                    "description": "Categories"
                                },
                                "revision": {
                                    "type": "string",
                                    "description": "Revision"
                                },
                                "additional_info": {
                                    "type": "string",
                                    "description": "Additional info"
                                },
                                "aok_knowledgebase_belongsto_user_id_c_relationship": {
                                    "type": "integer",
                                    "description": "User id"
                                },
                                "aok_knowledgebase_belongsto_user_id1_c_relationship": {
                                    "type": "integer",
                                    "description": "User id1"
                                },
                                "aok_knowledgebase_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "user_id1_c": {
                                    "type": "string",
                                    "description": "User id1"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "user_id_c": {
                                    "type": "string",
                                    "description": "User id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorConditionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "parameter": {
                                    "type": "string",
                                    "description": "joy-voyager-crm::seeders.data_rows.parameter"
                                },
                                "logic_op": {
                                    "enum": [
                                        "LogicOp1",
                                        "LogicOp2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"LogicOp1\": \"LogicOp1\",\n    \"LogicOp2\": \"LogicOp2\"\n}"
                                },
                                "value_type": {
                                    "enum": [
                                        "value",
                                        "field"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "condition_order": {
                                    "type": "integer",
                                    "description": "Condition order"
                                },
                                "parenthesis": {
                                    "type": "string",
                                    "description": "Parenthesis"
                                },
                                "aor_condition_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "operator": {
                                    "enum": [
                                        "Operator1",
                                        "Operator2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Operator1\": \"Operator1\",\n    \"Operator2\": \"Operator2\"\n}"
                                },
                                "module_path": {
                                    "enum": [
                                        "Module1",
                                        "Module2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                                },
                                "field": {
                                    "enum": [
                                        "Field1",
                                        "Field2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Field1\": \"Field1\",\n    \"Field2\": \"Field2\"\n}"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "aor_condition_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorConditionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "parameter": {
                                    "type": "string",
                                    "description": "joy-voyager-crm::seeders.data_rows.parameter"
                                },
                                "logic_op": {
                                    "enum": [
                                        "LogicOp1",
                                        "LogicOp2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"LogicOp1\": \"LogicOp1\",\n    \"LogicOp2\": \"LogicOp2\"\n}"
                                },
                                "value_type": {
                                    "enum": [
                                        "value",
                                        "field"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "condition_order": {
                                    "type": "integer",
                                    "description": "Condition order"
                                },
                                "parenthesis": {
                                    "type": "string",
                                    "description": "Parenthesis"
                                },
                                "aor_condition_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "operator": {
                                    "enum": [
                                        "Operator1",
                                        "Operator2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Operator1\": \"Operator1\",\n    \"Operator2\": \"Operator2\"\n}"
                                },
                                "module_path": {
                                    "enum": [
                                        "Module1",
                                        "Module2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                                },
                                "field": {
                                    "enum": [
                                        "Field1",
                                        "Field2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Field1\": \"Field1\",\n    \"Field2\": \"Field2\"\n}"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "aor_condition_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorConditionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "parameter": {
                                    "type": "string",
                                    "description": "joy-voyager-crm::seeders.data_rows.parameter"
                                },
                                "logic_op": {
                                    "enum": [
                                        "LogicOp1",
                                        "LogicOp2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"LogicOp1\": \"LogicOp1\",\n    \"LogicOp2\": \"LogicOp2\"\n}"
                                },
                                "value_type": {
                                    "enum": [
                                        "value",
                                        "field"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "condition_order": {
                                    "type": "integer",
                                    "description": "Condition order"
                                },
                                "parenthesis": {
                                    "type": "string",
                                    "description": "Parenthesis"
                                },
                                "aor_condition_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "operator": {
                                    "enum": [
                                        "Operator1",
                                        "Operator2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Operator1\": \"Operator1\",\n    \"Operator2\": \"Operator2\"\n}"
                                },
                                "module_path": {
                                    "enum": [
                                        "Module1",
                                        "Module2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                                },
                                "field": {
                                    "enum": [
                                        "Field1",
                                        "Field2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Field1\": \"Field1\",\n    \"Field2\": \"Field2\"\n}"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "aor_condition_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContactsBugsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "contact_role": {
                                    "type": "string",
                                    "description": "Contact role"
                                },
                                "contacts_bug_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "contacts_bug_belongsto_bug_relationship": {
                                    "type": "integer",
                                    "description": "Bug"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "bug_id": {
                                    "type": "string",
                                    "description": "Bug id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContactsBugsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "contact_role": {
                                    "type": "string",
                                    "description": "Contact role"
                                },
                                "contacts_bug_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "contacts_bug_belongsto_bug_relationship": {
                                    "type": "integer",
                                    "description": "Bug"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "bug_id": {
                                    "type": "string",
                                    "description": "Bug id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContactsBugsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "contact_role": {
                                    "type": "string",
                                    "description": "Contact role"
                                },
                                "contacts_bug_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "contacts_bug_belongsto_bug_relationship": {
                                    "type": "integer",
                                    "description": "Bug"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "bug_id": {
                                    "type": "string",
                                    "description": "Bug id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgMapsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "unit_type": {
                                    "enum": [
                                        "Mi",
                                        "Km"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Mi\": \"Mi\",\n    \"Km\": \"Km\"\n}"
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance"
                                },
                                "jjwg_map_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgMapsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "unit_type": {
                                    "enum": [
                                        "Mi",
                                        "Km"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Mi\": \"Mi\",\n    \"Km\": \"Km\"\n}"
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance"
                                },
                                "jjwg_map_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgMapsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "unit_type": {
                                    "enum": [
                                        "Mi",
                                        "Km"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Mi\": \"Mi\",\n    \"Km\": \"Km\"\n}"
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance"
                                },
                                "jjwg_map_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgAddressCacheStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "lat": {
                                    "type": "string",
                                    "description": "Lat"
                                },
                                "lng": {
                                    "type": "string",
                                    "description": "Lng"
                                },
                                "jjwg_address_cache_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgAddressCacheUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "lat": {
                                    "type": "string",
                                    "description": "Lat"
                                },
                                "lng": {
                                    "type": "string",
                                    "description": "Lng"
                                },
                                "jjwg_address_cache_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgAddressCacheSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "lat": {
                                    "type": "string",
                                    "description": "Lat"
                                },
                                "lng": {
                                    "type": "string",
                                    "description": "Lng"
                                },
                                "jjwg_address_cache_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorFieldsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "module_path": {
                                    "type": "string",
                                    "description": "Module path"
                                },
                                "aor_field_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "group_display": {
                                    "type": "integer",
                                    "description": "Group display"
                                },
                                "sort_by": {
                                    "type": "string",
                                    "description": "Sort by"
                                },
                                "field_order": {
                                    "type": "integer",
                                    "description": "Field order"
                                },
                                "field_function": {
                                    "type": "string",
                                    "description": "Field function"
                                },
                                "total": {
                                    "type": "string",
                                    "description": "Total"
                                },
                                "group_order": {
                                    "enum": [
                                        "asc",
                                        "desc"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                                },
                                "display": {
                                    "type": "string",
                                    "description": "Display"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                },
                                "sort_order": {
                                    "enum": [
                                        "asc",
                                        "desc"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Label"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Format"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Field"
                                },
                                "group_by": {
                                    "type": "string",
                                    "description": "Group by"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorFieldsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "module_path": {
                                    "type": "string",
                                    "description": "Module path"
                                },
                                "aor_field_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "group_display": {
                                    "type": "integer",
                                    "description": "Group display"
                                },
                                "sort_by": {
                                    "type": "string",
                                    "description": "Sort by"
                                },
                                "field_order": {
                                    "type": "integer",
                                    "description": "Field order"
                                },
                                "field_function": {
                                    "type": "string",
                                    "description": "Field function"
                                },
                                "total": {
                                    "type": "string",
                                    "description": "Total"
                                },
                                "group_order": {
                                    "enum": [
                                        "asc",
                                        "desc"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                                },
                                "display": {
                                    "type": "string",
                                    "description": "Display"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                },
                                "sort_order": {
                                    "enum": [
                                        "asc",
                                        "desc"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Label"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Format"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Field"
                                },
                                "group_by": {
                                    "type": "string",
                                    "description": "Group by"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorFieldsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "module_path": {
                                    "type": "string",
                                    "description": "Module path"
                                },
                                "aor_field_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "group_display": {
                                    "type": "integer",
                                    "description": "Group display"
                                },
                                "sort_by": {
                                    "type": "string",
                                    "description": "Sort by"
                                },
                                "field_order": {
                                    "type": "integer",
                                    "description": "Field order"
                                },
                                "field_function": {
                                    "type": "string",
                                    "description": "Field function"
                                },
                                "total": {
                                    "type": "string",
                                    "description": "Total"
                                },
                                "group_order": {
                                    "enum": [
                                        "asc",
                                        "desc"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                                },
                                "display": {
                                    "type": "string",
                                    "description": "Display"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                },
                                "sort_order": {
                                    "enum": [
                                        "asc",
                                        "desc"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"asc\": \"Asc\",\n    \"desc\": \"Desc\"\n}"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Label"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Format"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Field"
                                },
                                "group_by": {
                                    "type": "string",
                                    "description": "Group by"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowActionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                },
                                "action_order": {
                                    "type": "integer",
                                    "description": "Action order"
                                },
                                "parameters": {
                                    "type": "string",
                                    "description": "Parameters"
                                },
                                "aow_action_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                },
                                "action": {
                                    "enum": [
                                        "ActionType1",
                                        "ActionType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"ActionType1\": \"ActionType1\",\n    \"ActionType2\": \"ActionType2\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowActionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                },
                                "action_order": {
                                    "type": "integer",
                                    "description": "Action order"
                                },
                                "parameters": {
                                    "type": "string",
                                    "description": "Parameters"
                                },
                                "aow_action_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                },
                                "action": {
                                    "enum": [
                                        "ActionType1",
                                        "ActionType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"ActionType1\": \"ActionType1\",\n    \"ActionType2\": \"ActionType2\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowActionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                },
                                "action_order": {
                                    "type": "integer",
                                    "description": "Action order"
                                },
                                "parameters": {
                                    "type": "string",
                                    "description": "Parameters"
                                },
                                "aow_action_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                },
                                "action": {
                                    "enum": [
                                        "ActionType1",
                                        "ActionType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"ActionType1\": \"ActionType1\",\n    \"ActionType2\": \"ActionType2\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerLeadsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "do_not_call": {
                                    "type": "string",
                                    "description": "Do not call"
                                },
                                "lead_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "lawful_basis_source": {
                                    "type": "string",
                                    "description": "Lawful basis source"
                                },
                                "primary_address_postalcode": {
                                    "type": "string",
                                    "description": "Primary address postalcode"
                                },
                                "account_description": {
                                    "type": "string",
                                    "description": "Account description"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "primary_address_country": {
                                    "type": "string",
                                    "description": "Primary address country"
                                },
                                "portal_app": {
                                    "type": "string",
                                    "description": "Portal app"
                                },
                                "alt_address_street": {
                                    "type": "string",
                                    "description": "Alt address street"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "lead_source_description": {
                                    "type": "string",
                                    "description": "Lead source description"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "opportunity_name": {
                                    "type": "string",
                                    "description": "Opportunity name"
                                },
                                "alt_address_country": {
                                    "type": "string",
                                    "description": "Alt address country"
                                },
                                "status_description": {
                                    "type": "string",
                                    "description": "Status description"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "alt_address_state": {
                                    "type": "string",
                                    "description": "Alt address state"
                                },
                                "lead_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "alt_address_postalcode": {
                                    "type": "string",
                                    "description": "Alt address postalcode"
                                },
                                "primary_address_street": {
                                    "type": "string",
                                    "description": "Primary address street"
                                },
                                "primary_address_state": {
                                    "type": "string",
                                    "description": "Primary address state"
                                },
                                "opportunity_amount": {
                                    "type": "string",
                                    "description": "Opportunity amount"
                                },
                                "portal_name": {
                                    "type": "string",
                                    "description": "Portal name"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "assistant_phone": {
                                    "type": "string",
                                    "description": "Assistant phone"
                                },
                                "assistant": {
                                    "type": "string",
                                    "description": "Assistant"
                                },
                                "account_name": {
                                    "type": "string",
                                    "description": "Account name"
                                },
                                "converted": {
                                    "type": "string",
                                    "description": "Converted"
                                },
                                "lead_belongsto_account_relationship": {
                                    "type": "integer",
                                    "description": "Account"
                                },
                                "primary_address_city": {
                                    "type": "string",
                                    "description": "Primary address city"
                                },
                                "birthdate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Birthdate",
                                    "example": "2021-05-17"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "account_id": {
                                    "type": "string",
                                    "description": "Account id"
                                },
                                "salutation": {
                                    "type": "string",
                                    "description": "Salutation"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to id"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "lead_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "website": {
                                    "type": "string",
                                    "description": "Website"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "lead_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "refered_by": {
                                    "type": "string",
                                    "description": "Refered by"
                                },
                                "date_reviewed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date reviewed",
                                    "example": "2021-05-17"
                                },
                                "alt_address_city": {
                                    "type": "string",
                                    "description": "Alt address city"
                                },
                                "lawful_basis": {
                                    "type": "string",
                                    "description": "Lawful basis"
                                },
                                "lead_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerLeadsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "do_not_call": {
                                    "type": "string",
                                    "description": "Do not call"
                                },
                                "lead_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "lawful_basis_source": {
                                    "type": "string",
                                    "description": "Lawful basis source"
                                },
                                "primary_address_postalcode": {
                                    "type": "string",
                                    "description": "Primary address postalcode"
                                },
                                "account_description": {
                                    "type": "string",
                                    "description": "Account description"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "primary_address_country": {
                                    "type": "string",
                                    "description": "Primary address country"
                                },
                                "portal_app": {
                                    "type": "string",
                                    "description": "Portal app"
                                },
                                "alt_address_street": {
                                    "type": "string",
                                    "description": "Alt address street"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "lead_source_description": {
                                    "type": "string",
                                    "description": "Lead source description"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "opportunity_name": {
                                    "type": "string",
                                    "description": "Opportunity name"
                                },
                                "alt_address_country": {
                                    "type": "string",
                                    "description": "Alt address country"
                                },
                                "status_description": {
                                    "type": "string",
                                    "description": "Status description"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "alt_address_state": {
                                    "type": "string",
                                    "description": "Alt address state"
                                },
                                "lead_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "alt_address_postalcode": {
                                    "type": "string",
                                    "description": "Alt address postalcode"
                                },
                                "primary_address_street": {
                                    "type": "string",
                                    "description": "Primary address street"
                                },
                                "primary_address_state": {
                                    "type": "string",
                                    "description": "Primary address state"
                                },
                                "opportunity_amount": {
                                    "type": "string",
                                    "description": "Opportunity amount"
                                },
                                "portal_name": {
                                    "type": "string",
                                    "description": "Portal name"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "assistant_phone": {
                                    "type": "string",
                                    "description": "Assistant phone"
                                },
                                "assistant": {
                                    "type": "string",
                                    "description": "Assistant"
                                },
                                "account_name": {
                                    "type": "string",
                                    "description": "Account name"
                                },
                                "converted": {
                                    "type": "string",
                                    "description": "Converted"
                                },
                                "lead_belongsto_account_relationship": {
                                    "type": "integer",
                                    "description": "Account"
                                },
                                "primary_address_city": {
                                    "type": "string",
                                    "description": "Primary address city"
                                },
                                "birthdate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Birthdate",
                                    "example": "2021-05-17"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "account_id": {
                                    "type": "string",
                                    "description": "Account id"
                                },
                                "salutation": {
                                    "type": "string",
                                    "description": "Salutation"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to id"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "lead_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "website": {
                                    "type": "string",
                                    "description": "Website"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "lead_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "refered_by": {
                                    "type": "string",
                                    "description": "Refered by"
                                },
                                "date_reviewed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date reviewed",
                                    "example": "2021-05-17"
                                },
                                "alt_address_city": {
                                    "type": "string",
                                    "description": "Alt address city"
                                },
                                "lawful_basis": {
                                    "type": "string",
                                    "description": "Lawful basis"
                                },
                                "lead_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerLeadsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "do_not_call": {
                                    "type": "string",
                                    "description": "Do not call"
                                },
                                "lead_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "lawful_basis_source": {
                                    "type": "string",
                                    "description": "Lawful basis source"
                                },
                                "primary_address_postalcode": {
                                    "type": "string",
                                    "description": "Primary address postalcode"
                                },
                                "account_description": {
                                    "type": "string",
                                    "description": "Account description"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "primary_address_country": {
                                    "type": "string",
                                    "description": "Primary address country"
                                },
                                "portal_app": {
                                    "type": "string",
                                    "description": "Portal app"
                                },
                                "alt_address_street": {
                                    "type": "string",
                                    "description": "Alt address street"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "lead_source_description": {
                                    "type": "string",
                                    "description": "Lead source description"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "opportunity_name": {
                                    "type": "string",
                                    "description": "Opportunity name"
                                },
                                "alt_address_country": {
                                    "type": "string",
                                    "description": "Alt address country"
                                },
                                "status_description": {
                                    "type": "string",
                                    "description": "Status description"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "alt_address_state": {
                                    "type": "string",
                                    "description": "Alt address state"
                                },
                                "lead_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "alt_address_postalcode": {
                                    "type": "string",
                                    "description": "Alt address postalcode"
                                },
                                "primary_address_street": {
                                    "type": "string",
                                    "description": "Primary address street"
                                },
                                "primary_address_state": {
                                    "type": "string",
                                    "description": "Primary address state"
                                },
                                "opportunity_amount": {
                                    "type": "string",
                                    "description": "Opportunity amount"
                                },
                                "portal_name": {
                                    "type": "string",
                                    "description": "Portal name"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "assistant_phone": {
                                    "type": "string",
                                    "description": "Assistant phone"
                                },
                                "assistant": {
                                    "type": "string",
                                    "description": "Assistant"
                                },
                                "account_name": {
                                    "type": "string",
                                    "description": "Account name"
                                },
                                "converted": {
                                    "type": "string",
                                    "description": "Converted"
                                },
                                "lead_belongsto_account_relationship": {
                                    "type": "integer",
                                    "description": "Account"
                                },
                                "primary_address_city": {
                                    "type": "string",
                                    "description": "Primary address city"
                                },
                                "birthdate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Birthdate",
                                    "example": "2021-05-17"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "account_id": {
                                    "type": "string",
                                    "description": "Account id"
                                },
                                "salutation": {
                                    "type": "string",
                                    "description": "Salutation"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to id"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "lead_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "website": {
                                    "type": "string",
                                    "description": "Website"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "lead_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "refered_by": {
                                    "type": "string",
                                    "description": "Refered by"
                                },
                                "date_reviewed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date reviewed",
                                    "example": "2021-05-17"
                                },
                                "alt_address_city": {
                                    "type": "string",
                                    "description": "Alt address city"
                                },
                                "lawful_basis": {
                                    "type": "string",
                                    "description": "Lawful basis"
                                },
                                "lead_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersSignaturesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Signature"
                                },
                                "signature_html": {
                                    "type": "string",
                                    "description": "Signature html"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersSignaturesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Signature"
                                },
                                "signature_html": {
                                    "type": "string",
                                    "description": "Signature html"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersSignaturesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Signature"
                                },
                                "signature_html": {
                                    "type": "string",
                                    "description": "Signature html"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRemindersStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "timer_popup": {
                                    "type": "string",
                                    "description": "Timer popup"
                                },
                                "timer_email": {
                                    "type": "string",
                                    "description": "Timer email"
                                },
                                "date_willexecute": {
                                    "type": "integer",
                                    "description": "Date willexecute"
                                },
                                "popup_viewed": {
                                    "type": "string",
                                    "description": "Popup viewed"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "email_sent": {
                                    "type": "string",
                                    "description": "Email sent"
                                },
                                "popup": {
                                    "type": "string",
                                    "description": "Popup"
                                },
                                "reminder_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRemindersUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "timer_popup": {
                                    "type": "string",
                                    "description": "Timer popup"
                                },
                                "timer_email": {
                                    "type": "string",
                                    "description": "Timer email"
                                },
                                "date_willexecute": {
                                    "type": "integer",
                                    "description": "Date willexecute"
                                },
                                "popup_viewed": {
                                    "type": "string",
                                    "description": "Popup viewed"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "email_sent": {
                                    "type": "string",
                                    "description": "Email sent"
                                },
                                "popup": {
                                    "type": "string",
                                    "description": "Popup"
                                },
                                "reminder_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRemindersSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "timer_popup": {
                                    "type": "string",
                                    "description": "Timer popup"
                                },
                                "timer_email": {
                                    "type": "string",
                                    "description": "Timer email"
                                },
                                "date_willexecute": {
                                    "type": "integer",
                                    "description": "Date willexecute"
                                },
                                "popup_viewed": {
                                    "type": "string",
                                    "description": "Popup viewed"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "email_sent": {
                                    "type": "string",
                                    "description": "Email sent"
                                },
                                "popup": {
                                    "type": "string",
                                    "description": "Popup"
                                },
                                "reminder_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAmTasktemplatesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "duration": {
                                    "type": "integer",
                                    "description": "Duration"
                                },
                                "task_number": {
                                    "type": "integer",
                                    "description": "Task number"
                                },
                                "estimated_effort": {
                                    "type": "integer",
                                    "description": "Estimated effort"
                                },
                                "utilization": {
                                    "type": "string",
                                    "description": "Utilization"
                                },
                                "predecessors": {
                                    "type": "integer",
                                    "description": "Predecessors"
                                },
                                "milestone_flag": {
                                    "type": "string",
                                    "description": "Milestone flag"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "order_number": {
                                    "type": "integer",
                                    "description": "Order number"
                                },
                                "relationship_type": {
                                    "enum": [
                                        "FS"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"FS\": \"FS\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Not Started",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Not Started\": \"Not Started\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "am_tasktemplate_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAmTasktemplatesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "duration": {
                                    "type": "integer",
                                    "description": "Duration"
                                },
                                "task_number": {
                                    "type": "integer",
                                    "description": "Task number"
                                },
                                "estimated_effort": {
                                    "type": "integer",
                                    "description": "Estimated effort"
                                },
                                "utilization": {
                                    "type": "string",
                                    "description": "Utilization"
                                },
                                "predecessors": {
                                    "type": "integer",
                                    "description": "Predecessors"
                                },
                                "milestone_flag": {
                                    "type": "string",
                                    "description": "Milestone flag"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "order_number": {
                                    "type": "integer",
                                    "description": "Order number"
                                },
                                "relationship_type": {
                                    "enum": [
                                        "FS"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"FS\": \"FS\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Not Started",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Not Started\": \"Not Started\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "am_tasktemplate_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAmTasktemplatesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "duration": {
                                    "type": "integer",
                                    "description": "Duration"
                                },
                                "task_number": {
                                    "type": "integer",
                                    "description": "Task number"
                                },
                                "estimated_effort": {
                                    "type": "integer",
                                    "description": "Estimated effort"
                                },
                                "utilization": {
                                    "type": "string",
                                    "description": "Utilization"
                                },
                                "predecessors": {
                                    "type": "integer",
                                    "description": "Predecessors"
                                },
                                "milestone_flag": {
                                    "type": "string",
                                    "description": "Milestone flag"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "order_number": {
                                    "type": "integer",
                                    "description": "Order number"
                                },
                                "relationship_type": {
                                    "enum": [
                                        "FS"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"FS\": \"FS\"\n}"
                                },
                                "status": {
                                    "enum": [
                                        "Not Started",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Not Started\": \"Not Started\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "am_tasktemplate_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgMarkersStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country"
                                },
                                "jjwg_maps_lat": {
                                    "type": "string",
                                    "description": "Jjwg maps lat"
                                },
                                "jjwg_maps_lng": {
                                    "type": "string",
                                    "description": "Jjwg maps lng"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City"
                                },
                                "marker_image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "jjwg_marker_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgMarkersUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country"
                                },
                                "jjwg_maps_lat": {
                                    "type": "string",
                                    "description": "Jjwg maps lat"
                                },
                                "jjwg_maps_lng": {
                                    "type": "string",
                                    "description": "Jjwg maps lng"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City"
                                },
                                "marker_image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "jjwg_marker_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgMarkersSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country"
                                },
                                "jjwg_maps_lat": {
                                    "type": "string",
                                    "description": "Jjwg maps lat"
                                },
                                "jjwg_maps_lng": {
                                    "type": "string",
                                    "description": "Jjwg maps lng"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City"
                                },
                                "marker_image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "jjwg_marker_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCampaignsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content"
                                },
                                "objective": {
                                    "type": "string",
                                    "description": "Objective"
                                },
                                "expected_revenue": {
                                    "type": "integer",
                                    "description": "Expected revenue"
                                },
                                "impressions": {
                                    "type": "integer",
                                    "description": "Impressions"
                                },
                                "campaign_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "currency": {
                                    "type": "string",
                                    "description": "Currency"
                                },
                                "tracker_text": {
                                    "type": "string",
                                    "description": "Tracker text"
                                },
                                "campaign_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "survey_id": {
                                    "type": "string",
                                    "description": "Survey id"
                                },
                                "tracker_key": {
                                    "type": "integer",
                                    "description": "Tracker key"
                                },
                                "frequency": {
                                    "enum": [
                                        "every minute",
                                        "hourly",
                                        "daily",
                                        "weekly",
                                        "mothly",
                                        "yearly"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"every minute\": \"Every minute\",\n    \"hourly\": \"Hourly\",\n    \"daily\": \"Daily\",\n    \"weekly\": \"Weekly\",\n    \"mothly\": \"Mothly\",\n    \"yearly\": \"Yearly\"\n}"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "End date",
                                    "example": "2021-05-17"
                                },
                                "actual_cost": {
                                    "type": "integer",
                                    "description": "Actual cost"
                                },
                                "campaign_belongsto_survey_relationship": {
                                    "type": "integer",
                                    "description": "Survey"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Budget"
                                },
                                "refer_url": {
                                    "type": "string",
                                    "description": "Refer url"
                                },
                                "tracker_count": {
                                    "type": "integer",
                                    "description": "Tracker count"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Start date",
                                    "example": "2021-05-17"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "campaign_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCampaignsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content"
                                },
                                "objective": {
                                    "type": "string",
                                    "description": "Objective"
                                },
                                "expected_revenue": {
                                    "type": "integer",
                                    "description": "Expected revenue"
                                },
                                "impressions": {
                                    "type": "integer",
                                    "description": "Impressions"
                                },
                                "campaign_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "currency": {
                                    "type": "string",
                                    "description": "Currency"
                                },
                                "tracker_text": {
                                    "type": "string",
                                    "description": "Tracker text"
                                },
                                "campaign_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "survey_id": {
                                    "type": "string",
                                    "description": "Survey id"
                                },
                                "tracker_key": {
                                    "type": "integer",
                                    "description": "Tracker key"
                                },
                                "frequency": {
                                    "enum": [
                                        "every minute",
                                        "hourly",
                                        "daily",
                                        "weekly",
                                        "mothly",
                                        "yearly"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"every minute\": \"Every minute\",\n    \"hourly\": \"Hourly\",\n    \"daily\": \"Daily\",\n    \"weekly\": \"Weekly\",\n    \"mothly\": \"Mothly\",\n    \"yearly\": \"Yearly\"\n}"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "End date",
                                    "example": "2021-05-17"
                                },
                                "actual_cost": {
                                    "type": "integer",
                                    "description": "Actual cost"
                                },
                                "campaign_belongsto_survey_relationship": {
                                    "type": "integer",
                                    "description": "Survey"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Budget"
                                },
                                "refer_url": {
                                    "type": "string",
                                    "description": "Refer url"
                                },
                                "tracker_count": {
                                    "type": "integer",
                                    "description": "Tracker count"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Start date",
                                    "example": "2021-05-17"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "campaign_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCampaignsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content"
                                },
                                "objective": {
                                    "type": "string",
                                    "description": "Objective"
                                },
                                "expected_revenue": {
                                    "type": "integer",
                                    "description": "Expected revenue"
                                },
                                "impressions": {
                                    "type": "integer",
                                    "description": "Impressions"
                                },
                                "campaign_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "currency": {
                                    "type": "string",
                                    "description": "Currency"
                                },
                                "tracker_text": {
                                    "type": "string",
                                    "description": "Tracker text"
                                },
                                "campaign_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "survey_id": {
                                    "type": "string",
                                    "description": "Survey id"
                                },
                                "tracker_key": {
                                    "type": "integer",
                                    "description": "Tracker key"
                                },
                                "frequency": {
                                    "enum": [
                                        "every minute",
                                        "hourly",
                                        "daily",
                                        "weekly",
                                        "mothly",
                                        "yearly"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"every minute\": \"Every minute\",\n    \"hourly\": \"Hourly\",\n    \"daily\": \"Daily\",\n    \"weekly\": \"Weekly\",\n    \"mothly\": \"Mothly\",\n    \"yearly\": \"Yearly\"\n}"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "End date",
                                    "example": "2021-05-17"
                                },
                                "actual_cost": {
                                    "type": "integer",
                                    "description": "Actual cost"
                                },
                                "campaign_belongsto_survey_relationship": {
                                    "type": "integer",
                                    "description": "Survey"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Budget"
                                },
                                "refer_url": {
                                    "type": "string",
                                    "description": "Refer url"
                                },
                                "tracker_count": {
                                    "type": "integer",
                                    "description": "Tracker count"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Start date",
                                    "example": "2021-05-17"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "campaign_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Password"
                                },
                                "type": {
                                    "enum": [
                                        "Sugar",
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Sugar\": \"Sugar\",\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "gsync_id": {
                                    "type": "string",
                                    "description": "Gsync id"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date start",
                                    "example": "2021-05-17 00:00"
                                },
                                "join_url": {
                                    "type": "string",
                                    "description": "Join url"
                                },
                                "email_reminder_sent": {
                                    "type": "string",
                                    "description": "Email reminder sent"
                                },
                                "status": {
                                    "enum": [
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Planned\": \"Planned\"\n}"
                                },
                                "repeat_until": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Repeat until",
                                    "example": "2021-05-17"
                                },
                                "email_reminder_time": {
                                    "type": "integer",
                                    "description": "Email reminder time"
                                },
                                "outlook_id": {
                                    "type": "string",
                                    "description": "Outlook id"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "description": "Sequence"
                                },
                                "host_url": {
                                    "type": "string",
                                    "description": "Host url"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date end",
                                    "example": "2021-05-17 00:00"
                                },
                                "repeat_count": {
                                    "type": "integer",
                                    "description": "Repeat count"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "repeat_dow": {
                                    "type": "integer",
                                    "description": "Repeat dow"
                                },
                                "creator": {
                                    "type": "string",
                                    "description": "Creator"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "reminder_time": {
                                    "type": "integer",
                                    "description": "Reminder time"
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "External id"
                                },
                                "gsync_lastsync": {
                                    "type": "integer",
                                    "description": "Gsync lastsync"
                                },
                                "displayed_url": {
                                    "type": "string",
                                    "description": "Displayed url"
                                },
                                "meeting_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Password"
                                },
                                "type": {
                                    "enum": [
                                        "Sugar",
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Sugar\": \"Sugar\",\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "gsync_id": {
                                    "type": "string",
                                    "description": "Gsync id"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date start",
                                    "example": "2021-05-17 00:00"
                                },
                                "join_url": {
                                    "type": "string",
                                    "description": "Join url"
                                },
                                "email_reminder_sent": {
                                    "type": "string",
                                    "description": "Email reminder sent"
                                },
                                "status": {
                                    "enum": [
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Planned\": \"Planned\"\n}"
                                },
                                "repeat_until": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Repeat until",
                                    "example": "2021-05-17"
                                },
                                "email_reminder_time": {
                                    "type": "integer",
                                    "description": "Email reminder time"
                                },
                                "outlook_id": {
                                    "type": "string",
                                    "description": "Outlook id"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "description": "Sequence"
                                },
                                "host_url": {
                                    "type": "string",
                                    "description": "Host url"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date end",
                                    "example": "2021-05-17 00:00"
                                },
                                "repeat_count": {
                                    "type": "integer",
                                    "description": "Repeat count"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "repeat_dow": {
                                    "type": "integer",
                                    "description": "Repeat dow"
                                },
                                "creator": {
                                    "type": "string",
                                    "description": "Creator"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "reminder_time": {
                                    "type": "integer",
                                    "description": "Reminder time"
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "External id"
                                },
                                "gsync_lastsync": {
                                    "type": "integer",
                                    "description": "Gsync lastsync"
                                },
                                "displayed_url": {
                                    "type": "string",
                                    "description": "Displayed url"
                                },
                                "meeting_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Password"
                                },
                                "type": {
                                    "enum": [
                                        "Sugar",
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Sugar\": \"Sugar\",\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "gsync_id": {
                                    "type": "string",
                                    "description": "Gsync id"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date start",
                                    "example": "2021-05-17 00:00"
                                },
                                "join_url": {
                                    "type": "string",
                                    "description": "Join url"
                                },
                                "email_reminder_sent": {
                                    "type": "string",
                                    "description": "Email reminder sent"
                                },
                                "status": {
                                    "enum": [
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Planned\": \"Planned\"\n}"
                                },
                                "repeat_until": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Repeat until",
                                    "example": "2021-05-17"
                                },
                                "email_reminder_time": {
                                    "type": "integer",
                                    "description": "Email reminder time"
                                },
                                "outlook_id": {
                                    "type": "string",
                                    "description": "Outlook id"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "description": "Sequence"
                                },
                                "host_url": {
                                    "type": "string",
                                    "description": "Host url"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date end",
                                    "example": "2021-05-17 00:00"
                                },
                                "repeat_count": {
                                    "type": "integer",
                                    "description": "Repeat count"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "repeat_dow": {
                                    "type": "integer",
                                    "description": "Repeat dow"
                                },
                                "creator": {
                                    "type": "string",
                                    "description": "Creator"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "reminder_time": {
                                    "type": "integer",
                                    "description": "Reminder time"
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "External id"
                                },
                                "gsync_lastsync": {
                                    "type": "integer",
                                    "description": "Gsync lastsync"
                                },
                                "displayed_url": {
                                    "type": "string",
                                    "description": "Displayed url"
                                },
                                "meeting_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosProductsStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category"
                                },
                                "price": {
                                    "type": "integer",
                                    "description": "Price"
                                },
                                "aos_product_belongsto_aos_product_category_relationship": {
                                    "type": "integer",
                                    "description": "Aos product category"
                                },
                                "cost_usdollar": {
                                    "type": "integer",
                                    "description": "Cost usdollar"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "aos_product_category_id": {
                                    "type": "string",
                                    "description": "Aos product category id"
                                },
                                "price_usdollar": {
                                    "type": "integer",
                                    "description": "Price usdollar"
                                },
                                "aos_product_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "cost": {
                                    "type": "integer",
                                    "description": "Cost"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Url"
                                },
                                "aos_product_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "product_image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "part_number": {
                                    "type": "string",
                                    "description": "Part number"
                                },
                                "maincode": {
                                    "type": "string",
                                    "description": "Maincode"
                                },
                                "aos_product_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosProductsUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category"
                                },
                                "price": {
                                    "type": "integer",
                                    "description": "Price"
                                },
                                "aos_product_belongsto_aos_product_category_relationship": {
                                    "type": "integer",
                                    "description": "Aos product category"
                                },
                                "cost_usdollar": {
                                    "type": "integer",
                                    "description": "Cost usdollar"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "aos_product_category_id": {
                                    "type": "string",
                                    "description": "Aos product category id"
                                },
                                "price_usdollar": {
                                    "type": "integer",
                                    "description": "Price usdollar"
                                },
                                "aos_product_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "cost": {
                                    "type": "integer",
                                    "description": "Cost"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Url"
                                },
                                "aos_product_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "product_image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "part_number": {
                                    "type": "string",
                                    "description": "Part number"
                                },
                                "maincode": {
                                    "type": "string",
                                    "description": "Maincode"
                                },
                                "aos_product_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosProductsSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category"
                                },
                                "price": {
                                    "type": "integer",
                                    "description": "Price"
                                },
                                "aos_product_belongsto_aos_product_category_relationship": {
                                    "type": "integer",
                                    "description": "Aos product category"
                                },
                                "cost_usdollar": {
                                    "type": "integer",
                                    "description": "Cost usdollar"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "aos_product_category_id": {
                                    "type": "string",
                                    "description": "Aos product category id"
                                },
                                "price_usdollar": {
                                    "type": "integer",
                                    "description": "Price usdollar"
                                },
                                "aos_product_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "cost": {
                                    "type": "integer",
                                    "description": "Cost"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Url"
                                },
                                "aos_product_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "product_image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "part_number": {
                                    "type": "string",
                                    "description": "Part number"
                                },
                                "maincode": {
                                    "type": "string",
                                    "description": "Maincode"
                                },
                                "aos_product_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "Role"
                                },
                                "user_belongstomany_role_relationship": {
                                    "type": "integer",
                                    "description": "Roles"
                                },
                                "user_name": {
                                    "type": "string",
                                    "description": "User name"
                                },
                                "sugar_login": {
                                    "type": "string",
                                    "description": "Sugar login"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "is_admin": {
                                    "type": "string",
                                    "description": "Is admin"
                                },
                                "external_auth_only": {
                                    "type": "string",
                                    "description": "External auth only"
                                },
                                "receive_notifications": {
                                    "type": "string",
                                    "description": "Receive notifications"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "address_street": {
                                    "type": "string",
                                    "description": "Address street"
                                },
                                "address_city": {
                                    "type": "string",
                                    "description": "Address city"
                                },
                                "address_state": {
                                    "type": "string",
                                    "description": "Address state"
                                },
                                "address_country": {
                                    "type": "string",
                                    "description": "Address country"
                                },
                                "address_postalcode": {
                                    "type": "string",
                                    "description": "Address postalcode"
                                },
                                "portal_only": {
                                    "type": "string",
                                    "description": "Portal only"
                                },
                                "show_on_employees": {
                                    "type": "string",
                                    "description": "Show on employees"
                                },
                                "employee_status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to"
                                },
                                "is_group": {
                                    "type": "string",
                                    "description": "Is group"
                                },
                                "factor_auth": {
                                    "type": "string",
                                    "description": "Factor auth"
                                },
                                "factor_auth_interface": {
                                    "type": "string",
                                    "description": "Factor auth interface"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "Role"
                                },
                                "user_belongstomany_role_relationship": {
                                    "type": "integer",
                                    "description": "Roles"
                                },
                                "user_name": {
                                    "type": "string",
                                    "description": "User name"
                                },
                                "sugar_login": {
                                    "type": "string",
                                    "description": "Sugar login"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "is_admin": {
                                    "type": "string",
                                    "description": "Is admin"
                                },
                                "external_auth_only": {
                                    "type": "string",
                                    "description": "External auth only"
                                },
                                "receive_notifications": {
                                    "type": "string",
                                    "description": "Receive notifications"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "address_street": {
                                    "type": "string",
                                    "description": "Address street"
                                },
                                "address_city": {
                                    "type": "string",
                                    "description": "Address city"
                                },
                                "address_state": {
                                    "type": "string",
                                    "description": "Address state"
                                },
                                "address_country": {
                                    "type": "string",
                                    "description": "Address country"
                                },
                                "address_postalcode": {
                                    "type": "string",
                                    "description": "Address postalcode"
                                },
                                "portal_only": {
                                    "type": "string",
                                    "description": "Portal only"
                                },
                                "show_on_employees": {
                                    "type": "string",
                                    "description": "Show on employees"
                                },
                                "employee_status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to"
                                },
                                "is_group": {
                                    "type": "string",
                                    "description": "Is group"
                                },
                                "factor_auth": {
                                    "type": "string",
                                    "description": "Factor auth"
                                },
                                "factor_auth_interface": {
                                    "type": "string",
                                    "description": "Factor auth interface"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "Role"
                                },
                                "user_belongstomany_role_relationship": {
                                    "type": "integer",
                                    "description": "Roles"
                                },
                                "user_name": {
                                    "type": "string",
                                    "description": "User name"
                                },
                                "sugar_login": {
                                    "type": "string",
                                    "description": "Sugar login"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "is_admin": {
                                    "type": "string",
                                    "description": "Is admin"
                                },
                                "external_auth_only": {
                                    "type": "string",
                                    "description": "External auth only"
                                },
                                "receive_notifications": {
                                    "type": "string",
                                    "description": "Receive notifications"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "address_street": {
                                    "type": "string",
                                    "description": "Address street"
                                },
                                "address_city": {
                                    "type": "string",
                                    "description": "Address city"
                                },
                                "address_state": {
                                    "type": "string",
                                    "description": "Address state"
                                },
                                "address_country": {
                                    "type": "string",
                                    "description": "Address country"
                                },
                                "address_postalcode": {
                                    "type": "string",
                                    "description": "Address postalcode"
                                },
                                "portal_only": {
                                    "type": "string",
                                    "description": "Portal only"
                                },
                                "show_on_employees": {
                                    "type": "string",
                                    "description": "Show on employees"
                                },
                                "employee_status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to"
                                },
                                "is_group": {
                                    "type": "string",
                                    "description": "Is group"
                                },
                                "factor_auth": {
                                    "type": "string",
                                    "description": "Factor auth"
                                },
                                "factor_auth_interface": {
                                    "type": "string",
                                    "description": "Factor auth interface"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowConditionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "operator": {
                                    "type": "string",
                                    "description": "Operator"
                                },
                                "module_path": {
                                    "type": "string",
                                    "description": "Module path"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "value_type": {
                                    "enum": [
                                        "value",
                                        "field"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Field"
                                },
                                "condition_order": {
                                    "type": "integer",
                                    "description": "Condition order"
                                },
                                "aow_condition_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowConditionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "operator": {
                                    "type": "string",
                                    "description": "Operator"
                                },
                                "module_path": {
                                    "type": "string",
                                    "description": "Module path"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "value_type": {
                                    "enum": [
                                        "value",
                                        "field"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Field"
                                },
                                "condition_order": {
                                    "type": "integer",
                                    "description": "Condition order"
                                },
                                "aow_condition_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowConditionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "operator": {
                                    "type": "string",
                                    "description": "Operator"
                                },
                                "module_path": {
                                    "type": "string",
                                    "description": "Module path"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "value_type": {
                                    "enum": [
                                        "value",
                                        "field"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"value\": \"value\",\n    \"field\": \"field\"\n}"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Field"
                                },
                                "condition_order": {
                                    "type": "integer",
                                    "description": "Condition order"
                                },
                                "aow_condition_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContactsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "salutation": {
                                    "type": "string",
                                    "description": "Salutation"
                                },
                                "do_not_call": {
                                    "type": "string",
                                    "description": "Do not call"
                                },
                                "lawful_basis": {
                                    "type": "string",
                                    "description": "Lawful basis"
                                },
                                "joomla_account_id": {
                                    "type": "string",
                                    "description": "Joomla account id"
                                },
                                "date_reviewed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date reviewed",
                                    "example": "2021-05-17"
                                },
                                "primary_address_postalcode": {
                                    "type": "string",
                                    "description": "Primary address postalcode"
                                },
                                "primary_address_state": {
                                    "type": "string",
                                    "description": "Primary address state"
                                },
                                "alt_address_country": {
                                    "type": "string",
                                    "description": "Alt address country"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "portal_account_disabled": {
                                    "type": "string",
                                    "description": "Portal account disabled"
                                },
                                "lawful_basis_source": {
                                    "type": "string",
                                    "description": "Lawful basis source"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "primary_address_country": {
                                    "type": "string",
                                    "description": "Primary address country"
                                },
                                "primary_address_street": {
                                    "type": "string",
                                    "description": "Primary address street"
                                },
                                "primary_address_city": {
                                    "type": "string",
                                    "description": "Primary address city"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "alt_address_postalcode": {
                                    "type": "string",
                                    "description": "Alt address postalcode"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "assistant_phone": {
                                    "type": "string",
                                    "description": "Assistant phone"
                                },
                                "alt_address_street": {
                                    "type": "string",
                                    "description": "Alt address street"
                                },
                                "assistant": {
                                    "type": "string",
                                    "description": "Assistant"
                                },
                                "alt_address_state": {
                                    "type": "string",
                                    "description": "Alt address state"
                                },
                                "birthdate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Birthdate",
                                    "example": "2021-05-17"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "contact_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to id"
                                },
                                "alt_address_city": {
                                    "type": "string",
                                    "description": "Alt address city"
                                },
                                "contact_belongstomany_users_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.users"
                                },
                                "portal_user_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "contact_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "contact_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContactsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "salutation": {
                                    "type": "string",
                                    "description": "Salutation"
                                },
                                "do_not_call": {
                                    "type": "string",
                                    "description": "Do not call"
                                },
                                "lawful_basis": {
                                    "type": "string",
                                    "description": "Lawful basis"
                                },
                                "joomla_account_id": {
                                    "type": "string",
                                    "description": "Joomla account id"
                                },
                                "date_reviewed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date reviewed",
                                    "example": "2021-05-17"
                                },
                                "primary_address_postalcode": {
                                    "type": "string",
                                    "description": "Primary address postalcode"
                                },
                                "primary_address_state": {
                                    "type": "string",
                                    "description": "Primary address state"
                                },
                                "alt_address_country": {
                                    "type": "string",
                                    "description": "Alt address country"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "portal_account_disabled": {
                                    "type": "string",
                                    "description": "Portal account disabled"
                                },
                                "lawful_basis_source": {
                                    "type": "string",
                                    "description": "Lawful basis source"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "primary_address_country": {
                                    "type": "string",
                                    "description": "Primary address country"
                                },
                                "primary_address_street": {
                                    "type": "string",
                                    "description": "Primary address street"
                                },
                                "primary_address_city": {
                                    "type": "string",
                                    "description": "Primary address city"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "alt_address_postalcode": {
                                    "type": "string",
                                    "description": "Alt address postalcode"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "assistant_phone": {
                                    "type": "string",
                                    "description": "Assistant phone"
                                },
                                "alt_address_street": {
                                    "type": "string",
                                    "description": "Alt address street"
                                },
                                "assistant": {
                                    "type": "string",
                                    "description": "Assistant"
                                },
                                "alt_address_state": {
                                    "type": "string",
                                    "description": "Alt address state"
                                },
                                "birthdate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Birthdate",
                                    "example": "2021-05-17"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "contact_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to id"
                                },
                                "alt_address_city": {
                                    "type": "string",
                                    "description": "Alt address city"
                                },
                                "contact_belongstomany_users_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.users"
                                },
                                "portal_user_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "contact_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "contact_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContactsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "salutation": {
                                    "type": "string",
                                    "description": "Salutation"
                                },
                                "do_not_call": {
                                    "type": "string",
                                    "description": "Do not call"
                                },
                                "lawful_basis": {
                                    "type": "string",
                                    "description": "Lawful basis"
                                },
                                "joomla_account_id": {
                                    "type": "string",
                                    "description": "Joomla account id"
                                },
                                "date_reviewed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date reviewed",
                                    "example": "2021-05-17"
                                },
                                "primary_address_postalcode": {
                                    "type": "string",
                                    "description": "Primary address postalcode"
                                },
                                "primary_address_state": {
                                    "type": "string",
                                    "description": "Primary address state"
                                },
                                "alt_address_country": {
                                    "type": "string",
                                    "description": "Alt address country"
                                },
                                "department": {
                                    "type": "string",
                                    "description": "Department"
                                },
                                "portal_account_disabled": {
                                    "type": "string",
                                    "description": "Portal account disabled"
                                },
                                "lawful_basis_source": {
                                    "type": "string",
                                    "description": "Lawful basis source"
                                },
                                "phone_other": {
                                    "type": "string",
                                    "description": "Phone other"
                                },
                                "primary_address_country": {
                                    "type": "string",
                                    "description": "Primary address country"
                                },
                                "primary_address_street": {
                                    "type": "string",
                                    "description": "Primary address street"
                                },
                                "primary_address_city": {
                                    "type": "string",
                                    "description": "Primary address city"
                                },
                                "photo": {
                                    "type": "string",
                                    "description": "Photo"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "alt_address_postalcode": {
                                    "type": "string",
                                    "description": "Alt address postalcode"
                                },
                                "phone_home": {
                                    "type": "string",
                                    "description": "Phone home"
                                },
                                "assistant_phone": {
                                    "type": "string",
                                    "description": "Assistant phone"
                                },
                                "alt_address_street": {
                                    "type": "string",
                                    "description": "Alt address street"
                                },
                                "assistant": {
                                    "type": "string",
                                    "description": "Assistant"
                                },
                                "alt_address_state": {
                                    "type": "string",
                                    "description": "Alt address state"
                                },
                                "birthdate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Birthdate",
                                    "example": "2021-05-17"
                                },
                                "phone_mobile": {
                                    "type": "string",
                                    "description": "Phone mobile"
                                },
                                "contact_belongsto_reports_to_relationship": {
                                    "type": "integer",
                                    "description": "Reports to"
                                },
                                "reports_to_id": {
                                    "type": "string",
                                    "description": "Reports to id"
                                },
                                "alt_address_city": {
                                    "type": "string",
                                    "description": "Alt address city"
                                },
                                "contact_belongstomany_users_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.users"
                                },
                                "portal_user_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "phone_work": {
                                    "type": "string",
                                    "description": "Phone work"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "contact_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "contact_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsUsersStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "calls_user_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "calls_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accept1",
                                        "Accept2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsUsersUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "calls_user_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "calls_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accept1",
                                        "Accept2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsUsersSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "calls_user_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "calls_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accept1",
                                        "Accept2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAobhBusinesshoursStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "day": {
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"sunday\": \"Sunday\",\n    \"monday\": \"Monday\",\n    \"tuesday\": \"Tuesday\",\n    \"wednesday\": \"Wednesday\",\n    \"thursday\": \"Thursday\",\n    \"friday\": \"Friday\",\n    \"saturday\": \"Saturday\"\n}"
                                },
                                "closing_hours": {
                                    "type": "string",
                                    "description": "Closing hours"
                                },
                                "open_status": {
                                    "type": "string",
                                    "description": "Open status"
                                },
                                "opening_hours": {
                                    "type": "string",
                                    "description": "Opening hours"
                                },
                                "aobh_businesshour_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAobhBusinesshoursUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "day": {
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"sunday\": \"Sunday\",\n    \"monday\": \"Monday\",\n    \"tuesday\": \"Tuesday\",\n    \"wednesday\": \"Wednesday\",\n    \"thursday\": \"Thursday\",\n    \"friday\": \"Friday\",\n    \"saturday\": \"Saturday\"\n}"
                                },
                                "closing_hours": {
                                    "type": "string",
                                    "description": "Closing hours"
                                },
                                "open_status": {
                                    "type": "string",
                                    "description": "Open status"
                                },
                                "opening_hours": {
                                    "type": "string",
                                    "description": "Opening hours"
                                },
                                "aobh_businesshour_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAobhBusinesshoursSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "day": {
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"sunday\": \"Sunday\",\n    \"monday\": \"Monday\",\n    \"tuesday\": \"Tuesday\",\n    \"wednesday\": \"Wednesday\",\n    \"thursday\": \"Thursday\",\n    \"friday\": \"Friday\",\n    \"saturday\": \"Saturday\"\n}"
                                },
                                "closing_hours": {
                                    "type": "string",
                                    "description": "Closing hours"
                                },
                                "open_status": {
                                    "type": "string",
                                    "description": "Open status"
                                },
                                "opening_hours": {
                                    "type": "string",
                                    "description": "Opening hours"
                                },
                                "aobh_businesshour_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerLinkedDocumentsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "linked_document_belongsto_document_revision_relationship": {
                                    "type": "integer",
                                    "description": "Document revision"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "document_revision_id": {
                                    "type": "string",
                                    "description": "Document revision id"
                                },
                                "linked_document_belongsto_document_relationship": {
                                    "type": "integer",
                                    "description": "Document"
                                },
                                "document_id": {
                                    "type": "string",
                                    "description": "Document id"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerLinkedDocumentsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "linked_document_belongsto_document_revision_relationship": {
                                    "type": "integer",
                                    "description": "Document revision"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "document_revision_id": {
                                    "type": "string",
                                    "description": "Document revision id"
                                },
                                "linked_document_belongsto_document_relationship": {
                                    "type": "integer",
                                    "description": "Document"
                                },
                                "document_id": {
                                    "type": "string",
                                    "description": "Document id"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerLinkedDocumentsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "linked_document_belongsto_document_revision_relationship": {
                                    "type": "integer",
                                    "description": "Document revision"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "document_revision_id": {
                                    "type": "string",
                                    "description": "Document revision id"
                                },
                                "linked_document_belongsto_document_relationship": {
                                    "type": "integer",
                                    "description": "Document"
                                },
                                "document_id": {
                                    "type": "string",
                                    "description": "Document id"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFavoritesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "favorite_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFavoritesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "favorite_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFavoritesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "favorite_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSecuritygroupsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "noninheritable": {
                                    "type": "string",
                                    "description": "Noninheritable"
                                },
                                "securitygroup_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSecuritygroupsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "noninheritable": {
                                    "type": "string",
                                    "description": "Noninheritable"
                                },
                                "securitygroup_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSecuritygroupsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "noninheritable": {
                                    "type": "string",
                                    "description": "Noninheritable"
                                },
                                "securitygroup_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAopCaseEventsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aop_case_event_belongsto_case_relationship": {
                                    "type": "integer",
                                    "description": "Case"
                                },
                                "case_id": {
                                    "type": "string",
                                    "description": "Case id"
                                },
                                "aop_case_event_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAopCaseEventsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aop_case_event_belongsto_case_relationship": {
                                    "type": "integer",
                                    "description": "Case"
                                },
                                "case_id": {
                                    "type": "string",
                                    "description": "Case id"
                                },
                                "aop_case_event_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAopCaseEventsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aop_case_event_belongsto_case_relationship": {
                                    "type": "integer",
                                    "description": "Case"
                                },
                                "case_id": {
                                    "type": "string",
                                    "description": "Case id"
                                },
                                "aop_case_event_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosLineItemGroupsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_line_item_group_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "aos_line_item_group_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosLineItemGroupsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_line_item_group_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "aos_line_item_group_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosLineItemGroupsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "Number"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "subtotal_tax_amount": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_line_item_group_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "subtotal_tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal tax amount usdollar"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "aos_line_item_group_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "Filename"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "portal_flag": {
                                    "type": "string",
                                    "description": "Portal flag"
                                },
                                "note_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "note_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "embed_flag": {
                                    "type": "string",
                                    "description": "Embed flag"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "file_mime_type": {
                                    "type": "string",
                                    "description": "File mime type"
                                },
                                "note_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "Filename"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "portal_flag": {
                                    "type": "string",
                                    "description": "Portal flag"
                                },
                                "note_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "note_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "embed_flag": {
                                    "type": "string",
                                    "description": "Embed flag"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "file_mime_type": {
                                    "type": "string",
                                    "description": "File mime type"
                                },
                                "note_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "Filename"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "portal_flag": {
                                    "type": "string",
                                    "description": "Portal flag"
                                },
                                "note_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "note_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "embed_flag": {
                                    "type": "string",
                                    "description": "Embed flag"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "file_mime_type": {
                                    "type": "string",
                                    "description": "File mime type"
                                },
                                "note_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAccountsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "account_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "industry": {
                                    "type": "string",
                                    "description": "Industry"
                                },
                                "annual_revenue": {
                                    "type": "string",
                                    "description": "Annual revenue"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "account_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "account_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "account_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "rating": {
                                    "type": "string",
                                    "description": "Rating"
                                },
                                "phone_office": {
                                    "type": "string",
                                    "description": "Phone office"
                                },
                                "phone_alternate": {
                                    "type": "string",
                                    "description": "Phone alternate"
                                },
                                "website": {
                                    "type": "string",
                                    "description": "Website"
                                },
                                "ownership": {
                                    "type": "string",
                                    "description": "Ownership"
                                },
                                "employees": {
                                    "type": "string",
                                    "description": "Employees"
                                },
                                "ticker_symbol": {
                                    "type": "string",
                                    "description": "Ticker symbol"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "sic_code": {
                                    "type": "string",
                                    "description": "Sic code"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "account_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "account_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "account_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAccountsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "account_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "industry": {
                                    "type": "string",
                                    "description": "Industry"
                                },
                                "annual_revenue": {
                                    "type": "string",
                                    "description": "Annual revenue"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "account_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "account_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "account_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "rating": {
                                    "type": "string",
                                    "description": "Rating"
                                },
                                "phone_office": {
                                    "type": "string",
                                    "description": "Phone office"
                                },
                                "phone_alternate": {
                                    "type": "string",
                                    "description": "Phone alternate"
                                },
                                "website": {
                                    "type": "string",
                                    "description": "Website"
                                },
                                "ownership": {
                                    "type": "string",
                                    "description": "Ownership"
                                },
                                "employees": {
                                    "type": "string",
                                    "description": "Employees"
                                },
                                "ticker_symbol": {
                                    "type": "string",
                                    "description": "Ticker symbol"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "sic_code": {
                                    "type": "string",
                                    "description": "Sic code"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "account_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "account_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "account_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAccountsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "account_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "industry": {
                                    "type": "string",
                                    "description": "Industry"
                                },
                                "annual_revenue": {
                                    "type": "string",
                                    "description": "Annual revenue"
                                },
                                "phone_fax": {
                                    "type": "string",
                                    "description": "Phone fax"
                                },
                                "billing_address_street": {
                                    "type": "string",
                                    "description": "Billing address street"
                                },
                                "billing_address_city": {
                                    "type": "string",
                                    "description": "Billing address city"
                                },
                                "account_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "account_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "account_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "billing_address_state": {
                                    "type": "string",
                                    "description": "Billing address state"
                                },
                                "billing_address_postalcode": {
                                    "type": "string",
                                    "description": "Billing address postalcode"
                                },
                                "billing_address_country": {
                                    "type": "string",
                                    "description": "Billing address country"
                                },
                                "rating": {
                                    "type": "string",
                                    "description": "Rating"
                                },
                                "phone_office": {
                                    "type": "string",
                                    "description": "Phone office"
                                },
                                "phone_alternate": {
                                    "type": "string",
                                    "description": "Phone alternate"
                                },
                                "website": {
                                    "type": "string",
                                    "description": "Website"
                                },
                                "ownership": {
                                    "type": "string",
                                    "description": "Ownership"
                                },
                                "employees": {
                                    "type": "string",
                                    "description": "Employees"
                                },
                                "ticker_symbol": {
                                    "type": "string",
                                    "description": "Ticker symbol"
                                },
                                "shipping_address_street": {
                                    "type": "string",
                                    "description": "Shipping address street"
                                },
                                "shipping_address_city": {
                                    "type": "string",
                                    "description": "Shipping address city"
                                },
                                "shipping_address_state": {
                                    "type": "string",
                                    "description": "Shipping address state"
                                },
                                "shipping_address_postalcode": {
                                    "type": "string",
                                    "description": "Shipping address postalcode"
                                },
                                "shipping_address_country": {
                                    "type": "string",
                                    "description": "Shipping address country"
                                },
                                "sic_code": {
                                    "type": "string",
                                    "description": "Sic code"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "account_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "account_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                },
                                "account_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerInboundEmailStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "server_url": {
                                    "type": "string",
                                    "description": "Server url"
                                },
                                "email_user": {
                                    "type": "string",
                                    "description": "Email user"
                                },
                                "email_password": {
                                    "type": "string",
                                    "description": "Email password"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port"
                                },
                                "service": {
                                    "type": "string",
                                    "description": "Service"
                                },
                                "mailbox": {
                                    "type": "string",
                                    "description": "Mailbox"
                                },
                                "delete_seen": {
                                    "type": "string",
                                    "description": "Delete seen"
                                },
                                "mailbox_type": {
                                    "enum": [
                                        "MailboxType1",
                                        "MailboxType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"MailboxType1\": \"MailboxType1\",\n    \"MailboxType2\": \"MailboxType2\"\n}"
                                },
                                "template_id": {
                                    "type": "string",
                                    "description": "Template id"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "Group id"
                                },
                                "is_personal": {
                                    "type": "string",
                                    "description": "Is personal"
                                },
                                "groupfolder_id": {
                                    "type": "string",
                                    "description": "Groupfolder id"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerInboundEmailUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "server_url": {
                                    "type": "string",
                                    "description": "Server url"
                                },
                                "email_user": {
                                    "type": "string",
                                    "description": "Email user"
                                },
                                "email_password": {
                                    "type": "string",
                                    "description": "Email password"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port"
                                },
                                "service": {
                                    "type": "string",
                                    "description": "Service"
                                },
                                "mailbox": {
                                    "type": "string",
                                    "description": "Mailbox"
                                },
                                "delete_seen": {
                                    "type": "string",
                                    "description": "Delete seen"
                                },
                                "mailbox_type": {
                                    "enum": [
                                        "MailboxType1",
                                        "MailboxType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"MailboxType1\": \"MailboxType1\",\n    \"MailboxType2\": \"MailboxType2\"\n}"
                                },
                                "template_id": {
                                    "type": "string",
                                    "description": "Template id"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "Group id"
                                },
                                "is_personal": {
                                    "type": "string",
                                    "description": "Is personal"
                                },
                                "groupfolder_id": {
                                    "type": "string",
                                    "description": "Groupfolder id"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerInboundEmailSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "server_url": {
                                    "type": "string",
                                    "description": "Server url"
                                },
                                "email_user": {
                                    "type": "string",
                                    "description": "Email user"
                                },
                                "email_password": {
                                    "type": "string",
                                    "description": "Email password"
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port"
                                },
                                "service": {
                                    "type": "string",
                                    "description": "Service"
                                },
                                "mailbox": {
                                    "type": "string",
                                    "description": "Mailbox"
                                },
                                "delete_seen": {
                                    "type": "string",
                                    "description": "Delete seen"
                                },
                                "mailbox_type": {
                                    "enum": [
                                        "MailboxType1",
                                        "MailboxType2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"MailboxType1\": \"MailboxType1\",\n    \"MailboxType2\": \"MailboxType2\"\n}"
                                },
                                "template_id": {
                                    "type": "string",
                                    "description": "Template id"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "Group id"
                                },
                                "is_personal": {
                                    "type": "string",
                                    "description": "Is personal"
                                },
                                "groupfolder_id": {
                                    "type": "string",
                                    "description": "Groupfolder id"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFoldersStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "folder_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "folder_belongsto_parent_folder_relationship": {
                                    "type": "integer",
                                    "description": "Parent folder"
                                },
                                "parent_folder": {
                                    "type": "string",
                                    "description": "Parent folder"
                                },
                                "has_child": {
                                    "type": "string",
                                    "description": "Has child"
                                },
                                "is_group": {
                                    "type": "string",
                                    "description": "Is group"
                                },
                                "is_dynamic": {
                                    "type": "string",
                                    "description": "Is dynamic"
                                },
                                "dynamic_query": {
                                    "type": "string",
                                    "description": "Dynamic query"
                                },
                                "folder_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFoldersUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "folder_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "folder_belongsto_parent_folder_relationship": {
                                    "type": "integer",
                                    "description": "Parent folder"
                                },
                                "parent_folder": {
                                    "type": "string",
                                    "description": "Parent folder"
                                },
                                "has_child": {
                                    "type": "string",
                                    "description": "Has child"
                                },
                                "is_group": {
                                    "type": "string",
                                    "description": "Is group"
                                },
                                "is_dynamic": {
                                    "type": "string",
                                    "description": "Is dynamic"
                                },
                                "dynamic_query": {
                                    "type": "string",
                                    "description": "Dynamic query"
                                },
                                "folder_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFoldersSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "folder_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "folder_belongsto_parent_folder_relationship": {
                                    "type": "integer",
                                    "description": "Parent folder"
                                },
                                "parent_folder": {
                                    "type": "string",
                                    "description": "Parent folder"
                                },
                                "has_child": {
                                    "type": "string",
                                    "description": "Has child"
                                },
                                "is_group": {
                                    "type": "string",
                                    "description": "Is group"
                                },
                                "is_dynamic": {
                                    "type": "string",
                                    "description": "Is dynamic"
                                },
                                "dynamic_query": {
                                    "type": "string",
                                    "description": "Dynamic query"
                                },
                                "folder_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "orphaned": {
                                    "type": "string",
                                    "description": "Orphaned"
                                },
                                "last_synced": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last synced",
                                    "example": "2021-05-17 00:00"
                                },
                                "date_sent_received": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date sent received",
                                    "example": "2021-05-17 00:00"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "flagged": {
                                    "type": "string",
                                    "description": "Flagged"
                                },
                                "reply_to_status": {
                                    "type": "string",
                                    "description": "Reply to status"
                                },
                                "intent": {
                                    "type": "string",
                                    "description": "Intent"
                                },
                                "mailbox_id": {
                                    "type": "string",
                                    "description": "Mailbox id"
                                },
                                "parent_type": {
                                    "enum": [
                                        "opportunities",
                                        "cases",
                                        "leads",
                                        "project",
                                        "prospects",
                                        "bugs",
                                        "project_task",
                                        "accounts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"opportunities\": \"opportunities\",\n    \"cases\": \"cases\",\n    \"leads\": \"leads\",\n    \"project\": \"project\",\n    \"prospects\": \"prospects\",\n    \"bugs\": \"bugs\",\n    \"project_task\": \"project_task\",\n    \"accounts\": \"accounts\"\n}"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "uid": {
                                    "type": "string",
                                    "description": "Uid"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category id"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "email_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "orphaned": {
                                    "type": "string",
                                    "description": "Orphaned"
                                },
                                "last_synced": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last synced",
                                    "example": "2021-05-17 00:00"
                                },
                                "date_sent_received": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date sent received",
                                    "example": "2021-05-17 00:00"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "flagged": {
                                    "type": "string",
                                    "description": "Flagged"
                                },
                                "reply_to_status": {
                                    "type": "string",
                                    "description": "Reply to status"
                                },
                                "intent": {
                                    "type": "string",
                                    "description": "Intent"
                                },
                                "mailbox_id": {
                                    "type": "string",
                                    "description": "Mailbox id"
                                },
                                "parent_type": {
                                    "enum": [
                                        "opportunities",
                                        "cases",
                                        "leads",
                                        "project",
                                        "prospects",
                                        "bugs",
                                        "project_task",
                                        "accounts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"opportunities\": \"opportunities\",\n    \"cases\": \"cases\",\n    \"leads\": \"leads\",\n    \"project\": \"project\",\n    \"prospects\": \"prospects\",\n    \"bugs\": \"bugs\",\n    \"project_task\": \"project_task\",\n    \"accounts\": \"accounts\"\n}"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "uid": {
                                    "type": "string",
                                    "description": "Uid"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category id"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "email_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "orphaned": {
                                    "type": "string",
                                    "description": "Orphaned"
                                },
                                "last_synced": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Last synced",
                                    "example": "2021-05-17 00:00"
                                },
                                "date_sent_received": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date sent received",
                                    "example": "2021-05-17 00:00"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "flagged": {
                                    "type": "string",
                                    "description": "Flagged"
                                },
                                "reply_to_status": {
                                    "type": "string",
                                    "description": "Reply to status"
                                },
                                "intent": {
                                    "type": "string",
                                    "description": "Intent"
                                },
                                "mailbox_id": {
                                    "type": "string",
                                    "description": "Mailbox id"
                                },
                                "parent_type": {
                                    "enum": [
                                        "opportunities",
                                        "cases",
                                        "leads",
                                        "project",
                                        "prospects",
                                        "bugs",
                                        "project_task",
                                        "accounts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"opportunities\": \"opportunities\",\n    \"cases\": \"cases\",\n    \"leads\": \"leads\",\n    \"project\": \"project\",\n    \"prospects\": \"prospects\",\n    \"bugs\": \"bugs\",\n    \"project_task\": \"project_task\",\n    \"accounts\": \"accounts\"\n}"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "uid": {
                                    "type": "string",
                                    "description": "Uid"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category id"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "email_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosProductCategoriesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "is_parent": {
                                    "type": "string",
                                    "description": "Is parent"
                                },
                                "parent_category_id": {
                                    "type": "string",
                                    "description": "Parent category id"
                                },
                                "aos_product_category_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "aos_product_category_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosProductCategoriesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "is_parent": {
                                    "type": "string",
                                    "description": "Is parent"
                                },
                                "parent_category_id": {
                                    "type": "string",
                                    "description": "Parent category id"
                                },
                                "aos_product_category_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "aos_product_category_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosProductCategoriesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "is_parent": {
                                    "type": "string",
                                    "description": "Is parent"
                                },
                                "parent_category_id": {
                                    "type": "string",
                                    "description": "Parent category id"
                                },
                                "aos_product_category_belongsto_parent_relationship": {
                                    "type": "integer",
                                    "description": "Parent"
                                },
                                "aos_product_category_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosPdfTemplatesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "active": {
                                    "type": "string",
                                    "description": "Active"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "pdfheader": {
                                    "type": "string",
                                    "description": "Pdfheader"
                                },
                                "pdffooter": {
                                    "type": "string",
                                    "description": "Pdffooter"
                                },
                                "margin_left": {
                                    "type": "integer",
                                    "description": "Margin left"
                                },
                                "margin_right": {
                                    "type": "integer",
                                    "description": "Margin right"
                                },
                                "margin_top": {
                                    "type": "integer",
                                    "description": "Margin top"
                                },
                                "margin_bottom": {
                                    "type": "integer",
                                    "description": "Margin bottom"
                                },
                                "margin_header": {
                                    "type": "integer",
                                    "description": "Margin header"
                                },
                                "margin_footer": {
                                    "type": "integer",
                                    "description": "Margin footer"
                                },
                                "page_size": {
                                    "type": "string",
                                    "description": "Page size"
                                },
                                "orientation": {
                                    "enum": [
                                        "LANDSCAPE",
                                        "PORTRAIT"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"LANDSCAPE\": \"LANDSCAPE\",\n    \"PORTRAIT\": \"PORTRAIT\"\n}"
                                },
                                "aos_pdf_template_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosPdfTemplatesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "active": {
                                    "type": "string",
                                    "description": "Active"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "pdfheader": {
                                    "type": "string",
                                    "description": "Pdfheader"
                                },
                                "pdffooter": {
                                    "type": "string",
                                    "description": "Pdffooter"
                                },
                                "margin_left": {
                                    "type": "integer",
                                    "description": "Margin left"
                                },
                                "margin_right": {
                                    "type": "integer",
                                    "description": "Margin right"
                                },
                                "margin_top": {
                                    "type": "integer",
                                    "description": "Margin top"
                                },
                                "margin_bottom": {
                                    "type": "integer",
                                    "description": "Margin bottom"
                                },
                                "margin_header": {
                                    "type": "integer",
                                    "description": "Margin header"
                                },
                                "margin_footer": {
                                    "type": "integer",
                                    "description": "Margin footer"
                                },
                                "page_size": {
                                    "type": "string",
                                    "description": "Page size"
                                },
                                "orientation": {
                                    "enum": [
                                        "LANDSCAPE",
                                        "PORTRAIT"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"LANDSCAPE\": \"LANDSCAPE\",\n    \"PORTRAIT\": \"PORTRAIT\"\n}"
                                },
                                "aos_pdf_template_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosPdfTemplatesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "active": {
                                    "type": "string",
                                    "description": "Active"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "pdfheader": {
                                    "type": "string",
                                    "description": "Pdfheader"
                                },
                                "pdffooter": {
                                    "type": "string",
                                    "description": "Pdffooter"
                                },
                                "margin_left": {
                                    "type": "integer",
                                    "description": "Margin left"
                                },
                                "margin_right": {
                                    "type": "integer",
                                    "description": "Margin right"
                                },
                                "margin_top": {
                                    "type": "integer",
                                    "description": "Margin top"
                                },
                                "margin_bottom": {
                                    "type": "integer",
                                    "description": "Margin bottom"
                                },
                                "margin_header": {
                                    "type": "integer",
                                    "description": "Margin header"
                                },
                                "margin_footer": {
                                    "type": "integer",
                                    "description": "Margin footer"
                                },
                                "page_size": {
                                    "type": "string",
                                    "description": "Page size"
                                },
                                "orientation": {
                                    "enum": [
                                        "LANDSCAPE",
                                        "PORTRAIT"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"LANDSCAPE\": \"LANDSCAPE\",\n    \"PORTRAIT\": \"PORTRAIT\"\n}"
                                },
                                "aos_pdf_template_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProjectTaskStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "order_number": {
                                    "type": "integer",
                                    "description": "Order number"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "predecessors": {
                                    "type": "string",
                                    "description": "Predecessors"
                                },
                                "time_due": {
                                    "type": "string",
                                    "description": "Time due"
                                },
                                "time_start": {
                                    "type": "string",
                                    "description": "Time start"
                                },
                                "time_finish": {
                                    "type": "string",
                                    "description": "Time finish"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "actual_effort": {
                                    "type": "integer",
                                    "description": "Actual effort"
                                },
                                "task_number": {
                                    "type": "integer",
                                    "description": "Task number"
                                },
                                "actual_duration": {
                                    "type": "integer",
                                    "description": "Actual duration"
                                },
                                "utilization": {
                                    "type": "integer",
                                    "description": "Utilization"
                                },
                                "estimated_effort": {
                                    "type": "integer",
                                    "description": "Estimated effort"
                                },
                                "duration": {
                                    "type": "integer",
                                    "description": "Duration"
                                },
                                "relationship_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "milestone_flag": {
                                    "type": "string",
                                    "description": "Milestone flag"
                                },
                                "duration_unit": {
                                    "enum": [
                                        "Seconds",
                                        "Hours",
                                        "Days",
                                        "Weeks",
                                        "Months"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Seconds\": \"Seconds\",\n    \"Hours\": \"Hours\",\n    \"Days\": \"Days\",\n    \"Weeks\": \"Weeks\",\n    \"Months\": \"Months\"\n}"
                                },
                                "date_finish": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date finish",
                                    "example": "2021-05-17"
                                },
                                "date_due": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date due",
                                    "example": "2021-05-17"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active",
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\",\n    \"Planned\": \"Planned\"\n}"
                                },
                                "project_task_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProjectTaskUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "order_number": {
                                    "type": "integer",
                                    "description": "Order number"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "predecessors": {
                                    "type": "string",
                                    "description": "Predecessors"
                                },
                                "time_due": {
                                    "type": "string",
                                    "description": "Time due"
                                },
                                "time_start": {
                                    "type": "string",
                                    "description": "Time start"
                                },
                                "time_finish": {
                                    "type": "string",
                                    "description": "Time finish"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "actual_effort": {
                                    "type": "integer",
                                    "description": "Actual effort"
                                },
                                "task_number": {
                                    "type": "integer",
                                    "description": "Task number"
                                },
                                "actual_duration": {
                                    "type": "integer",
                                    "description": "Actual duration"
                                },
                                "utilization": {
                                    "type": "integer",
                                    "description": "Utilization"
                                },
                                "estimated_effort": {
                                    "type": "integer",
                                    "description": "Estimated effort"
                                },
                                "duration": {
                                    "type": "integer",
                                    "description": "Duration"
                                },
                                "relationship_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "milestone_flag": {
                                    "type": "string",
                                    "description": "Milestone flag"
                                },
                                "duration_unit": {
                                    "enum": [
                                        "Seconds",
                                        "Hours",
                                        "Days",
                                        "Weeks",
                                        "Months"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Seconds\": \"Seconds\",\n    \"Hours\": \"Hours\",\n    \"Days\": \"Days\",\n    \"Weeks\": \"Weeks\",\n    \"Months\": \"Months\"\n}"
                                },
                                "date_finish": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date finish",
                                    "example": "2021-05-17"
                                },
                                "date_due": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date due",
                                    "example": "2021-05-17"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active",
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\",\n    \"Planned\": \"Planned\"\n}"
                                },
                                "project_task_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProjectTaskSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "order_number": {
                                    "type": "integer",
                                    "description": "Order number"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date start",
                                    "example": "2021-05-17"
                                },
                                "percent_complete": {
                                    "type": "integer",
                                    "description": "Percent complete"
                                },
                                "predecessors": {
                                    "type": "string",
                                    "description": "Predecessors"
                                },
                                "time_due": {
                                    "type": "string",
                                    "description": "Time due"
                                },
                                "time_start": {
                                    "type": "string",
                                    "description": "Time start"
                                },
                                "time_finish": {
                                    "type": "string",
                                    "description": "Time finish"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "actual_effort": {
                                    "type": "integer",
                                    "description": "Actual effort"
                                },
                                "task_number": {
                                    "type": "integer",
                                    "description": "Task number"
                                },
                                "actual_duration": {
                                    "type": "integer",
                                    "description": "Actual duration"
                                },
                                "utilization": {
                                    "type": "integer",
                                    "description": "Utilization"
                                },
                                "estimated_effort": {
                                    "type": "integer",
                                    "description": "Estimated effort"
                                },
                                "duration": {
                                    "type": "integer",
                                    "description": "Duration"
                                },
                                "relationship_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "milestone_flag": {
                                    "type": "string",
                                    "description": "Milestone flag"
                                },
                                "duration_unit": {
                                    "enum": [
                                        "Seconds",
                                        "Hours",
                                        "Days",
                                        "Weeks",
                                        "Months"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Seconds\": \"Seconds\",\n    \"Hours\": \"Hours\",\n    \"Days\": \"Days\",\n    \"Weeks\": \"Weeks\",\n    \"Months\": \"Months\"\n}"
                                },
                                "date_finish": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date finish",
                                    "example": "2021-05-17"
                                },
                                "date_due": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date due",
                                    "example": "2021-05-17"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active",
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\",\n    \"Planned\": \"Planned\"\n}"
                                },
                                "project_task_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgAreasStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country"
                                },
                                "jjwg_area_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgAreasUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country"
                                },
                                "jjwg_area_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerJjwgAreasSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "City"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "State"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "Country"
                                },
                                "jjwg_area_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveyquestionoptionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "survey_question_id": {
                                    "type": "string",
                                    "description": "Survey question id"
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "description": "Sort order"
                                },
                                "surveyquestionoption_belongsto_survey_question_relationship": {
                                    "type": "integer",
                                    "description": "Survey question"
                                },
                                "surveyquestionoption_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveyquestionoptionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "survey_question_id": {
                                    "type": "string",
                                    "description": "Survey question id"
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "description": "Sort order"
                                },
                                "surveyquestionoption_belongsto_survey_question_relationship": {
                                    "type": "integer",
                                    "description": "Survey question"
                                },
                                "surveyquestionoption_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSurveyquestionoptionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "survey_question_id": {
                                    "type": "string",
                                    "description": "Survey question id"
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "description": "Sort order"
                                },
                                "surveyquestionoption_belongsto_survey_question_relationship": {
                                    "type": "integer",
                                    "description": "Survey question"
                                },
                                "surveyquestionoption_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsRescheduleStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "calls_reschedule_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Reason"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "calls_reschedule_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsRescheduleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "calls_reschedule_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Reason"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "calls_reschedule_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsRescheduleSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "calls_reschedule_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Reason"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "calls_reschedule_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailTemplatesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Subject"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "body_html": {
                                    "type": "string",
                                    "description": "Body html"
                                },
                                "text_only": {
                                    "type": "string",
                                    "description": "Text only"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "published": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "email_template_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailTemplatesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Subject"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "body_html": {
                                    "type": "string",
                                    "description": "Body html"
                                },
                                "text_only": {
                                    "type": "string",
                                    "description": "Text only"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "published": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "email_template_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailTemplatesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Subject"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "body_html": {
                                    "type": "string",
                                    "description": "Body html"
                                },
                                "text_only": {
                                    "type": "string",
                                    "description": "Text only"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "published": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "email_template_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorChartsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aor_chart_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "y_field": {
                                    "type": "integer",
                                    "description": "Y field"
                                },
                                "x_field": {
                                    "type": "integer",
                                    "description": "X field"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorChartsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aor_chart_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "y_field": {
                                    "type": "integer",
                                    "description": "Y field"
                                },
                                "x_field": {
                                    "type": "integer",
                                    "description": "X field"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorChartsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aor_chart_belongsto_aor_report_relationship": {
                                    "type": "integer",
                                    "description": "Aor report"
                                },
                                "aor_report_id": {
                                    "type": "string",
                                    "description": "Aor report id"
                                },
                                "y_field": {
                                    "type": "integer",
                                    "description": "Y field"
                                },
                                "x_field": {
                                    "type": "integer",
                                    "description": "X field"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date start",
                                    "example": "2021-05-17 00:00"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date end",
                                    "example": "2021-05-17 00:00"
                                },
                                "direction": {
                                    "enum": [
                                        "INCOMING",
                                        "OUTGOING"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INCOMING\": \"INCOMING\",\n    \"OUTGOING\": \"OUTGOING\"\n}"
                                },
                                "reminder_time": {
                                    "type": "integer",
                                    "description": "Reminder time"
                                },
                                "email_reminder_time": {
                                    "type": "integer",
                                    "description": "Email reminder time"
                                },
                                "email_reminder_sent": {
                                    "type": "string",
                                    "description": "Email reminder sent"
                                },
                                "outlook_id": {
                                    "type": "string",
                                    "description": "Outlook id"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive",
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\",\n    \"Planned\": \"Planned\"\n}"
                                },
                                "call_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date start",
                                    "example": "2021-05-17 00:00"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date end",
                                    "example": "2021-05-17 00:00"
                                },
                                "direction": {
                                    "enum": [
                                        "INCOMING",
                                        "OUTGOING"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INCOMING\": \"INCOMING\",\n    \"OUTGOING\": \"OUTGOING\"\n}"
                                },
                                "reminder_time": {
                                    "type": "integer",
                                    "description": "Reminder time"
                                },
                                "email_reminder_time": {
                                    "type": "integer",
                                    "description": "Email reminder time"
                                },
                                "email_reminder_sent": {
                                    "type": "string",
                                    "description": "Email reminder sent"
                                },
                                "outlook_id": {
                                    "type": "string",
                                    "description": "Outlook id"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive",
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\",\n    \"Planned\": \"Planned\"\n}"
                                },
                                "call_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "duration_hours": {
                                    "type": "integer",
                                    "description": "Duration hours"
                                },
                                "duration_minutes": {
                                    "type": "integer",
                                    "description": "Duration minutes"
                                },
                                "date_start": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date start",
                                    "example": "2021-05-17 00:00"
                                },
                                "date_end": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Date end",
                                    "example": "2021-05-17 00:00"
                                },
                                "direction": {
                                    "enum": [
                                        "INCOMING",
                                        "OUTGOING"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INCOMING\": \"INCOMING\",\n    \"OUTGOING\": \"OUTGOING\"\n}"
                                },
                                "reminder_time": {
                                    "type": "integer",
                                    "description": "Reminder time"
                                },
                                "email_reminder_time": {
                                    "type": "integer",
                                    "description": "Email reminder time"
                                },
                                "email_reminder_sent": {
                                    "type": "string",
                                    "description": "Email reminder sent"
                                },
                                "outlook_id": {
                                    "type": "string",
                                    "description": "Outlook id"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive",
                                        "Planned"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\",\n    \"Planned\": \"Planned\"\n}"
                                },
                                "call_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsUsersStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "meetings_user_belongsto_meeting_relationship": {
                                    "type": "integer",
                                    "description": "Meeting"
                                },
                                "meeting_id": {
                                    "type": "string",
                                    "description": "Meeting id"
                                },
                                "meetings_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accept1",
                                        "Accept2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsUsersUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "meetings_user_belongsto_meeting_relationship": {
                                    "type": "integer",
                                    "description": "Meeting"
                                },
                                "meeting_id": {
                                    "type": "string",
                                    "description": "Meeting id"
                                },
                                "meetings_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accept1",
                                        "Accept2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMeetingsUsersSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "meetings_user_belongsto_meeting_relationship": {
                                    "type": "integer",
                                    "description": "Meeting"
                                },
                                "meeting_id": {
                                    "type": "string",
                                    "description": "Meeting id"
                                },
                                "meetings_user_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "User"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User id"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accept1",
                                        "Accept2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accept1\": \"Accept1\",\n    \"Accept2\": \"Accept2\"\n}"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Y\",\n    \"0\": \"N\"\n}"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowProcessedStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "aow_processed_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowProcessedUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "aow_processed_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowProcessedSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "aow_workflow_id": {
                                    "type": "string",
                                    "description": "Aow workflow id"
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "Parent id"
                                },
                                "parent_type": {
                                    "type": "string",
                                    "description": "Parent type"
                                },
                                "aow_processed_belongsto_aow_workflow_relationship": {
                                    "type": "integer",
                                    "description": "Aow workflow"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerDocumentRevisionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "change_log": {
                                    "type": "string",
                                    "description": "Change log"
                                },
                                "doc_id": {
                                    "type": "string",
                                    "description": "Doc id"
                                },
                                "document_revision_belongsto_document_relationship": {
                                    "type": "integer",
                                    "description": "Document"
                                },
                                "doc_type": {
                                    "type": "string",
                                    "description": "Doc type"
                                },
                                "file_ext": {
                                    "type": "string",
                                    "description": "File ext"
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "Filename"
                                },
                                "file_mime_type": {
                                    "type": "string",
                                    "description": "File mime type"
                                },
                                "doc_url": {
                                    "type": "string",
                                    "description": "Doc url"
                                },
                                "revision": {
                                    "type": "string",
                                    "description": "Revision"
                                },
                                "document_id": {
                                    "type": "string",
                                    "description": "Document id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerDocumentRevisionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "change_log": {
                                    "type": "string",
                                    "description": "Change log"
                                },
                                "doc_id": {
                                    "type": "string",
                                    "description": "Doc id"
                                },
                                "document_revision_belongsto_document_relationship": {
                                    "type": "integer",
                                    "description": "Document"
                                },
                                "doc_type": {
                                    "type": "string",
                                    "description": "Doc type"
                                },
                                "file_ext": {
                                    "type": "string",
                                    "description": "File ext"
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "Filename"
                                },
                                "file_mime_type": {
                                    "type": "string",
                                    "description": "File mime type"
                                },
                                "doc_url": {
                                    "type": "string",
                                    "description": "Doc url"
                                },
                                "revision": {
                                    "type": "string",
                                    "description": "Revision"
                                },
                                "document_id": {
                                    "type": "string",
                                    "description": "Document id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerDocumentRevisionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "change_log": {
                                    "type": "string",
                                    "description": "Change log"
                                },
                                "doc_id": {
                                    "type": "string",
                                    "description": "Doc id"
                                },
                                "document_revision_belongsto_document_relationship": {
                                    "type": "integer",
                                    "description": "Document"
                                },
                                "doc_type": {
                                    "type": "string",
                                    "description": "Doc type"
                                },
                                "file_ext": {
                                    "type": "string",
                                    "description": "File ext"
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "Filename"
                                },
                                "file_mime_type": {
                                    "type": "string",
                                    "description": "File mime type"
                                },
                                "doc_url": {
                                    "type": "string",
                                    "description": "Doc url"
                                },
                                "revision": {
                                    "type": "string",
                                    "description": "Revision"
                                },
                                "document_id": {
                                    "type": "string",
                                    "description": "Document id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerOpportunitiesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "sales_stage": {
                                    "enum": [
                                        "Stage1",
                                        "Stage2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                                },
                                "probability": {
                                    "type": "integer",
                                    "description": "Probability"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "opportunity_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "opportunity_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "date_closed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date closed",
                                    "example": "2021-05-17"
                                },
                                "amount": {
                                    "type": "integer",
                                    "description": "Amount"
                                },
                                "opportunity_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "amount_usdollar": {
                                    "type": "integer",
                                    "description": "Amount usdollar"
                                },
                                "next_step": {
                                    "type": "string",
                                    "description": "Next step"
                                },
                                "opportunity_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerOpportunitiesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "sales_stage": {
                                    "enum": [
                                        "Stage1",
                                        "Stage2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                                },
                                "probability": {
                                    "type": "integer",
                                    "description": "Probability"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "opportunity_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "opportunity_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "date_closed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date closed",
                                    "example": "2021-05-17"
                                },
                                "amount": {
                                    "type": "integer",
                                    "description": "Amount"
                                },
                                "opportunity_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "amount_usdollar": {
                                    "type": "integer",
                                    "description": "Amount usdollar"
                                },
                                "next_step": {
                                    "type": "string",
                                    "description": "Next step"
                                },
                                "opportunity_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerOpportunitiesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "lead_source": {
                                    "type": "string",
                                    "description": "Lead source"
                                },
                                "sales_stage": {
                                    "enum": [
                                        "Stage1",
                                        "Stage2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Stage1\": \"Stage1\",\n    \"Stage2\": \"Stage2\"\n}"
                                },
                                "probability": {
                                    "type": "integer",
                                    "description": "Probability"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                },
                                "opportunity_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "opportunity_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "date_closed": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Date closed",
                                    "example": "2021-05-17"
                                },
                                "amount": {
                                    "type": "integer",
                                    "description": "Amount"
                                },
                                "opportunity_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "amount_usdollar": {
                                    "type": "integer",
                                    "description": "Amount usdollar"
                                },
                                "next_step": {
                                    "type": "string",
                                    "description": "Next step"
                                },
                                "opportunity_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailCacheStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "mbox": {
                                    "type": "string",
                                    "description": "Mbox"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Subject"
                                },
                                "msgno": {
                                    "type": "integer",
                                    "description": "Msgno"
                                },
                                "draft": {
                                    "type": "string",
                                    "description": "Draft"
                                },
                                "seen": {
                                    "type": "string",
                                    "description": "Seen"
                                },
                                "recent": {
                                    "type": "string",
                                    "description": "Recent"
                                },
                                "senddate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Senddate",
                                    "example": "2021-05-17 00:00"
                                },
                                "message_id": {
                                    "type": "string",
                                    "description": "Message id"
                                },
                                "imap_uid": {
                                    "type": "integer",
                                    "description": "Imap uid"
                                },
                                "mailsize": {
                                    "type": "integer",
                                    "description": "Mailsize"
                                },
                                "fromaddr": {
                                    "type": "string",
                                    "description": "Fromaddr"
                                },
                                "flagged": {
                                    "type": "string",
                                    "description": "Flagged"
                                },
                                "toaddr": {
                                    "type": "string",
                                    "description": "Toaddr"
                                },
                                "answered": {
                                    "type": "string",
                                    "description": "Answered"
                                },
                                "email_cache_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailCacheUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "mbox": {
                                    "type": "string",
                                    "description": "Mbox"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Subject"
                                },
                                "msgno": {
                                    "type": "integer",
                                    "description": "Msgno"
                                },
                                "draft": {
                                    "type": "string",
                                    "description": "Draft"
                                },
                                "seen": {
                                    "type": "string",
                                    "description": "Seen"
                                },
                                "recent": {
                                    "type": "string",
                                    "description": "Recent"
                                },
                                "senddate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Senddate",
                                    "example": "2021-05-17 00:00"
                                },
                                "message_id": {
                                    "type": "string",
                                    "description": "Message id"
                                },
                                "imap_uid": {
                                    "type": "integer",
                                    "description": "Imap uid"
                                },
                                "mailsize": {
                                    "type": "integer",
                                    "description": "Mailsize"
                                },
                                "fromaddr": {
                                    "type": "string",
                                    "description": "Fromaddr"
                                },
                                "flagged": {
                                    "type": "string",
                                    "description": "Flagged"
                                },
                                "toaddr": {
                                    "type": "string",
                                    "description": "Toaddr"
                                },
                                "answered": {
                                    "type": "string",
                                    "description": "Answered"
                                },
                                "email_cache_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerEmailCacheSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "mbox": {
                                    "type": "string",
                                    "description": "Mbox"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Subject"
                                },
                                "msgno": {
                                    "type": "integer",
                                    "description": "Msgno"
                                },
                                "draft": {
                                    "type": "string",
                                    "description": "Draft"
                                },
                                "seen": {
                                    "type": "string",
                                    "description": "Seen"
                                },
                                "recent": {
                                    "type": "string",
                                    "description": "Recent"
                                },
                                "senddate": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Senddate",
                                    "example": "2021-05-17 00:00"
                                },
                                "message_id": {
                                    "type": "string",
                                    "description": "Message id"
                                },
                                "imap_uid": {
                                    "type": "integer",
                                    "description": "Imap uid"
                                },
                                "mailsize": {
                                    "type": "integer",
                                    "description": "Mailsize"
                                },
                                "fromaddr": {
                                    "type": "string",
                                    "description": "Fromaddr"
                                },
                                "flagged": {
                                    "type": "string",
                                    "description": "Flagged"
                                },
                                "toaddr": {
                                    "type": "string",
                                    "description": "Toaddr"
                                },
                                "answered": {
                                    "type": "string",
                                    "description": "Answered"
                                },
                                "email_cache_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSpotsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "config": {
                                    "type": "string",
                                    "description": "Config"
                                },
                                "spot_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSpotsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "config": {
                                    "type": "string",
                                    "description": "Config"
                                },
                                "spot_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSpotsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "config": {
                                    "type": "string",
                                    "description": "Config"
                                },
                                "spot_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowWorkflowStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "flow_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "flow_run_on": {
                                    "type": "string",
                                    "description": "Flow run on"
                                },
                                "run_when": {
                                    "type": "string",
                                    "description": "Run when"
                                },
                                "multiple_runs": {
                                    "type": "string",
                                    "description": "Multiple runs"
                                },
                                "run_on_import": {
                                    "type": "string",
                                    "description": "Run on import"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "aow_workflow_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowWorkflowUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "flow_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "flow_run_on": {
                                    "type": "string",
                                    "description": "Flow run on"
                                },
                                "run_when": {
                                    "type": "string",
                                    "description": "Run when"
                                },
                                "multiple_runs": {
                                    "type": "string",
                                    "description": "Multiple runs"
                                },
                                "run_on_import": {
                                    "type": "string",
                                    "description": "Run on import"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "aow_workflow_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowWorkflowSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "flow_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "flow_run_on": {
                                    "type": "string",
                                    "description": "Flow run on"
                                },
                                "run_when": {
                                    "type": "string",
                                    "description": "Run when"
                                },
                                "multiple_runs": {
                                    "type": "string",
                                    "description": "Multiple runs"
                                },
                                "run_on_import": {
                                    "type": "string",
                                    "description": "Run on import"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "aow_workflow_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerImportMapsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "module": {
                                    "type": "string",
                                    "description": "Module"
                                },
                                "enclosure": {
                                    "enum": [
                                        " ",
                                        ",",
                                        ";",
                                        "|"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                                },
                                "is_published": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "default_values": {
                                    "type": "string",
                                    "description": "Default values"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source"
                                },
                                "delimiter": {
                                    "enum": [
                                        " ",
                                        ",",
                                        ";",
                                        "|"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content"
                                },
                                "has_header": {
                                    "type": "string",
                                    "description": "Has header"
                                },
                                "import_map_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerImportMapsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "module": {
                                    "type": "string",
                                    "description": "Module"
                                },
                                "enclosure": {
                                    "enum": [
                                        " ",
                                        ",",
                                        ";",
                                        "|"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                                },
                                "is_published": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "default_values": {
                                    "type": "string",
                                    "description": "Default values"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source"
                                },
                                "delimiter": {
                                    "enum": [
                                        " ",
                                        ",",
                                        ";",
                                        "|"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content"
                                },
                                "has_header": {
                                    "type": "string",
                                    "description": "Has header"
                                },
                                "import_map_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerImportMapsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "module": {
                                    "type": "string",
                                    "description": "Module"
                                },
                                "enclosure": {
                                    "enum": [
                                        " ",
                                        ",",
                                        ";",
                                        "|"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                                },
                                "is_published": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "default_values": {
                                    "type": "string",
                                    "description": "Default values"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source"
                                },
                                "delimiter": {
                                    "enum": [
                                        " ",
                                        ",",
                                        ";",
                                        "|"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \" \": \" \",\n    \",\": \",\",\n    \";\": \";\",\n    \"|\": \"|\"\n}"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content"
                                },
                                "has_header": {
                                    "type": "string",
                                    "description": "Has header"
                                },
                                "import_map_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAopCaseUpdatesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "internal": {
                                    "type": "string",
                                    "description": "Internal"
                                },
                                "aop_case_update_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "aop_case_update_belongsto_case_relationship": {
                                    "type": "integer",
                                    "description": "Case"
                                },
                                "aop_case_update_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "case_id": {
                                    "type": "string",
                                    "description": "Case id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAopCaseUpdatesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "internal": {
                                    "type": "string",
                                    "description": "Internal"
                                },
                                "aop_case_update_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "aop_case_update_belongsto_case_relationship": {
                                    "type": "integer",
                                    "description": "Case"
                                },
                                "aop_case_update_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "case_id": {
                                    "type": "string",
                                    "description": "Case id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAopCaseUpdatesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "internal": {
                                    "type": "string",
                                    "description": "Internal"
                                },
                                "aop_case_update_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "aop_case_update_belongsto_case_relationship": {
                                    "type": "integer",
                                    "description": "Case"
                                },
                                "aop_case_update_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "case_id": {
                                    "type": "string",
                                    "description": "Case id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowProcessedAowActionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "status": {
                                    "enum": [
                                        "Pending",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Pending\": \"Pending\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aow_processed_aow_action_belongsto_aow_action_relationship": {
                                    "type": "integer",
                                    "description": "Aow action"
                                },
                                "aow_action_id": {
                                    "type": "string",
                                    "description": "Aow action id"
                                },
                                "aow_processed_aow_action_belongsto_aow_processed_relationship": {
                                    "type": "integer",
                                    "description": "Aow processed"
                                },
                                "aow_processed_id": {
                                    "type": "string",
                                    "description": "Aow processed id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowProcessedAowActionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "status": {
                                    "enum": [
                                        "Pending",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Pending\": \"Pending\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aow_processed_aow_action_belongsto_aow_action_relationship": {
                                    "type": "integer",
                                    "description": "Aow action"
                                },
                                "aow_action_id": {
                                    "type": "string",
                                    "description": "Aow action id"
                                },
                                "aow_processed_aow_action_belongsto_aow_processed_relationship": {
                                    "type": "integer",
                                    "description": "Aow processed"
                                },
                                "aow_processed_id": {
                                    "type": "string",
                                    "description": "Aow processed id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAowProcessedAowActionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "status": {
                                    "enum": [
                                        "Pending",
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Pending\": \"Pending\",\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "aow_processed_aow_action_belongsto_aow_action_relationship": {
                                    "type": "integer",
                                    "description": "Aow action"
                                },
                                "aow_action_id": {
                                    "type": "string",
                                    "description": "Aow action id"
                                },
                                "aow_processed_aow_action_belongsto_aow_processed_relationship": {
                                    "type": "integer",
                                    "description": "Aow processed"
                                },
                                "aow_processed_id": {
                                    "type": "string",
                                    "description": "Aow processed id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCampaignTrkrsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "tracker_name": {
                                    "type": "string",
                                    "description": "Tracker name"
                                },
                                "tracker_url": {
                                    "type": "string",
                                    "description": "Tracker url"
                                },
                                "tracker_key": {
                                    "type": "integer",
                                    "description": "Tracker key"
                                },
                                "is_optout": {
                                    "type": "string",
                                    "description": "Is optout"
                                },
                                "campaign_trkr_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCampaignTrkrsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "tracker_name": {
                                    "type": "string",
                                    "description": "Tracker name"
                                },
                                "tracker_url": {
                                    "type": "string",
                                    "description": "Tracker url"
                                },
                                "tracker_key": {
                                    "type": "integer",
                                    "description": "Tracker key"
                                },
                                "is_optout": {
                                    "type": "string",
                                    "description": "Is optout"
                                },
                                "campaign_trkr_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCampaignTrkrsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "tracker_name": {
                                    "type": "string",
                                    "description": "Tracker name"
                                },
                                "tracker_url": {
                                    "type": "string",
                                    "description": "Tracker url"
                                },
                                "tracker_key": {
                                    "type": "integer",
                                    "description": "Tracker key"
                                },
                                "is_optout": {
                                    "type": "string",
                                    "description": "Is optout"
                                },
                                "campaign_trkr_belongsto_campaign_relationship": {
                                    "type": "integer",
                                    "description": "Campaign"
                                },
                                "campaign_id": {
                                    "type": "string",
                                    "description": "Campaign id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProjectStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "estimated_end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Estimated end date",
                                    "example": "2021-05-17"
                                },
                                "project_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "estimated_start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Estimated start date",
                                    "example": "2021-05-17"
                                },
                                "override_business_hours": {
                                    "type": "string",
                                    "description": "Override business hours"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "project_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "project_belongstomany_accounts_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.accounts"
                                },
                                "project_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "project_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProjectUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "estimated_end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Estimated end date",
                                    "example": "2021-05-17"
                                },
                                "project_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "estimated_start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Estimated start date",
                                    "example": "2021-05-17"
                                },
                                "override_business_hours": {
                                    "type": "string",
                                    "description": "Override business hours"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "project_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "project_belongstomany_accounts_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.accounts"
                                },
                                "project_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "project_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerProjectSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "estimated_end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Estimated end date",
                                    "example": "2021-05-17"
                                },
                                "project_belongstomany_bugs_relationship": {
                                    "type": "integer",
                                    "description": "Bugs"
                                },
                                "estimated_start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Estimated start date",
                                    "example": "2021-05-17"
                                },
                                "override_business_hours": {
                                    "type": "string",
                                    "description": "Override business hours"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "project_belongstomany_opportunities_relationship": {
                                    "type": "integer",
                                    "description": "Opportunities"
                                },
                                "project_belongstomany_accounts_relationship": {
                                    "type": "integer",
                                    "description": "joy-voyager-crm::seeders.data_rows.accounts"
                                },
                                "project_belongstomany_contacts_relationship": {
                                    "type": "integer",
                                    "description": "Contacts"
                                },
                                "project_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPostsStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "PUBLISHED",
                                        "DRAFT",
                                        "PENDING"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"PUBLISHED\": \"published\",\n    \"DRAFT\": \"draft\",\n    \"PENDING\": \"pending\"\n}"
                                },
                                "seo_title": {
                                    "type": "string",
                                    "description": "SEO Title"
                                },
                                "featured": {
                                    "type": "string",
                                    "description": "Featured"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPostsUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "author_id": {
                                    "type": "string",
                                    "description": "Author"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "PUBLISHED",
                                        "DRAFT",
                                        "PENDING"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"PUBLISHED\": \"published\",\n    \"DRAFT\": \"draft\",\n    \"PENDING\": \"pending\"\n}"
                                },
                                "seo_title": {
                                    "type": "string",
                                    "description": "SEO Title"
                                },
                                "featured": {
                                    "type": "string",
                                    "description": "Featured"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPostsSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "author_id": {
                                    "type": "string",
                                    "description": "Author"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "PUBLISHED",
                                        "DRAFT",
                                        "PENDING"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"PUBLISHED\": \"published\",\n    \"DRAFT\": \"draft\",\n    \"PENDING\": \"pending\"\n}"
                                },
                                "seo_title": {
                                    "type": "string",
                                    "description": "SEO Title"
                                },
                                "featured": {
                                    "type": "string",
                                    "description": "Featured"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRemindersInviteesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "reminder_id": {
                                    "type": "string",
                                    "description": "Reminder id"
                                },
                                "related_invitee_module_id": {
                                    "type": "string",
                                    "description": "Related invitee module id"
                                },
                                "reminders_invitee_belongsto_reminder_relationship": {
                                    "type": "integer",
                                    "description": "Reminder"
                                },
                                "related_invitee_module": {
                                    "enum": [
                                        "Module1",
                                        "Module2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                                },
                                "reminders_invitee_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRemindersInviteesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "reminder_id": {
                                    "type": "string",
                                    "description": "Reminder id"
                                },
                                "related_invitee_module_id": {
                                    "type": "string",
                                    "description": "Related invitee module id"
                                },
                                "reminders_invitee_belongsto_reminder_relationship": {
                                    "type": "integer",
                                    "description": "Reminder"
                                },
                                "related_invitee_module": {
                                    "enum": [
                                        "Module1",
                                        "Module2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                                },
                                "reminders_invitee_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRemindersInviteesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "reminder_id": {
                                    "type": "string",
                                    "description": "Reminder id"
                                },
                                "related_invitee_module_id": {
                                    "type": "string",
                                    "description": "Related invitee module id"
                                },
                                "reminders_invitee_belongsto_reminder_relationship": {
                                    "type": "integer",
                                    "description": "Reminder"
                                },
                                "related_invitee_module": {
                                    "enum": [
                                        "Module1",
                                        "Module2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Module1\": \"Module1\",\n    \"Module2\": \"Module2\"\n}"
                                },
                                "reminders_invitee_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBugsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "bug_number": {
                                    "type": "integer",
                                    "description": "Bug number"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "resolution": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "work_log": {
                                    "type": "string",
                                    "description": "Work log"
                                },
                                "found_in_release": {
                                    "type": "string",
                                    "description": "Found in release"
                                },
                                "bug_belongsto_found_in_release_relationship": {
                                    "type": "integer",
                                    "description": "Found in release"
                                },
                                "fixed_in_release": {
                                    "type": "string",
                                    "description": "Fixed in release"
                                },
                                "bug_belongsto_fixed_in_release_relationship": {
                                    "type": "integer",
                                    "description": "Fixed in release"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source"
                                },
                                "product_category": {
                                    "type": "string",
                                    "description": "Product category"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "bug_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBugsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "bug_number": {
                                    "type": "integer",
                                    "description": "Bug number"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "resolution": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "work_log": {
                                    "type": "string",
                                    "description": "Work log"
                                },
                                "found_in_release": {
                                    "type": "string",
                                    "description": "Found in release"
                                },
                                "bug_belongsto_found_in_release_relationship": {
                                    "type": "integer",
                                    "description": "Found in release"
                                },
                                "fixed_in_release": {
                                    "type": "string",
                                    "description": "Fixed in release"
                                },
                                "bug_belongsto_fixed_in_release_relationship": {
                                    "type": "integer",
                                    "description": "Fixed in release"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source"
                                },
                                "product_category": {
                                    "type": "string",
                                    "description": "Product category"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "bug_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBugsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "bug_number": {
                                    "type": "integer",
                                    "description": "Bug number"
                                },
                                "type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "priority": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Low\": \"Low\",\n    \"Medium\": \"Medium\",\n    \"High\": \"High\"\n}"
                                },
                                "resolution": {
                                    "enum": [
                                        "Yes",
                                        "No"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Yes\": \"Yes\",\n    \"No\": \"No\"\n}"
                                },
                                "work_log": {
                                    "type": "string",
                                    "description": "Work log"
                                },
                                "found_in_release": {
                                    "type": "string",
                                    "description": "Found in release"
                                },
                                "bug_belongsto_found_in_release_relationship": {
                                    "type": "integer",
                                    "description": "Found in release"
                                },
                                "fixed_in_release": {
                                    "type": "string",
                                    "description": "Fixed in release"
                                },
                                "bug_belongsto_fixed_in_release_relationship": {
                                    "type": "integer",
                                    "description": "Fixed in release"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source"
                                },
                                "product_category": {
                                    "type": "string",
                                    "description": "Product category"
                                },
                                "status": {
                                    "enum": [
                                        "Active",
                                        "Inactive"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Active\": \"Active\",\n    \"Inactive\": \"Inactive\"\n}"
                                },
                                "bug_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsContactsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accepted",
                                        "Rejected"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accepted\": \"Accepted\",\n    \"Rejected\": \"Rejected\"\n}"
                                },
                                "calls_contact_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                                },
                                "calls_contact_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsContactsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accepted",
                                        "Rejected"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accepted\": \"Accepted\",\n    \"Rejected\": \"Rejected\"\n}"
                                },
                                "calls_contact_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                                },
                                "calls_contact_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCallsContactsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "accept_status": {
                                    "enum": [
                                        "none",
                                        "Accepted",
                                        "Rejected"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"none\": \"none\",\n    \"Accepted\": \"Accepted\",\n    \"Rejected\": \"Rejected\"\n}"
                                },
                                "calls_contact_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "required": {
                                    "enum": [
                                        1,
                                        0
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"Yes\",\n    \"0\": \"No\"\n}"
                                },
                                "calls_contact_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosContractsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "customer_signed_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Customer signed date",
                                    "example": "2021-05-17"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Start date",
                                    "example": "2021-05-17"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "aos_contract_belongsto_contract_account_relationship": {
                                    "type": "integer",
                                    "description": "Contract account"
                                },
                                "reference_code": {
                                    "type": "string",
                                    "description": "Reference code"
                                },
                                "total_contract_value": {
                                    "type": "integer",
                                    "description": "Total contract value"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "total_contract_value_usdollar": {
                                    "type": "integer",
                                    "description": "Total contract value usdollar"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "company_signed_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Company signed date",
                                    "example": "2021-05-17"
                                },
                                "contract_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "renewal_reminder_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Renewal reminder date",
                                    "example": "2021-05-17 00:00"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "aos_contract_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "End date",
                                    "example": "2021-05-17"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "contract_account_id": {
                                    "type": "string",
                                    "description": "Contract account id"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_contract_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "aos_contract_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "aos_contract_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "aos_contract_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosContractsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "customer_signed_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Customer signed date",
                                    "example": "2021-05-17"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Start date",
                                    "example": "2021-05-17"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "aos_contract_belongsto_contract_account_relationship": {
                                    "type": "integer",
                                    "description": "Contract account"
                                },
                                "reference_code": {
                                    "type": "string",
                                    "description": "Reference code"
                                },
                                "total_contract_value": {
                                    "type": "integer",
                                    "description": "Total contract value"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "total_contract_value_usdollar": {
                                    "type": "integer",
                                    "description": "Total contract value usdollar"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "company_signed_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Company signed date",
                                    "example": "2021-05-17"
                                },
                                "contract_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "renewal_reminder_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Renewal reminder date",
                                    "example": "2021-05-17 00:00"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "aos_contract_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "End date",
                                    "example": "2021-05-17"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "contract_account_id": {
                                    "type": "string",
                                    "description": "Contract account id"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_contract_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "aos_contract_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "aos_contract_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "aos_contract_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAosContractsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "customer_signed_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Customer signed date",
                                    "example": "2021-05-17"
                                },
                                "total_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Total amount usdollar"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Start date",
                                    "example": "2021-05-17"
                                },
                                "total_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Total amt usdollar"
                                },
                                "call_id": {
                                    "type": "string",
                                    "description": "Call id"
                                },
                                "aos_contract_belongsto_contract_account_relationship": {
                                    "type": "integer",
                                    "description": "Contract account"
                                },
                                "reference_code": {
                                    "type": "string",
                                    "description": "Reference code"
                                },
                                "total_contract_value": {
                                    "type": "integer",
                                    "description": "Total contract value"
                                },
                                "shipping_amount": {
                                    "type": "integer",
                                    "description": "Shipping amount"
                                },
                                "shipping_tax": {
                                    "type": "string",
                                    "description": "Shipping tax"
                                },
                                "total_contract_value_usdollar": {
                                    "type": "integer",
                                    "description": "Total contract value usdollar"
                                },
                                "shipping_tax_amt": {
                                    "type": "integer",
                                    "description": "Shipping tax amt"
                                },
                                "company_signed_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "Company signed date",
                                    "example": "2021-05-17"
                                },
                                "contract_type": {
                                    "enum": [
                                        "Type1",
                                        "Type2"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Type1\": \"Type1\",\n    \"Type2\": \"Type2\"\n}"
                                },
                                "subtotal_amount": {
                                    "type": "integer",
                                    "description": "Subtotal amount"
                                },
                                "total_amount": {
                                    "type": "integer",
                                    "description": "Total amount"
                                },
                                "renewal_reminder_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Renewal reminder date",
                                    "example": "2021-05-17 00:00"
                                },
                                "opportunity_id": {
                                    "type": "string",
                                    "description": "Opportunity id"
                                },
                                "tax_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Tax amount usdollar"
                                },
                                "status": {
                                    "enum": [
                                        "Inactive",
                                        "Active"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"Inactive\": \"Inactive\",\n    \"Active\": \"Active\"\n}"
                                },
                                "shipping_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping amount usdollar"
                                },
                                "currency_id": {
                                    "type": "string",
                                    "description": "Currency id"
                                },
                                "aos_contract_belongsto_contact_relationship": {
                                    "type": "integer",
                                    "description": "Contact"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})\/",
                                    "type": "date",
                                    "description": "End date",
                                    "example": "2021-05-17"
                                },
                                "tax_amount": {
                                    "type": "integer",
                                    "description": "Tax amount"
                                },
                                "contract_account_id": {
                                    "type": "string",
                                    "description": "Contract account id"
                                },
                                "subtotal_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Subtotal amount usdollar"
                                },
                                "aos_contract_belongsto_call_relationship": {
                                    "type": "integer",
                                    "description": "Call"
                                },
                                "total_amt": {
                                    "type": "integer",
                                    "description": "Total amt"
                                },
                                "contact_id": {
                                    "type": "string",
                                    "description": "Contact id"
                                },
                                "aos_contract_belongsto_currency_relationship": {
                                    "type": "integer",
                                    "description": "Currency"
                                },
                                "aos_contract_belongsto_opportunity_relationship": {
                                    "type": "integer",
                                    "description": "Opportunity"
                                },
                                "shipping_tax_amt_usdollar": {
                                    "type": "integer",
                                    "description": "Shipping tax amt usdollar"
                                },
                                "discount_amount": {
                                    "type": "integer",
                                    "description": "Discount amount"
                                },
                                "discount_amount_usdollar": {
                                    "type": "integer",
                                    "description": "Discount amount usdollar"
                                },
                                "aos_contract_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorReportsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "graphs_per_row": {
                                    "type": "integer",
                                    "description": "Graphs per row"
                                },
                                "report_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                                },
                                "aor_report_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorReportsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "graphs_per_row": {
                                    "type": "integer",
                                    "description": "Graphs per row"
                                },
                                "report_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                                },
                                "aor_report_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAorReportsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "graphs_per_row": {
                                    "type": "integer",
                                    "description": "Graphs per row"
                                },
                                "report_module": {
                                    "enum": [
                                        "accounts",
                                        "contacts",
                                        "opportunities"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"accounts\": \"accounts\",\n    \"contacts\": \"contacts\",\n    \"opportunities\": \"opportunities\"\n}"
                                },
                                "aor_report_belongsto_assigned_user_relationship": {
                                    "type": "integer",
                                    "description": "Assigned user"
                                },
                                "assigned_user_id": {
                                    "type": "string",
                                    "description": "Assigned user"
                                }
                            }
                        }
                    }
                },
                "required": true
            }
        }
    }
}